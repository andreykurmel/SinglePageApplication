diff --git a/app/Exceptions/Handler.php b/app/Exceptions/Handler.php
index d76d6eb..fad7b32 100644
--- a/app/Exceptions/Handler.php
+++ b/app/Exceptions/Handler.php
@@ -22,10 +22,7 @@ class Handler extends ExceptionHandler
      * @var array
      */
     protected $dontReport = [
-        AuthorizationException::class,
-        HttpException::class,
-        ModelNotFoundException::class,
-        ValidationException::class,
+        //
     ];
 
     /**
@@ -44,58 +41,22 @@ class Handler extends ExceptionHandler
     /**
      * Render an exception into an HTTP response.
      *
-     * @param  \Illuminate\Http\Request  $request
-     * @param  Exception  $e
-     * @return \Illuminate\Http\Response
+     * @param  \Illuminate\Http\Request $request
+     * @param  Exception $e
+     * @return Response
      */
     public function render($request, Exception $e)
     {
-        if ($e instanceof HttpResponseException) {
-            return $e->getResponse();
-        } elseif ($e instanceof ModelNotFoundException) {
-            $e = new NotFoundHttpException("Resource not found.", $e);
-        } elseif ($e instanceof AuthorizationException) {
-            $e = new HttpException(403, $e->getMessage());
-        } elseif ($e instanceof ValidationException && $e->getResponse()) {
-            return $e->getResponse();
-        } elseif ($e instanceof TokenMismatchException) {
-            return response()->view('errors.token-mismatch', [], 500);
-        }
-
-        if ($this->isHttpException($e)) {
-            if ($request->expectsJson()) {
-                return response()->json(
-                    ['error' => $e->getMessage() ?: $this->getMessageFromStatusCode($e->getStatusCode())],
-                    $e->getStatusCode()
-                );
-            }
-
-            return $this->toIlluminateResponse($this->renderHttpException($e), $e);
-        }
-
-        return config('app.debug')
-            ? $this->toIlluminateResponse($this->convertExceptionToResponse($e), $e)
-            : response()->view('errors.500', [], 500);
+        return parent::render($request, $e);
     }
 
-    /**
-     * Convert an authentication exception into an unauthenticated response.
-     *
-     * @param  \Illuminate\Http\Request  $request
-     * @param  \Illuminate\Auth\AuthenticationException  $exception
-     * @return \Illuminate\Http\Response
-     */
-    protected function unauthenticated($request, AuthenticationException $exception)
+    private function getMessageFromStatusCode($code)
     {
-        if ($request->expectsJson()) {
-            return response()->json(['error' => 'Unauthenticated.'], 401);
-        }
-
-        return redirect()->guest('login');
+        return array_get(Response::$statusTexts, $code);
     }
 
-    private function getMessageFromStatusCode($code)
+    protected function invalidJson($request, ValidationException $exception)
     {
-        return array_get(Response::$statusTexts, $code);
+        return response()->json($exception->errors(), $exception->status);
     }
 }
diff --git a/app/Http/Controllers/Web/Auth/AuthController.php b/app/Http/Controllers/Web/Auth/AuthController.php
index d727d06..ed557be 100644
--- a/app/Http/Controllers/Web/Auth/AuthController.php
+++ b/app/Http/Controllers/Web/Auth/AuthController.php
@@ -55,7 +55,7 @@ class AuthController extends Controller
      * Handle a login request to the application.
      *
      * @param LoginRequest $request
-     * @return \Illuminate\Http\Response
+     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Http\Response|AuthController
      */
     public function postLogin(LoginRequest $request)
     {
@@ -227,7 +227,7 @@ class AuthController extends Controller
     {
         return app(RateLimiter::class)->tooManyAttempts(
             $request->input($this->loginUsername()).$request->ip(),
-            $this->maxLoginAttempts(), $this->lockoutTime() / 60
+            $this->maxLoginAttempts()
         );
     }
 
@@ -240,7 +240,8 @@ class AuthController extends Controller
     protected function incrementLoginAttempts(Request $request)
     {
         app(RateLimiter::class)->hit(
-            $request->input($this->loginUsername()).$request->ip()
+            $request->input($this->loginUsername()).$request->ip(),
+            $this->lockoutTime() / 60
         );
     }
 
diff --git a/app/Http/Kernel.php b/app/Http/Kernel.php
index ae3f01e..c786c18 100644
--- a/app/Http/Kernel.php
+++ b/app/Http/Kernel.php
@@ -16,6 +16,9 @@ class Kernel extends HttpKernel
     protected $middleware = [
         \Vanguard\Http\Middleware\VerifyInstallation::class,
         \Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode::class,
+        \Vanguard\Http\Middleware\TrimStrings::class,
+        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
+        \Vanguard\Http\Middleware\TrustProxies::class,
     ];
     /**
      * The application's route middleware groups.
diff --git a/app/Http/Middleware/TrimStrings.php b/app/Http/Middleware/TrimStrings.php
new file mode 100644
index 0000000..4fad6db
--- /dev/null
+++ b/app/Http/Middleware/TrimStrings.php
@@ -0,0 +1,18 @@
+<?php
+
+namespace Vanguard\Http\Middleware;
+
+use Illuminate\Foundation\Http\Middleware\TrimStrings as Middleware;
+
+class TrimStrings extends Middleware
+{
+    /**
+     * The names of the attributes that should not be trimmed.
+     *
+     * @var array
+     */
+    protected $except = [
+        'password',
+        'password_confirmation',
+    ];
+}
diff --git a/app/Http/Middleware/TrustProxies.php b/app/Http/Middleware/TrustProxies.php
new file mode 100644
index 0000000..ecde46a
--- /dev/null
+++ b/app/Http/Middleware/TrustProxies.php
@@ -0,0 +1,29 @@
+<?php
+
+namespace Vanguard\Http\Middleware;
+
+use Illuminate\Http\Request;
+use Fideloper\Proxy\TrustProxies as Middleware;
+
+class TrustProxies extends Middleware
+{
+    /**
+     * The trusted proxies for this application.
+     *
+     * @var array
+     */
+    protected $proxies;
+
+    /**
+     * The current proxy header mappings.
+     *
+     * @var array
+     */
+    protected $headers = [
+        Request::HEADER_FORWARDED => 'FORWARDED',
+        Request::HEADER_X_FORWARDED_FOR => 'X_FORWARDED_FOR',
+        Request::HEADER_X_FORWARDED_HOST => 'X_FORWARDED_HOST',
+        Request::HEADER_X_FORWARDED_PORT => 'X_FORWARDED_PORT',
+        Request::HEADER_X_FORWARDED_PROTO => 'X_FORWARDED_PROTO',
+    ];
+}
diff --git a/app/Http/Middleware/UseApiGuard.php b/app/Http/Middleware/UseApiGuard.php
index 61c0533..be78ea2 100644
--- a/app/Http/Middleware/UseApiGuard.php
+++ b/app/Http/Middleware/UseApiGuard.php
@@ -34,6 +34,7 @@ class UseApiGuard
     public function handle($request, Closure $next)
     {
         $this->auth->shouldUse('api');
+        $request->headers->set('Accept', 'application/json');
 
         return $next($request);
     }
diff --git a/app/Http/Requests/User/UpdateLoginDetailsRequest.php b/app/Http/Requests/User/UpdateLoginDetailsRequest.php
index 626d024..9eb4996 100644
--- a/app/Http/Requests/User/UpdateLoginDetailsRequest.php
+++ b/app/Http/Requests/User/UpdateLoginDetailsRequest.php
@@ -18,8 +18,8 @@ class UpdateLoginDetailsRequest extends Request
 
         return [
             'email' => 'required|email|unique:users,email,' . $user->id,
-            'username' => 'unique:users,username,' . $user->id,
-            'password' => 'min:6|confirmed'
+            'username' => 'nullable|unique:users,username,' . $user->id,
+            'password' => 'nullable|min:6|confirmed'
         ];
     }
 
diff --git a/artisan b/artisan
index df630d0..f80e641 100644
--- a/artisan
+++ b/artisan
@@ -1,6 +1,8 @@
 #!/usr/bin/env php
 <?php
 
+define('LARAVEL_START', microtime(true));
+
 /*
 |--------------------------------------------------------------------------
 | Register The Auto Loader
@@ -13,7 +15,7 @@
 |
 */
 
-require __DIR__.'/bootstrap/autoload.php';
+require __DIR__.'/vendor/autoload.php';
 
 $app = require_once __DIR__.'/bootstrap/app.php';
 
diff --git a/bootstrap/autoload.php b/bootstrap/autoload.php
deleted file mode 100644
index 3830137..0000000
--- a/bootstrap/autoload.php
+++ /dev/null
@@ -1,34 +0,0 @@
-<?php
-
-define('LARAVEL_START', microtime(true));
-
-/*
-|--------------------------------------------------------------------------
-| Register The Composer Auto Loader
-|--------------------------------------------------------------------------
-|
-| Composer provides a convenient, automatically generated class loader
-| for our application. We just need to utilize it! We'll require it
-| into the script here so that we do not have to worry about the
-| loading of any our classes "manually". Feels great to relax.
-|
-*/
-
-require __DIR__.'/../vendor/autoload.php';
-
-/*
-|--------------------------------------------------------------------------
-| Include The Compiled Class File
-|--------------------------------------------------------------------------
-|
-| To dramatically increase your application's performance, you may use a
-| compiled class file which contains all of the classes commonly used
-| by a request. The Artisan "optimize" is used to create this file.
-|
-*/
-
-$compiledPath = __DIR__.'/cache/compiled.php';
-
-if (file_exists($compiledPath)) {
-    require $compiledPath;
-}
diff --git a/composer.json b/composer.json
index 6139c47..68496e7 100644
--- a/composer.json
+++ b/composer.json
@@ -3,16 +3,10 @@
     "description": "Advanced PHP Login and User Management",
     "keywords": ["advanced", "secure", "login", "user management", "authentication", "authorization", "register"],
     "type": "project",
-    "repositories": [
-        {
-            "type": "vcs",
-            "url": "https://github.com/loshmis/laravel-jsvalidation"
-        }
-    ],
     "require": {
         "php": ">=5.6.4",
-        "laravel/framework": "5.4.*",
-        "proengsoft/laravel-jsvalidation": "^1.6.0-dev",
+        "laravel/framework": "5.5.*",
+        "proengsoft/laravel-jsvalidation": "2.1.*",
         "laravel/socialite": "^3.0",
         "laracasts/presenter": "^0.2.1",
         "laravelcollective/html": "^5.1",
@@ -21,23 +15,26 @@
         "intervention/image": "^2.3",
         "anlutro/l4-settings": "^0.4.6",
         "anhskohbo/no-captcha": "2.*",
-        "tymon/jwt-auth": "1.0.0-beta.3",
+        "tymon/jwt-auth": "1.0.0-rc.1",
         "league/fractal": "^0.16.0",
-        "jenssegers/agent": "^2.5"
+        "jenssegers/agent": "^2.5",
+        "fideloper/proxy": "~3.3"
     },
     "require-dev": {
         "symfony/css-selector": "~3.0",
         "symfony/dom-crawler": "~3.0",
         "fzaninotto/faker": "~1.4",
         "mockery/mockery": "0.9.*",
-        "phpunit/phpunit": "~5.7",
-        "barryvdh/laravel-ide-helper": "2.2.*",
-        "barryvdh/laravel-debugbar": "2.3.*",
-        "laravel/browser-kit-testing": "^1.0"
+        "phpunit/phpunit": "~6.0",
+        "barryvdh/laravel-ide-helper": "2.4.*",
+        "barryvdh/laravel-debugbar": "3.1.*",
+        "laravel/browser-kit-testing": "^2.0",
+        "filp/whoops": "~2.0"
     },
     "autoload": {
         "classmap": [
-            "database"
+            "database/seeds",
+            "database/factories"
         ],
         "psr-4": {
             "Vanguard\\": "app/"
@@ -51,26 +48,28 @@
             "Tests\\": "tests/"
         }
     },
+    "extra": {
+        "laravel": {
+            "dont-discover": [
+            ]
+        }
+    },
     "scripts": {
-        "post-install-cmd": [
-            "php artisan clear-compiled",
-            "php artisan optimize"
-        ],
-        "post-update-cmd": [
-            "php artisan clear-compiled",
-            "php artisan optimize"
-        ],
         "post-root-package-install": [
-            "php -r \"copy('.env.example', '.env');\""
+            "@php -r \"copy('.env.example', '.env');\""
         ],
         "post-create-project-cmd": [
-            "php artisan key:generate"
+            "@php artisan key:generate"
+        ],
+
+        "post-autoload-dump": [
+            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
+            "@php artisan package:discover"
         ]
     },
     "config": {
-        "preferred-install": "dist"
-    },
-
-    "minimum-stability": "dev",
-    "prefer-stable": true
+        "preferred-install": "dist",
+        "sort-packages": true,
+        "optimize-autoloader": true
+    }
 }
diff --git a/composer.lock b/composer.lock
index d9f7705..3a38821 100644
--- a/composer.lock
+++ b/composer.lock
@@ -4,29 +4,39 @@
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file",
         "This file is @generated automatically"
     ],
-    "hash": "d6ed6faf011ba9c40b9c02b6f8fc4863",
-    "content-hash": "9300a3185d3f75a929cfb60795119ef3",
+    "hash": "e8c1e8c032db302bc3152ddab94454fc",
+    "content-hash": "6201b59af8308187ae76f8002e73160d",
     "packages": [
         {
             "name": "anhskohbo/no-captcha",
-            "version": "2.3.0",
+            "version": "2.4.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/anhskohbo/no-captcha.git",
-                "reference": "4f729a21999f496db9580fc4625a0f837ef53adc"
+                "reference": "cc0bacff1bb59f518af135ee3beae39bed079724"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/anhskohbo/no-captcha/zipball/4f729a21999f496db9580fc4625a0f837ef53adc",
-                "reference": "4f729a21999f496db9580fc4625a0f837ef53adc",
+                "url": "https://api.github.com/repos/anhskohbo/no-captcha/zipball/cc0bacff1bb59f518af135ee3beae39bed079724",
+                "reference": "cc0bacff1bb59f518af135ee3beae39bed079724",
                 "shasum": ""
             },
             "require": {
                 "guzzlehttp/guzzle": "^6.2",
-                "illuminate/support": "5.0.*|5.1.*|5.2.*|5.3.*|5.4.*",
+                "illuminate/support": "5.0.*|5.1.*|5.2.*|5.3.*|5.4.*|5.5.*",
                 "php": ">=5.5.5"
             },
             "type": "library",
+            "extra": {
+                "laravel": {
+                    "providers": [
+                        "Anhskohbo\\NoCaptcha\\NoCaptchaServiceProvider"
+                    ],
+                    "aliases": {
+                        "NoCaptcha": "Anhskohbo\\NoCaptcha\\Facades\\NoCaptcha"
+                    }
+                }
+            },
             "autoload": {
                 "psr-4": {
                     "Anhskohbo\\NoCaptcha\\": "src/"
@@ -51,7 +61,7 @@
                 "no-captcha",
                 "recaptcha"
             ],
-            "time": "2017-01-30 19:35:26"
+            "time": "2017-08-30 18:36:57"
         },
         {
             "name": "anlutro/l4-settings",
@@ -101,33 +111,33 @@
         },
         {
             "name": "doctrine/inflector",
-            "version": "v1.1.0",
+            "version": "v1.2.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/doctrine/inflector.git",
-                "reference": "90b2128806bfde671b6952ab8bea493942c1fdae"
+                "reference": "e11d84c6e018beedd929cff5220969a3c6d1d462"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/doctrine/inflector/zipball/90b2128806bfde671b6952ab8bea493942c1fdae",
-                "reference": "90b2128806bfde671b6952ab8bea493942c1fdae",
+                "url": "https://api.github.com/repos/doctrine/inflector/zipball/e11d84c6e018beedd929cff5220969a3c6d1d462",
+                "reference": "e11d84c6e018beedd929cff5220969a3c6d1d462",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.2"
+                "php": "^7.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "4.*"
+                "phpunit/phpunit": "^6.2"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.1.x-dev"
+                    "dev-master": "1.2.x-dev"
                 }
             },
             "autoload": {
-                "psr-0": {
-                    "Doctrine\\Common\\Inflector\\": "lib/"
+                "psr-4": {
+                    "Doctrine\\Common\\Inflector\\": "lib/Doctrine/Common/Inflector"
                 }
             },
             "notification-url": "https://packagist.org/downloads/",
@@ -164,7 +174,118 @@
                 "singularize",
                 "string"
             ],
-            "time": "2015-11-06 14:35:42"
+            "time": "2017-07-22 12:18:28"
+        },
+        {
+            "name": "doctrine/lexer",
+            "version": "v1.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/doctrine/lexer.git",
+                "reference": "83893c552fd2045dd78aef794c31e694c37c0b8c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/doctrine/lexer/zipball/83893c552fd2045dd78aef794c31e694c37c0b8c",
+                "reference": "83893c552fd2045dd78aef794c31e694c37c0b8c",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.3.2"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-0": {
+                    "Doctrine\\Common\\Lexer\\": "lib/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Roman Borschel",
+                    "email": "roman@code-factory.org"
+                },
+                {
+                    "name": "Guilherme Blanco",
+                    "email": "guilhermeblanco@gmail.com"
+                },
+                {
+                    "name": "Johannes Schmitt",
+                    "email": "schmittjoh@gmail.com"
+                }
+            ],
+            "description": "Base library for a lexer that can be used in Top-Down, Recursive Descent Parsers.",
+            "homepage": "http://www.doctrine-project.org",
+            "keywords": [
+                "lexer",
+                "parser"
+            ],
+            "time": "2014-09-09 13:34:57"
+        },
+        {
+            "name": "egulias/email-validator",
+            "version": "2.1.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/egulias/EmailValidator.git",
+                "reference": "bc31baa11ea2883e017f0a10d9722ef9d50eac1c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/egulias/EmailValidator/zipball/bc31baa11ea2883e017f0a10d9722ef9d50eac1c",
+                "reference": "bc31baa11ea2883e017f0a10d9722ef9d50eac1c",
+                "shasum": ""
+            },
+            "require": {
+                "doctrine/lexer": "^1.0.1",
+                "php": ">= 5.5"
+            },
+            "require-dev": {
+                "dominicsayers/isemail": "dev-master",
+                "phpunit/phpunit": "^4.8.0",
+                "satooshi/php-coveralls": "dev-master"
+            },
+            "suggest": {
+                "ext-intl": "PHP Internationalization Libraries are required to use the SpoofChecking validation"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Egulias\\EmailValidator\\": "EmailValidator"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Eduardo Gulias Davis"
+                }
+            ],
+            "description": "A library for validating emails against several RFCs",
+            "homepage": "https://github.com/egulias/EmailValidator",
+            "keywords": [
+                "email",
+                "emailvalidation",
+                "emailvalidator",
+                "validation",
+                "validator"
+            ],
+            "time": "2017-01-30 22:07:36"
         },
         {
             "name": "erusev/parsedown",
@@ -209,6 +330,63 @@
             "time": "2017-05-14 14:47:48"
         },
         {
+            "name": "fideloper/proxy",
+            "version": "3.3.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/fideloper/TrustedProxy.git",
+                "reference": "9cdf6f118af58d89764249bbcc7bb260c132924f"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/fideloper/TrustedProxy/zipball/9cdf6f118af58d89764249bbcc7bb260c132924f",
+                "reference": "9cdf6f118af58d89764249bbcc7bb260c132924f",
+                "shasum": ""
+            },
+            "require": {
+                "illuminate/contracts": "~5.0",
+                "php": ">=5.4.0"
+            },
+            "require-dev": {
+                "illuminate/http": "~5.0",
+                "mockery/mockery": "~0.9.3",
+                "phpunit/phpunit": "^5.7"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.3-dev"
+                },
+                "laravel": {
+                    "providers": [
+                        "Fideloper\\Proxy\\TrustedProxyServiceProvider"
+                    ]
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Fideloper\\Proxy\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Chris Fidao",
+                    "email": "fideloper@gmail.com"
+                }
+            ],
+            "description": "Set trusted proxies for Laravel",
+            "keywords": [
+                "load balancing",
+                "proxy",
+                "trusted proxy"
+            ],
+            "time": "2017-06-15 17:19:42"
+        },
+        {
             "name": "guzzlehttp/guzzle",
             "version": "6.3.0",
             "source": {
@@ -391,16 +569,16 @@
         },
         {
             "name": "intervention/image",
-            "version": "2.4.0",
+            "version": "2.4.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/Intervention/image.git",
-                "reference": "322a4ade249467179c50a3e50eda8760ff3af2a3"
+                "reference": "3603dbcc9a17d307533473246a6c58c31cf17919"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/Intervention/image/zipball/322a4ade249467179c50a3e50eda8760ff3af2a3",
-                "reference": "322a4ade249467179c50a3e50eda8760ff3af2a3",
+                "url": "https://api.github.com/repos/Intervention/image/zipball/3603dbcc9a17d307533473246a6c58c31cf17919",
+                "reference": "3603dbcc9a17d307533473246a6c58c31cf17919",
                 "shasum": ""
             },
             "require": {
@@ -457,20 +635,20 @@
                 "thumbnail",
                 "watermark"
             ],
-            "time": "2017-07-03 15:50:40"
+            "time": "2017-09-21 16:29:17"
         },
         {
             "name": "jaybizzle/crawler-detect",
-            "version": "v1.2.51",
+            "version": "v1.2.54",
             "source": {
                 "type": "git",
                 "url": "https://github.com/JayBizzle/Crawler-Detect.git",
-                "reference": "be9074b1206ba7b5ac5662f900295edc088a9da8"
+                "reference": "9af25770d9382917b680009a88497162405bbe48"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/JayBizzle/Crawler-Detect/zipball/be9074b1206ba7b5ac5662f900295edc088a9da8",
-                "reference": "be9074b1206ba7b5ac5662f900295edc088a9da8",
+                "url": "https://api.github.com/repos/JayBizzle/Crawler-Detect/zipball/9af25770d9382917b680009a88497162405bbe48",
+                "reference": "9af25770d9382917b680009a88497162405bbe48",
                 "shasum": ""
             },
             "require": {
@@ -506,7 +684,7 @@
                 "crawlerdetect",
                 "php crawler detect"
             ],
-            "time": "2017-08-07 18:48:00"
+            "time": "2017-10-28 13:05:55"
         },
         {
             "name": "jenssegers/agent",
@@ -623,16 +801,16 @@
         },
         {
             "name": "laravel/framework",
-            "version": "v5.4.33",
+            "version": "v5.5.19",
             "source": {
                 "type": "git",
                 "url": "https://github.com/laravel/framework.git",
-                "reference": "e53a81a2bf406f501cdf818ad949f8d6c8dabfc0"
+                "reference": "c678100e84934ec85c9f8bc26bd0a60222682719"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/laravel/framework/zipball/e53a81a2bf406f501cdf818ad949f8d6c8dabfc0",
-                "reference": "e53a81a2bf406f501cdf818ad949f8d6c8dabfc0",
+                "url": "https://api.github.com/repos/laravel/framework/zipball/c678100e84934ec85c9f8bc26bd0a60222682719",
+                "reference": "c678100e84934ec85c9f8bc26bd0a60222682719",
                 "shasum": ""
             },
             "require": {
@@ -641,21 +819,22 @@
                 "ext-mbstring": "*",
                 "ext-openssl": "*",
                 "league/flysystem": "~1.0",
-                "monolog/monolog": "~1.11",
+                "monolog/monolog": "~1.12",
                 "mtdowling/cron-expression": "~1.0",
                 "nesbot/carbon": "~1.20",
-                "paragonie/random_compat": "~1.4|~2.0",
-                "php": ">=5.6.4",
+                "php": ">=7.0",
+                "psr/container": "~1.0",
+                "psr/simple-cache": "^1.0",
                 "ramsey/uuid": "~3.0",
-                "swiftmailer/swiftmailer": "~5.4",
-                "symfony/console": "~3.2",
-                "symfony/debug": "~3.2",
-                "symfony/finder": "~3.2",
-                "symfony/http-foundation": "~3.2",
-                "symfony/http-kernel": "~3.2",
-                "symfony/process": "~3.2",
-                "symfony/routing": "~3.2",
-                "symfony/var-dumper": "~3.2",
+                "swiftmailer/swiftmailer": "~6.0",
+                "symfony/console": "~3.3",
+                "symfony/debug": "~3.3",
+                "symfony/finder": "~3.3",
+                "symfony/http-foundation": "~3.3",
+                "symfony/http-kernel": "~3.3",
+                "symfony/process": "~3.3",
+                "symfony/routing": "~3.3",
+                "symfony/var-dumper": "~3.3",
                 "tijsverkoyen/css-to-inline-styles": "~2.2",
                 "vlucas/phpdotenv": "~2.2"
             },
@@ -672,7 +851,6 @@
                 "illuminate/database": "self.version",
                 "illuminate/encryption": "self.version",
                 "illuminate/events": "self.version",
-                "illuminate/exception": "self.version",
                 "illuminate/filesystem": "self.version",
                 "illuminate/hashing": "self.version",
                 "illuminate/http": "self.version",
@@ -694,12 +872,14 @@
             "require-dev": {
                 "aws/aws-sdk-php": "~3.0",
                 "doctrine/dbal": "~2.5",
-                "mockery/mockery": "~0.9.4",
+                "filp/whoops": "^2.1.4",
+                "mockery/mockery": "~1.0",
+                "orchestra/testbench-core": "3.5.*",
                 "pda/pheanstalk": "~3.0",
-                "phpunit/phpunit": "~5.7",
-                "predis/predis": "~1.0",
-                "symfony/css-selector": "~3.2",
-                "symfony/dom-crawler": "~3.2"
+                "phpunit/phpunit": "~6.0",
+                "predis/predis": "^1.1.1",
+                "symfony/css-selector": "~3.3",
+                "symfony/dom-crawler": "~3.3"
             },
             "suggest": {
                 "aws/aws-sdk-php": "Required to use the SQS queue driver and SES mail driver (~3.0).",
@@ -713,14 +893,14 @@
                 "pda/pheanstalk": "Required to use the beanstalk queue driver (~3.0).",
                 "predis/predis": "Required to use the redis cache and queue drivers (~1.0).",
                 "pusher/pusher-php-server": "Required to use the Pusher broadcast driver (~2.0).",
-                "symfony/css-selector": "Required to use some of the crawler integration testing tools (~3.2).",
-                "symfony/dom-crawler": "Required to use most of the crawler integration testing tools (~3.2).",
-                "symfony/psr-http-message-bridge": "Required to psr7 bridging features (0.2.*)."
+                "symfony/css-selector": "Required to use some of the crawler integration testing tools (~3.3).",
+                "symfony/dom-crawler": "Required to use most of the crawler integration testing tools (~3.3).",
+                "symfony/psr-http-message-bridge": "Required to psr7 bridging features (~1.0)."
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "5.4-dev"
+                    "dev-master": "5.5-dev"
                 }
             },
             "autoload": {
@@ -748,20 +928,20 @@
                 "framework",
                 "laravel"
             ],
-            "time": "2017-08-14 20:17:41"
+            "time": "2017-10-25 19:10:45"
         },
         {
             "name": "laravel/socialite",
-            "version": "v3.0.7",
+            "version": "v3.0.9",
             "source": {
                 "type": "git",
                 "url": "https://github.com/laravel/socialite.git",
-                "reference": "d79174513dbf14359b53e44394cf71373ae03433"
+                "reference": "fc1c8d415699e502f3e61cbc61e3250d5bd942eb"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/laravel/socialite/zipball/d79174513dbf14359b53e44394cf71373ae03433",
-                "reference": "d79174513dbf14359b53e44394cf71373ae03433",
+                "url": "https://api.github.com/repos/laravel/socialite/zipball/fc1c8d415699e502f3e61cbc61e3250d5bd942eb",
+                "reference": "fc1c8d415699e502f3e61cbc61e3250d5bd942eb",
                 "shasum": ""
             },
             "require": {
@@ -810,36 +990,47 @@
                 "laravel",
                 "oauth"
             ],
-            "time": "2017-07-22 14:44:37"
+            "time": "2017-11-06 16:02:48"
         },
         {
             "name": "laravelcollective/html",
-            "version": "v5.4.8",
+            "version": "v5.5.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/LaravelCollective/html.git",
-                "reference": "9b8f51e7a2368911c896f5d42757886bae0717b5"
+                "reference": "2f6dc39ab3655724a615fe8a652d8b7f04fc9ac6"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/LaravelCollective/html/zipball/9b8f51e7a2368911c896f5d42757886bae0717b5",
-                "reference": "9b8f51e7a2368911c896f5d42757886bae0717b5",
+                "url": "https://api.github.com/repos/LaravelCollective/html/zipball/2f6dc39ab3655724a615fe8a652d8b7f04fc9ac6",
+                "reference": "2f6dc39ab3655724a615fe8a652d8b7f04fc9ac6",
                 "shasum": ""
             },
             "require": {
-                "illuminate/http": "5.4.*",
-                "illuminate/routing": "5.4.*",
-                "illuminate/session": "5.4.*",
-                "illuminate/support": "5.4.*",
-                "illuminate/view": "5.4.*",
-                "php": ">=5.6.4"
+                "illuminate/http": "5.5.*",
+                "illuminate/routing": "5.5.*",
+                "illuminate/session": "5.5.*",
+                "illuminate/support": "5.5.*",
+                "illuminate/view": "5.5.*",
+                "php": ">=7.0.0"
             },
             "require-dev": {
-                "illuminate/database": "5.4.*",
+                "illuminate/database": "5.5.*",
                 "mockery/mockery": "~0.9.4",
                 "phpunit/phpunit": "~5.4"
             },
             "type": "library",
+            "extra": {
+                "laravel": {
+                    "providers": [
+                        "Collective\\Html\\HtmlServiceProvider"
+                    ],
+                    "aliases": {
+                        "Form": "Collective\\Html\\FormFacade",
+                        "Html": "Collective\\Html\\HtmlFacade"
+                    }
+                }
+            },
             "autoload": {
                 "psr-4": {
                     "Collective\\Html\\": "src/"
@@ -864,7 +1055,7 @@
             ],
             "description": "HTML and Form Builders for the Laravel Framework",
             "homepage": "http://laravelcollective.com",
-            "time": "2017-05-22 06:35:07"
+            "time": "2017-08-31 14:46:03"
         },
         {
             "name": "league/flysystem",
@@ -1078,16 +1269,16 @@
         },
         {
             "name": "mobiledetect/mobiledetectlib",
-            "version": "2.8.25",
+            "version": "2.8.26",
             "source": {
                 "type": "git",
                 "url": "https://github.com/serbanghita/Mobile-Detect.git",
-                "reference": "f0896b5c7274d1450023b0b376240be902c3251c"
+                "reference": "a0ed86c9d7c04ae27fa6418b55e3beb04dfe3297"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/serbanghita/Mobile-Detect/zipball/f0896b5c7274d1450023b0b376240be902c3251c",
-                "reference": "f0896b5c7274d1450023b0b376240be902c3251c",
+                "url": "https://api.github.com/repos/serbanghita/Mobile-Detect/zipball/a0ed86c9d7c04ae27fa6418b55e3beb04dfe3297",
+                "reference": "a0ed86c9d7c04ae27fa6418b55e3beb04dfe3297",
                 "shasum": ""
             },
             "require": {
@@ -1126,7 +1317,7 @@
                 "mobile detector",
                 "php mobile detect"
             ],
-            "time": "2017-03-29 13:59:30"
+            "time": "2017-08-29 18:23:54"
         },
         {
             "name": "monolog/monolog",
@@ -1208,7 +1399,7 @@
         },
         {
             "name": "mtdowling/cron-expression",
-            "version": "v1.2.0",
+            "version": "v1.2.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/mtdowling/cron-expression.git",
@@ -1416,39 +1607,50 @@
         },
         {
             "name": "proengsoft/laravel-jsvalidation",
-            "version": "v1.6.1",
+            "version": "2.1.0",
             "source": {
                 "type": "git",
-                "url": "https://github.com/loshmis/laravel-jsvalidation.git",
-                "reference": "4f4ca141be93b5572536f11ee85b724b79395d20"
+                "url": "https://github.com/proengsoft/laravel-jsvalidation.git",
+                "reference": "ca03bf933fa021a950b5bc6065534225c20f902c"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/loshmis/laravel-jsvalidation/zipball/4f4ca141be93b5572536f11ee85b724b79395d20",
-                "reference": "4f4ca141be93b5572536f11ee85b724b79395d20",
+                "url": "https://api.github.com/repos/proengsoft/laravel-jsvalidation/zipball/ca03bf933fa021a950b5bc6065534225c20f902c",
+                "reference": "ca03bf933fa021a950b5bc6065534225c20f902c",
                 "shasum": ""
             },
             "require": {
-                "illuminate/config": "~5.4",
-                "illuminate/contracts": "~5.4",
-                "illuminate/http": "~5.4",
-                "illuminate/support": "~5.4",
-                "illuminate/translation": "~5.4",
-                "illuminate/validation": "~5.4",
-                "illuminate/view": "~5.4",
-                "php": ">=5.4.0"
+                "illuminate/config": "5.4.*|5.5.*",
+                "illuminate/contracts": "5.4.*|5.5.*",
+                "illuminate/http": "5.4.*|5.5.*",
+                "illuminate/support": "5.4.*|5.5.*",
+                "illuminate/translation": "5.4.*|5.5.*",
+                "illuminate/validation": "5.4.*|5.5.*",
+                "illuminate/view": "5.4.*|5.5.*",
+                "php": ">=5.6.4"
             },
             "require-dev": {
-                "mockery/mockery": "~0.9",
-                "phpunit/phpunit": "~4.0"
+                "friendsofphp/php-cs-fixer": "^2.3",
+                "mockery/mockery": "~0.9.4",
+                "phpunit/phpunit": "~5.7"
             },
             "type": "library",
+            "extra": {
+                "laravel": {
+                    "providers": [
+                        "Proengsoft\\JsValidation\\JsValidationServiceProvider"
+                    ],
+                    "aliases": {
+                        "JsValidator": "Proengsoft\\JsValidation\\Facades\\JsValidatorFacade"
+                    }
+                }
+            },
             "autoload": {
                 "psr-4": {
-                    "Proengsoft\\JsValidation\\": "src",
-                    "Proengsoft\\JsValidation\\Tests\\": "tests"
+                    "Proengsoft\\JsValidation\\": "src"
                 }
             },
+            "notification-url": "https://packagist.org/downloads/",
             "license": [
                 "MIT"
             ],
@@ -1457,6 +1659,11 @@
                     "name": "Albert Moreno",
                     "email": "albert@memorylimit.net",
                     "homepage": "https://github.com/torrentalle"
+                },
+                {
+                    "name": "Anton Komarev",
+                    "email": "a.komarev@cybercog.su",
+                    "homepage": "http://ell.folio.su/"
                 }
             ],
             "description": "Validate forms transparently with Javascript reusing your Laravel Validation Rules, Messages, and FormRequest",
@@ -1470,10 +1677,56 @@
                 "validation",
                 "validator"
             ],
-            "support": {
-                "source": "https://github.com/loshmis/laravel-jsvalidation/tree/master"
+            "time": "2017-08-30 20:59:15"
+        },
+        {
+            "name": "psr/container",
+            "version": "1.0.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/container.git",
+                "reference": "b7ce3b176482dbbc1245ebf52b181af44c2cf55f"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/container/zipball/b7ce3b176482dbbc1245ebf52b181af44c2cf55f",
+                "reference": "b7ce3b176482dbbc1245ebf52b181af44c2cf55f",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.3.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
             },
-            "time": "2017-04-25 10:51:55"
+            "autoload": {
+                "psr-4": {
+                    "Psr\\Container\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "http://www.php-fig.org/"
+                }
+            ],
+            "description": "Common Container Interface (PHP FIG PSR-11)",
+            "homepage": "https://github.com/php-fig/container",
+            "keywords": [
+                "PSR-11",
+                "container",
+                "container-interface",
+                "container-interop",
+                "psr"
+            ],
+            "time": "2017-02-14 16:28:37"
         },
         {
             "name": "psr/http-message",
@@ -1573,17 +1826,65 @@
             "time": "2016-10-10 12:19:37"
         },
         {
+            "name": "psr/simple-cache",
+            "version": "1.0.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/simple-cache.git",
+                "reference": "753fa598e8f3b9966c886fe13f370baa45ef0e24"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/simple-cache/zipball/753fa598e8f3b9966c886fe13f370baa45ef0e24",
+                "reference": "753fa598e8f3b9966c886fe13f370baa45ef0e24",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.3.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Psr\\SimpleCache\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "http://www.php-fig.org/"
+                }
+            ],
+            "description": "Common interfaces for simple caching",
+            "keywords": [
+                "cache",
+                "caching",
+                "psr",
+                "psr-16",
+                "simple-cache"
+            ],
+            "time": "2017-01-02 13:31:39"
+        },
+        {
             "name": "ramsey/uuid",
-            "version": "3.7.0",
+            "version": "3.7.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/ramsey/uuid.git",
-                "reference": "0ef23d1b10cf1bc576e9d865a7e9c47982c5715e"
+                "reference": "45cffe822057a09e05f7bd09ec5fb88eeecd2334"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/ramsey/uuid/zipball/0ef23d1b10cf1bc576e9d865a7e9c47982c5715e",
-                "reference": "0ef23d1b10cf1bc576e9d865a7e9c47982c5715e",
+                "url": "https://api.github.com/repos/ramsey/uuid/zipball/45cffe822057a09e05f7bd09ec5fb88eeecd2334",
+                "reference": "45cffe822057a09e05f7bd09ec5fb88eeecd2334",
                 "shasum": ""
             },
             "require": {
@@ -1652,33 +1953,34 @@
                 "identifier",
                 "uuid"
             ],
-            "time": "2017-08-04 13:39:04"
+            "time": "2017-09-22 20:46:04"
         },
         {
             "name": "swiftmailer/swiftmailer",
-            "version": "v5.4.8",
+            "version": "v6.0.2",
             "source": {
                 "type": "git",
                 "url": "https://github.com/swiftmailer/swiftmailer.git",
-                "reference": "9a06dc570a0367850280eefd3f1dc2da45aef517"
+                "reference": "412333372fb6c8ffb65496a2bbd7321af75733fc"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/swiftmailer/swiftmailer/zipball/9a06dc570a0367850280eefd3f1dc2da45aef517",
-                "reference": "9a06dc570a0367850280eefd3f1dc2da45aef517",
+                "url": "https://api.github.com/repos/swiftmailer/swiftmailer/zipball/412333372fb6c8ffb65496a2bbd7321af75733fc",
+                "reference": "412333372fb6c8ffb65496a2bbd7321af75733fc",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3"
+                "egulias/email-validator": "~2.0",
+                "php": ">=7.0.0"
             },
             "require-dev": {
                 "mockery/mockery": "~0.9.1",
-                "symfony/phpunit-bridge": "~3.2"
+                "symfony/phpunit-bridge": "~3.3@dev"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "5.4-dev"
+                    "dev-master": "6.0-dev"
                 }
             },
             "autoload": {
@@ -1700,30 +2002,30 @@
                 }
             ],
             "description": "Swiftmailer, free feature-rich PHP mailer",
-            "homepage": "http://swiftmailer.org",
+            "homepage": "http://swiftmailer.symfony.com",
             "keywords": [
                 "email",
                 "mail",
                 "mailer"
             ],
-            "time": "2017-05-01 15:54:03"
+            "time": "2017-09-30 22:39:41"
         },
         {
             "name": "symfony/console",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/console.git",
-                "reference": "b0878233cb5c4391347e5495089c7af11b8e6201"
+                "reference": "116bc56e45a8e5572e51eb43ab58c769a352366c"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/console/zipball/b0878233cb5c4391347e5495089c7af11b8e6201",
-                "reference": "b0878233cb5c4391347e5495089c7af11b8e6201",
+                "url": "https://api.github.com/repos/symfony/console/zipball/116bc56e45a8e5572e51eb43ab58c769a352366c",
+                "reference": "116bc56e45a8e5572e51eb43ab58c769a352366c",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9",
+                "php": "^5.5.9|>=7.0.8",
                 "symfony/debug": "~2.8|~3.0",
                 "symfony/polyfill-mbstring": "~1.0"
             },
@@ -1736,7 +2038,6 @@
                 "symfony/dependency-injection": "~3.3",
                 "symfony/event-dispatcher": "~2.8|~3.0",
                 "symfony/filesystem": "~2.8|~3.0",
-                "symfony/http-kernel": "~2.8|~3.0",
                 "symfony/process": "~2.8|~3.0"
             },
             "suggest": {
@@ -1775,24 +2076,24 @@
             ],
             "description": "Symfony Console Component",
             "homepage": "https://symfony.com",
-            "time": "2017-07-29 21:27:59"
+            "time": "2017-10-02 06:42:24"
         },
         {
             "name": "symfony/css-selector",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/css-selector.git",
-                "reference": "4d882dced7b995d5274293039370148e291808f2"
+                "reference": "07447650225ca9223bd5c97180fe7c8267f7d332"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/css-selector/zipball/4d882dced7b995d5274293039370148e291808f2",
-                "reference": "4d882dced7b995d5274293039370148e291808f2",
+                "url": "https://api.github.com/repos/symfony/css-selector/zipball/07447650225ca9223bd5c97180fe7c8267f7d332",
+                "reference": "07447650225ca9223bd5c97180fe7c8267f7d332",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9"
+                "php": "^5.5.9|>=7.0.8"
             },
             "type": "library",
             "extra": {
@@ -1828,24 +2129,24 @@
             ],
             "description": "Symfony CssSelector Component",
             "homepage": "https://symfony.com",
-            "time": "2017-05-01 15:01:29"
+            "time": "2017-10-02 06:42:24"
         },
         {
             "name": "symfony/debug",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/debug.git",
-                "reference": "7c13ae8ce1e2adbbd574fc39de7be498e1284e13"
+                "reference": "eb95d9ce8f18dcc1b3dfff00cb624c402be78ffd"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/debug/zipball/7c13ae8ce1e2adbbd574fc39de7be498e1284e13",
-                "reference": "7c13ae8ce1e2adbbd574fc39de7be498e1284e13",
+                "url": "https://api.github.com/repos/symfony/debug/zipball/eb95d9ce8f18dcc1b3dfff00cb624c402be78ffd",
+                "reference": "eb95d9ce8f18dcc1b3dfff00cb624c402be78ffd",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9",
+                "php": "^5.5.9|>=7.0.8",
                 "psr/log": "~1.0"
             },
             "conflict": {
@@ -1884,24 +2185,24 @@
             ],
             "description": "Symfony Debug Component",
             "homepage": "https://symfony.com",
-            "time": "2017-07-28 15:27:31"
+            "time": "2017-10-02 06:42:24"
         },
         {
             "name": "symfony/event-dispatcher",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/event-dispatcher.git",
-                "reference": "67535f1e3fd662bdc68d7ba317c93eecd973617e"
+                "reference": "d7ba037e4b8221956ab1e221c73c9e27e05dd423"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/event-dispatcher/zipball/67535f1e3fd662bdc68d7ba317c93eecd973617e",
-                "reference": "67535f1e3fd662bdc68d7ba317c93eecd973617e",
+                "url": "https://api.github.com/repos/symfony/event-dispatcher/zipball/d7ba037e4b8221956ab1e221c73c9e27e05dd423",
+                "reference": "d7ba037e4b8221956ab1e221c73c9e27e05dd423",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9"
+                "php": "^5.5.9|>=7.0.8"
             },
             "conflict": {
                 "symfony/dependency-injection": "<3.3"
@@ -1947,24 +2248,24 @@
             ],
             "description": "Symfony EventDispatcher Component",
             "homepage": "https://symfony.com",
-            "time": "2017-06-09 14:53:08"
+            "time": "2017-10-02 06:42:24"
         },
         {
             "name": "symfony/finder",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/finder.git",
-                "reference": "baea7f66d30854ad32988c11a09d7ffd485810c4"
+                "reference": "773e19a491d97926f236942484cb541560ce862d"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/finder/zipball/baea7f66d30854ad32988c11a09d7ffd485810c4",
-                "reference": "baea7f66d30854ad32988c11a09d7ffd485810c4",
+                "url": "https://api.github.com/repos/symfony/finder/zipball/773e19a491d97926f236942484cb541560ce862d",
+                "reference": "773e19a491d97926f236942484cb541560ce862d",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9"
+                "php": "^5.5.9|>=7.0.8"
             },
             "type": "library",
             "extra": {
@@ -1996,24 +2297,24 @@
             ],
             "description": "Symfony Finder Component",
             "homepage": "https://symfony.com",
-            "time": "2017-06-01 21:01:25"
+            "time": "2017-10-02 06:42:24"
         },
         {
             "name": "symfony/http-foundation",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/http-foundation.git",
-                "reference": "49e8cd2d59a7aa9bfab19e46de680c76e500a031"
+                "reference": "22cf9c2b1d9f67cc8e75ae7f4eaa60e4c1eff1f8"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/http-foundation/zipball/49e8cd2d59a7aa9bfab19e46de680c76e500a031",
-                "reference": "49e8cd2d59a7aa9bfab19e46de680c76e500a031",
+                "url": "https://api.github.com/repos/symfony/http-foundation/zipball/22cf9c2b1d9f67cc8e75ae7f4eaa60e4c1eff1f8",
+                "reference": "22cf9c2b1d9f67cc8e75ae7f4eaa60e4c1eff1f8",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9",
+                "php": "^5.5.9|>=7.0.8",
                 "symfony/polyfill-mbstring": "~1.1"
             },
             "require-dev": {
@@ -2049,24 +2350,24 @@
             ],
             "description": "Symfony HttpFoundation Component",
             "homepage": "https://symfony.com",
-            "time": "2017-07-21 11:04:46"
+            "time": "2017-10-05 23:10:23"
         },
         {
             "name": "symfony/http-kernel",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/http-kernel.git",
-                "reference": "db10d05f1d95e4168e638db7a81c79616f568ea5"
+                "reference": "654f047a78756964bf91b619554f956517394018"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/http-kernel/zipball/db10d05f1d95e4168e638db7a81c79616f568ea5",
-                "reference": "db10d05f1d95e4168e638db7a81c79616f568ea5",
+                "url": "https://api.github.com/repos/symfony/http-kernel/zipball/654f047a78756964bf91b619554f956517394018",
+                "reference": "654f047a78756964bf91b619554f956517394018",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9",
+                "php": "^5.5.9|>=7.0.8",
                 "psr/log": "~1.0",
                 "symfony/debug": "~2.8|~3.0",
                 "symfony/event-dispatcher": "~2.8|~3.0",
@@ -2135,20 +2436,20 @@
             ],
             "description": "Symfony HttpKernel Component",
             "homepage": "https://symfony.com",
-            "time": "2017-08-01 10:25:59"
+            "time": "2017-10-05 23:40:19"
         },
         {
             "name": "symfony/polyfill-mbstring",
-            "version": "v1.5.0",
+            "version": "v1.6.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/polyfill-mbstring.git",
-                "reference": "7c8fae0ac1d216eb54349e6a8baa57d515fe8803"
+                "reference": "2ec8b39c38cb16674bbf3fea2b6ce5bf117e1296"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/7c8fae0ac1d216eb54349e6a8baa57d515fe8803",
-                "reference": "7c8fae0ac1d216eb54349e6a8baa57d515fe8803",
+                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/2ec8b39c38cb16674bbf3fea2b6ce5bf117e1296",
+                "reference": "2ec8b39c38cb16674bbf3fea2b6ce5bf117e1296",
                 "shasum": ""
             },
             "require": {
@@ -2160,7 +2461,7 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.5-dev"
+                    "dev-master": "1.6-dev"
                 }
             },
             "autoload": {
@@ -2194,20 +2495,20 @@
                 "portable",
                 "shim"
             ],
-            "time": "2017-06-14 15:44:48"
+            "time": "2017-10-11 12:05:26"
         },
         {
             "name": "symfony/polyfill-php56",
-            "version": "v1.5.0",
+            "version": "v1.6.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/polyfill-php56.git",
-                "reference": "e85ebdef569b84e8709864e1a290c40f156b30ca"
+                "reference": "265fc96795492430762c29be291a371494ba3a5b"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-php56/zipball/e85ebdef569b84e8709864e1a290c40f156b30ca",
-                "reference": "e85ebdef569b84e8709864e1a290c40f156b30ca",
+                "url": "https://api.github.com/repos/symfony/polyfill-php56/zipball/265fc96795492430762c29be291a371494ba3a5b",
+                "reference": "265fc96795492430762c29be291a371494ba3a5b",
                 "shasum": ""
             },
             "require": {
@@ -2217,7 +2518,7 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.5-dev"
+                    "dev-master": "1.6-dev"
                 }
             },
             "autoload": {
@@ -2250,20 +2551,20 @@
                 "portable",
                 "shim"
             ],
-            "time": "2017-06-14 15:44:48"
+            "time": "2017-10-11 12:05:26"
         },
         {
             "name": "symfony/polyfill-util",
-            "version": "v1.5.0",
+            "version": "v1.6.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/polyfill-util.git",
-                "reference": "67925d1cf0b84bd234a83bebf26d4eb281744c6d"
+                "reference": "6e719200c8e540e0c0effeb31f96bdb344b94176"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/polyfill-util/zipball/67925d1cf0b84bd234a83bebf26d4eb281744c6d",
-                "reference": "67925d1cf0b84bd234a83bebf26d4eb281744c6d",
+                "url": "https://api.github.com/repos/symfony/polyfill-util/zipball/6e719200c8e540e0c0effeb31f96bdb344b94176",
+                "reference": "6e719200c8e540e0c0effeb31f96bdb344b94176",
                 "shasum": ""
             },
             "require": {
@@ -2272,7 +2573,7 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.5-dev"
+                    "dev-master": "1.6-dev"
                 }
             },
             "autoload": {
@@ -2302,24 +2603,24 @@
                 "polyfill",
                 "shim"
             ],
-            "time": "2017-07-05 15:09:33"
+            "time": "2017-10-11 12:05:26"
         },
         {
             "name": "symfony/process",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/process.git",
-                "reference": "07432804942b9f6dd7b7377faf9920af5f95d70a"
+                "reference": "fdf89e57a723a29baf536e288d6e232c059697b1"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/process/zipball/07432804942b9f6dd7b7377faf9920af5f95d70a",
-                "reference": "07432804942b9f6dd7b7377faf9920af5f95d70a",
+                "url": "https://api.github.com/repos/symfony/process/zipball/fdf89e57a723a29baf536e288d6e232c059697b1",
+                "reference": "fdf89e57a723a29baf536e288d6e232c059697b1",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9"
+                "php": "^5.5.9|>=7.0.8"
             },
             "type": "library",
             "extra": {
@@ -2351,24 +2652,24 @@
             ],
             "description": "Symfony Process Component",
             "homepage": "https://symfony.com",
-            "time": "2017-07-13 13:05:09"
+            "time": "2017-10-02 06:42:24"
         },
         {
             "name": "symfony/routing",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/routing.git",
-                "reference": "4aee1a917fd4859ff8b51b9fd1dfb790a5ecfa26"
+                "reference": "2e26fa63da029dab49bf9377b3b4f60a8fecb009"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/routing/zipball/4aee1a917fd4859ff8b51b9fd1dfb790a5ecfa26",
-                "reference": "4aee1a917fd4859ff8b51b9fd1dfb790a5ecfa26",
+                "url": "https://api.github.com/repos/symfony/routing/zipball/2e26fa63da029dab49bf9377b3b4f60a8fecb009",
+                "reference": "2e26fa63da029dab49bf9377b3b4f60a8fecb009",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9"
+                "php": "^5.5.9|>=7.0.8"
             },
             "conflict": {
                 "symfony/config": "<2.8",
@@ -2429,24 +2730,24 @@
                 "uri",
                 "url"
             ],
-            "time": "2017-07-21 17:43:13"
+            "time": "2017-10-02 07:25:00"
         },
         {
             "name": "symfony/translation",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/translation.git",
-                "reference": "35dd5fb003c90e8bd4d8cabdf94bf9c96d06fdc3"
+                "reference": "409bf229cd552bf7e3faa8ab7e3980b07672073f"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/translation/zipball/35dd5fb003c90e8bd4d8cabdf94bf9c96d06fdc3",
-                "reference": "35dd5fb003c90e8bd4d8cabdf94bf9c96d06fdc3",
+                "url": "https://api.github.com/repos/symfony/translation/zipball/409bf229cd552bf7e3faa8ab7e3980b07672073f",
+                "reference": "409bf229cd552bf7e3faa8ab7e3980b07672073f",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9",
+                "php": "^5.5.9|>=7.0.8",
                 "symfony/polyfill-mbstring": "~1.0"
             },
             "conflict": {
@@ -2494,24 +2795,24 @@
             ],
             "description": "Symfony Translation Component",
             "homepage": "https://symfony.com",
-            "time": "2017-06-24 16:45:30"
+            "time": "2017-10-02 06:42:24"
         },
         {
             "name": "symfony/var-dumper",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/var-dumper.git",
-                "reference": "b2623bccb969ad595c2090f9be498b74670d0663"
+                "reference": "03e3693a36701f1c581dd24a6d6eea2eba2113f6"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/var-dumper/zipball/b2623bccb969ad595c2090f9be498b74670d0663",
-                "reference": "b2623bccb969ad595c2090f9be498b74670d0663",
+                "url": "https://api.github.com/repos/symfony/var-dumper/zipball/03e3693a36701f1c581dd24a6d6eea2eba2113f6",
+                "reference": "03e3693a36701f1c581dd24a6d6eea2eba2113f6",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9",
+                "php": "^5.5.9|>=7.0.8",
                 "symfony/polyfill-mbstring": "~1.0"
             },
             "conflict": {
@@ -2562,7 +2863,7 @@
                 "debug",
                 "dump"
             ],
-            "time": "2017-07-28 06:06:09"
+            "time": "2017-10-02 06:42:24"
         },
         {
             "name": "tijsverkoyen/css-to-inline-styles",
@@ -2613,32 +2914,32 @@
         },
         {
             "name": "tymon/jwt-auth",
-            "version": "1.0.0-beta.3",
+            "version": "1.0.0-rc.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/tymondesigns/jwt-auth.git",
-                "reference": "66a7339ea4946ab75bb6b0d96d3d4477da47631b"
+                "reference": "6adc5c9df836405c47abc2f4c836872effb71ead"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/tymondesigns/jwt-auth/zipball/66a7339ea4946ab75bb6b0d96d3d4477da47631b",
-                "reference": "66a7339ea4946ab75bb6b0d96d3d4477da47631b",
+                "url": "https://api.github.com/repos/tymondesigns/jwt-auth/zipball/6adc5c9df836405c47abc2f4c836872effb71ead",
+                "reference": "6adc5c9df836405c47abc2f4c836872effb71ead",
                 "shasum": ""
             },
             "require": {
-                "illuminate/auth": "5.1.* || 5.2.* || 5.3.* || 5.4.*",
-                "illuminate/contracts": "5.1.* || 5.2.* || 5.3.* || 5.4.*",
-                "illuminate/http": "5.1.* || 5.2.* || 5.3.* || 5.4.*",
-                "illuminate/support": "5.1.* || 5.2.* || 5.3.* || 5.4.*",
+                "illuminate/auth": "5.1.* || 5.2.* || 5.3.* || 5.4.* || 5.5.*",
+                "illuminate/contracts": "5.1.* || 5.2.* || 5.3.* || 5.4.* || 5.5.*",
+                "illuminate/http": "5.1.* || 5.2.* || 5.3.* || 5.4.* || 5.5.*",
+                "illuminate/support": "5.1.* || 5.2.* || 5.3.* || 5.4.* || 5.5.*",
                 "namshi/jose": "^7.0",
                 "nesbot/carbon": "^1.0",
                 "php": "^5.5.9 || ^7.0"
             },
             "require-dev": {
                 "cartalyst/sentinel": "2.0.*",
-                "illuminate/console": "5.1.* || 5.2.* || 5.3.* || 5.4.*",
-                "illuminate/database": "5.1.* || 5.2.* || 5.3.* || 5.4.*",
-                "illuminate/routing": "5.1.* || 5.2.* || 5.3.* || 5.4.*",
+                "illuminate/console": "5.1.* || 5.2.* || 5.3.* || 5.4.* || 5.5.*",
+                "illuminate/database": "5.1.* || 5.2.* || 5.3.* || 5.4.* || 5.5.*",
+                "illuminate/routing": "5.1.* || 5.2.* || 5.3.* || 5.4.* || 5.5.*",
                 "mockery/mockery": "0.9.*",
                 "phpunit/phpunit": "~4.8 || ~6.0"
             },
@@ -2646,6 +2947,15 @@
             "extra": {
                 "branch-alias": {
                     "dev-develop": "1.0-dev"
+                },
+                "laravel": {
+                    "aliases": {
+                        "JWTAuth": "Tymon\\JWTAuth\\Facades\\JWTAuth",
+                        "JWTFactory": "Tymon\\JWTAuth\\Facades\\JWTFactory"
+                    },
+                    "providers": [
+                        "Tymon\\JWTAuth\\Providers\\LaravelServiceProvider"
+                    ]
                 }
             },
             "autoload": {
@@ -2661,7 +2971,7 @@
                 {
                     "name": "Sean Tymon",
                     "email": "tymon148@gmail.com",
-                    "homepage": "http://tymon.xyz",
+                    "homepage": "https://tymon.xyz",
                     "role": "Developer"
                 }
             ],
@@ -2674,7 +2984,7 @@
                 "jwt",
                 "laravel"
             ],
-            "time": "2017-03-25 22:50:20"
+            "time": "2017-08-30 17:57:47"
         },
         {
             "name": "vlucas/phpdotenv",
@@ -2782,28 +3092,42 @@
     "packages-dev": [
         {
             "name": "barryvdh/laravel-debugbar",
-            "version": "v2.3.2",
+            "version": "v3.1.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/barryvdh/laravel-debugbar.git",
-                "reference": "24e4f0261e352d3fd86d0447791b56ae49398674"
+                "reference": "01a859752094e00aa8548832312366753272f8af"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/barryvdh/laravel-debugbar/zipball/24e4f0261e352d3fd86d0447791b56ae49398674",
-                "reference": "24e4f0261e352d3fd86d0447791b56ae49398674",
+                "url": "https://api.github.com/repos/barryvdh/laravel-debugbar/zipball/01a859752094e00aa8548832312366753272f8af",
+                "reference": "01a859752094e00aa8548832312366753272f8af",
                 "shasum": ""
             },
             "require": {
-                "illuminate/support": "5.1.*|5.2.*|5.3.*|5.4.*",
-                "maximebf/debugbar": "~1.13.0",
-                "php": ">=5.5.9",
-                "symfony/finder": "~2.7|~3.0"
+                "illuminate/routing": "5.5.x",
+                "illuminate/session": "5.5.x",
+                "illuminate/support": "5.5.x",
+                "maximebf/debugbar": "~1.14.0",
+                "php": ">=7.0",
+                "symfony/debug": "^3",
+                "symfony/finder": "^3"
+            },
+            "require-dev": {
+                "illuminate/framework": "5.5.x"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "2.3-dev"
+                    "dev-master": "3.0-dev"
+                },
+                "laravel": {
+                    "providers": [
+                        "Barryvdh\\Debugbar\\ServiceProvider"
+                    ],
+                    "aliases": {
+                        "Debugbar": "Barryvdh\\Debugbar\\Facade"
+                    }
                 }
             },
             "autoload": {
@@ -2832,32 +3156,34 @@
                 "profiler",
                 "webprofiler"
             ],
-            "time": "2017-01-19 08:19:49"
+            "time": "2017-09-18 13:32:46"
         },
         {
             "name": "barryvdh/laravel-ide-helper",
-            "version": "v2.2.3",
+            "version": "v2.4.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/barryvdh/laravel-ide-helper.git",
-                "reference": "a7fc2ec489aada6062d3a63ddc915004a21e38af"
+                "reference": "2b1273c45e2f8df7a625563e2283a17c14f02ae8"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/barryvdh/laravel-ide-helper/zipball/a7fc2ec489aada6062d3a63ddc915004a21e38af",
-                "reference": "a7fc2ec489aada6062d3a63ddc915004a21e38af",
+                "url": "https://api.github.com/repos/barryvdh/laravel-ide-helper/zipball/2b1273c45e2f8df7a625563e2283a17c14f02ae8",
+                "reference": "2b1273c45e2f8df7a625563e2283a17c14f02ae8",
                 "shasum": ""
             },
             "require": {
                 "barryvdh/reflection-docblock": "^2.0.4",
-                "illuminate/console": "^5.0,<5.5",
-                "illuminate/filesystem": "^5.0,<5.5",
-                "illuminate/support": "^5.0,<5.5",
+                "illuminate/console": "^5.0,<5.6",
+                "illuminate/filesystem": "^5.0,<5.6",
+                "illuminate/support": "^5.0,<5.6",
                 "php": ">=5.4.0",
                 "symfony/class-loader": "^2.3|^3.0"
             },
             "require-dev": {
                 "doctrine/dbal": "~2.3",
+                "illuminate/config": "^5.0,<5.6",
+                "illuminate/view": "^5.0,<5.6",
                 "phpunit/phpunit": "4.*",
                 "scrutinizer/ocular": "~1.1",
                 "squizlabs/php_codesniffer": "~2.3"
@@ -2868,7 +3194,12 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "2.2-dev"
+                    "dev-master": "2.3-dev"
+                },
+                "laravel": {
+                    "providers": [
+                        "Barryvdh\\LaravelIdeHelper\\IdeHelperServiceProvider"
+                    ]
                 }
             },
             "autoload": {
@@ -2898,7 +3229,7 @@
                 "phpstorm",
                 "sublime"
             ],
-            "time": "2017-01-05 21:20:42"
+            "time": "2017-07-16 00:24:12"
         },
         {
             "name": "barryvdh/reflection-docblock",
@@ -2951,32 +3282,32 @@
         },
         {
             "name": "doctrine/instantiator",
-            "version": "1.0.5",
+            "version": "1.1.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/doctrine/instantiator.git",
-                "reference": "8e884e78f9f0eb1329e445619e04456e64d8051d"
+                "reference": "185b8868aa9bf7159f5f953ed5afb2d7fcdc3bda"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/8e884e78f9f0eb1329e445619e04456e64d8051d",
-                "reference": "8e884e78f9f0eb1329e445619e04456e64d8051d",
+                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/185b8868aa9bf7159f5f953ed5afb2d7fcdc3bda",
+                "reference": "185b8868aa9bf7159f5f953ed5afb2d7fcdc3bda",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3,<8.0-DEV"
+                "php": "^7.1"
             },
             "require-dev": {
                 "athletic/athletic": "~0.1.8",
                 "ext-pdo": "*",
                 "ext-phar": "*",
-                "phpunit/phpunit": "~4.0",
-                "squizlabs/php_codesniffer": "~2.0"
+                "phpunit/phpunit": "^6.2.3",
+                "squizlabs/php_codesniffer": "^3.0.2"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.0.x-dev"
+                    "dev-master": "1.2.x-dev"
                 }
             },
             "autoload": {
@@ -3001,7 +3332,68 @@
                 "constructor",
                 "instantiate"
             ],
-            "time": "2015-06-14 21:17:01"
+            "time": "2017-07-22 11:58:36"
+        },
+        {
+            "name": "filp/whoops",
+            "version": "2.1.12",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/filp/whoops.git",
+                "reference": "a99f0b151846021ba7a73b4e3cba3ebc9f14f03e"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/filp/whoops/zipball/a99f0b151846021ba7a73b4e3cba3ebc9f14f03e",
+                "reference": "a99f0b151846021ba7a73b4e3cba3ebc9f14f03e",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^5.5.9 || ^7.0",
+                "psr/log": "^1.0.1"
+            },
+            "require-dev": {
+                "mockery/mockery": "0.9.*",
+                "phpunit/phpunit": "^4.8 || ^5.0",
+                "symfony/var-dumper": "^2.6 || ^3.0"
+            },
+            "suggest": {
+                "symfony/var-dumper": "Pretty print complex values better with var-dumper available",
+                "whoops/soap": "Formats errors as SOAP responses"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.0-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Whoops\\": "src/Whoops/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Filipe Dobreira",
+                    "homepage": "https://github.com/filp",
+                    "role": "Developer"
+                }
+            ],
+            "description": "php error handling for cool kids",
+            "homepage": "https://filp.github.io/whoops/",
+            "keywords": [
+                "error",
+                "exception",
+                "handling",
+                "library",
+                "throwable",
+                "whoops"
+            ],
+            "time": "2017-10-15 13:05:10"
         },
         {
             "name": "fzaninotto/faker",
@@ -3100,27 +3492,28 @@
         },
         {
             "name": "laravel/browser-kit-testing",
-            "version": "v1.0.3",
+            "version": "v2.0.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/laravel/browser-kit-testing.git",
-                "reference": "0adfb725147815bff5516d157577f375a6e66ebd"
+                "reference": "f0bb9f200ec35f9d876ded6eacfbc60868d311b9"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/laravel/browser-kit-testing/zipball/0adfb725147815bff5516d157577f375a6e66ebd",
-                "reference": "0adfb725147815bff5516d157577f375a6e66ebd",
+                "url": "https://api.github.com/repos/laravel/browser-kit-testing/zipball/f0bb9f200ec35f9d876ded6eacfbc60868d311b9",
+                "reference": "f0bb9f200ec35f9d876ded6eacfbc60868d311b9",
                 "shasum": ""
             },
             "require": {
                 "php": ">=5.5.9",
+                "phpunit/phpunit": "~6.0",
                 "symfony/css-selector": "~3.1",
                 "symfony/dom-crawler": "~3.1"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.0-dev"
+                    "dev-master": "2.0-dev"
                 }
             },
             "autoload": {
@@ -3143,20 +3536,20 @@
                 "laravel",
                 "testing"
             ],
-            "time": "2017-02-08 22:32:37"
+            "time": "2017-06-21 11:44:53"
         },
         {
             "name": "maximebf/debugbar",
-            "version": "1.13.1",
+            "version": "v1.14.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/maximebf/php-debugbar.git",
-                "reference": "afee79a236348e39a44cb837106b7c5b4897ac2a"
+                "reference": "64251a392344e3d22f3d21c3b7c531ba96eb01d2"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/maximebf/php-debugbar/zipball/afee79a236348e39a44cb837106b7c5b4897ac2a",
-                "reference": "afee79a236348e39a44cb837106b7c5b4897ac2a",
+                "url": "https://api.github.com/repos/maximebf/php-debugbar/zipball/64251a392344e3d22f3d21c3b7c531ba96eb01d2",
+                "reference": "64251a392344e3d22f3d21c3b7c531ba96eb01d2",
                 "shasum": ""
             },
             "require": {
@@ -3175,7 +3568,7 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.13-dev"
+                    "dev-master": "1.14-dev"
                 }
             },
             "autoload": {
@@ -3204,7 +3597,7 @@
                 "debug",
                 "debugbar"
             ],
-            "time": "2017-01-05 08:46:19"
+            "time": "2017-09-13 12:19:36"
         },
         {
             "name": "mockery/mockery",
@@ -3273,37 +3666,40 @@
         },
         {
             "name": "myclabs/deep-copy",
-            "version": "1.6.1",
+            "version": "1.7.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/myclabs/DeepCopy.git",
-                "reference": "8e6e04167378abf1ddb4d3522d8755c5fd90d102"
+                "reference": "3b8a3a99ba1f6a3952ac2747d989303cbd6b7a3e"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/8e6e04167378abf1ddb4d3522d8755c5fd90d102",
-                "reference": "8e6e04167378abf1ddb4d3522d8755c5fd90d102",
+                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/3b8a3a99ba1f6a3952ac2747d989303cbd6b7a3e",
+                "reference": "3b8a3a99ba1f6a3952ac2747d989303cbd6b7a3e",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.4.0"
+                "php": "^5.6 || ^7.0"
             },
             "require-dev": {
-                "doctrine/collections": "1.*",
-                "phpunit/phpunit": "~4.1"
+                "doctrine/collections": "^1.0",
+                "doctrine/common": "^2.6",
+                "phpunit/phpunit": "^4.1"
             },
             "type": "library",
             "autoload": {
                 "psr-4": {
                     "DeepCopy\\": "src/DeepCopy/"
-                }
+                },
+                "files": [
+                    "src/DeepCopy/deep_copy.php"
+                ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
                 "MIT"
             ],
             "description": "Create deep copies (clones) of your objects",
-            "homepage": "https://github.com/myclabs/DeepCopy",
             "keywords": [
                 "clone",
                 "copy",
@@ -3311,20 +3707,122 @@
                 "object",
                 "object graph"
             ],
-            "time": "2017-04-12 18:52:22"
+            "time": "2017-10-19 19:58:43"
+        },
+        {
+            "name": "phar-io/manifest",
+            "version": "1.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/phar-io/manifest.git",
+                "reference": "2df402786ab5368a0169091f61a7c1e0eb6852d0"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/phar-io/manifest/zipball/2df402786ab5368a0169091f61a7c1e0eb6852d0",
+                "reference": "2df402786ab5368a0169091f61a7c1e0eb6852d0",
+                "shasum": ""
+            },
+            "require": {
+                "ext-dom": "*",
+                "ext-phar": "*",
+                "phar-io/version": "^1.0.1",
+                "php": "^5.6 || ^7.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Arne Blankerts",
+                    "email": "arne@blankerts.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Heuer",
+                    "email": "sebastian@phpeople.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "Developer"
+                }
+            ],
+            "description": "Component for reading phar.io manifest information from a PHP Archive (PHAR)",
+            "time": "2017-03-05 18:14:27"
+        },
+        {
+            "name": "phar-io/version",
+            "version": "1.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/phar-io/version.git",
+                "reference": "a70c0ced4be299a63d32fa96d9281d03e94041df"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/phar-io/version/zipball/a70c0ced4be299a63d32fa96d9281d03e94041df",
+                "reference": "a70c0ced4be299a63d32fa96d9281d03e94041df",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^5.6 || ^7.0"
+            },
+            "type": "library",
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Arne Blankerts",
+                    "email": "arne@blankerts.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Heuer",
+                    "email": "sebastian@phpeople.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "Developer"
+                }
+            ],
+            "description": "Library for handling version information and constraints",
+            "time": "2017-03-05 17:38:23"
         },
         {
             "name": "phpdocumentor/reflection-common",
-            "version": "1.0",
+            "version": "1.0.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/phpDocumentor/ReflectionCommon.git",
-                "reference": "144c307535e82c8fdcaacbcfc1d6d8eeb896687c"
+                "reference": "21bdeb5f65d7ebf9f43b1b25d404f87deab5bfb6"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/144c307535e82c8fdcaacbcfc1d6d8eeb896687c",
-                "reference": "144c307535e82c8fdcaacbcfc1d6d8eeb896687c",
+                "url": "https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/21bdeb5f65d7ebf9f43b1b25d404f87deab5bfb6",
+                "reference": "21bdeb5f65d7ebf9f43b1b25d404f87deab5bfb6",
                 "shasum": ""
             },
             "require": {
@@ -3365,26 +3863,26 @@
                 "reflection",
                 "static analysis"
             ],
-            "time": "2015-12-27 11:43:31"
+            "time": "2017-09-11 18:02:19"
         },
         {
             "name": "phpdocumentor/reflection-docblock",
-            "version": "3.2.2",
+            "version": "4.1.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/phpDocumentor/ReflectionDocBlock.git",
-                "reference": "4aada1f93c72c35e22fb1383b47fee43b8f1d157"
+                "reference": "2d3d238c433cf69caeb4842e97a3223a116f94b2"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/4aada1f93c72c35e22fb1383b47fee43b8f1d157",
-                "reference": "4aada1f93c72c35e22fb1383b47fee43b8f1d157",
+                "url": "https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/2d3d238c433cf69caeb4842e97a3223a116f94b2",
+                "reference": "2d3d238c433cf69caeb4842e97a3223a116f94b2",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5",
+                "php": "^7.0",
                 "phpdocumentor/reflection-common": "^1.0@dev",
-                "phpdocumentor/type-resolver": "^0.3.0",
+                "phpdocumentor/type-resolver": "^0.4.0",
                 "webmozart/assert": "^1.0"
             },
             "require-dev": {
@@ -3410,20 +3908,20 @@
                 }
             ],
             "description": "With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is embedded in a DocBlock.",
-            "time": "2017-08-08 06:39:58"
+            "time": "2017-08-30 18:51:59"
         },
         {
             "name": "phpdocumentor/type-resolver",
-            "version": "0.3.0",
+            "version": "0.4.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/phpDocumentor/TypeResolver.git",
-                "reference": "fb3933512008d8162b3cdf9e18dba9309b7c3773"
+                "reference": "9c977708995954784726e25d0cd1dddf4e65b0f7"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/fb3933512008d8162b3cdf9e18dba9309b7c3773",
-                "reference": "fb3933512008d8162b3cdf9e18dba9309b7c3773",
+                "url": "https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/9c977708995954784726e25d0cd1dddf4e65b0f7",
+                "reference": "9c977708995954784726e25d0cd1dddf4e65b0f7",
                 "shasum": ""
             },
             "require": {
@@ -3457,26 +3955,26 @@
                     "email": "me@mikevanriel.com"
                 }
             ],
-            "time": "2017-06-03 08:32:36"
+            "time": "2017-07-14 14:27:02"
         },
         {
             "name": "phpspec/prophecy",
-            "version": "v1.7.0",
+            "version": "v1.7.2",
             "source": {
                 "type": "git",
                 "url": "https://github.com/phpspec/prophecy.git",
-                "reference": "93d39f1f7f9326d746203c7c056f300f7f126073"
+                "reference": "c9b8c6088acd19d769d4cc0ffa60a9fe34344bd6"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/93d39f1f7f9326d746203c7c056f300f7f126073",
-                "reference": "93d39f1f7f9326d746203c7c056f300f7f126073",
+                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/c9b8c6088acd19d769d4cc0ffa60a9fe34344bd6",
+                "reference": "c9b8c6088acd19d769d4cc0ffa60a9fe34344bd6",
                 "shasum": ""
             },
             "require": {
                 "doctrine/instantiator": "^1.0.2",
                 "php": "^5.3|^7.0",
-                "phpdocumentor/reflection-docblock": "^2.0|^3.0.2",
+                "phpdocumentor/reflection-docblock": "^2.0|^3.0.2|^4.0",
                 "sebastian/comparator": "^1.1|^2.0",
                 "sebastian/recursion-context": "^1.0|^2.0|^3.0"
             },
@@ -3487,7 +3985,7 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.6.x-dev"
+                    "dev-master": "1.7.x-dev"
                 }
             },
             "autoload": {
@@ -3520,44 +4018,45 @@
                 "spy",
                 "stub"
             ],
-            "time": "2017-03-02 20:05:34"
+            "time": "2017-09-04 11:05:03"
         },
         {
             "name": "phpunit/php-code-coverage",
-            "version": "4.0.8",
+            "version": "5.2.3",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
-                "reference": "ef7b2f56815df854e66ceaee8ebe9393ae36a40d"
+                "reference": "8e1d2397d8adf59a3f12b2878a3aaa66d1ab189d"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/ef7b2f56815df854e66ceaee8ebe9393ae36a40d",
-                "reference": "ef7b2f56815df854e66ceaee8ebe9393ae36a40d",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/8e1d2397d8adf59a3f12b2878a3aaa66d1ab189d",
+                "reference": "8e1d2397d8adf59a3f12b2878a3aaa66d1ab189d",
                 "shasum": ""
             },
             "require": {
                 "ext-dom": "*",
                 "ext-xmlwriter": "*",
-                "php": "^5.6 || ^7.0",
-                "phpunit/php-file-iterator": "^1.3",
-                "phpunit/php-text-template": "^1.2",
-                "phpunit/php-token-stream": "^1.4.2 || ^2.0",
-                "sebastian/code-unit-reverse-lookup": "^1.0",
-                "sebastian/environment": "^1.3.2 || ^2.0",
-                "sebastian/version": "^1.0 || ^2.0"
+                "php": "^7.0",
+                "phpunit/php-file-iterator": "^1.4.2",
+                "phpunit/php-text-template": "^1.2.1",
+                "phpunit/php-token-stream": "^2.0",
+                "sebastian/code-unit-reverse-lookup": "^1.0.1",
+                "sebastian/environment": "^3.0",
+                "sebastian/version": "^2.0.1",
+                "theseer/tokenizer": "^1.1"
             },
             "require-dev": {
-                "ext-xdebug": "^2.1.4",
-                "phpunit/phpunit": "^5.7"
+                "ext-xdebug": "^2.5",
+                "phpunit/phpunit": "^6.0"
             },
             "suggest": {
-                "ext-xdebug": "^2.5.1"
+                "ext-xdebug": "^2.5.5"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "4.0.x-dev"
+                    "dev-master": "5.2.x-dev"
                 }
             },
             "autoload": {
@@ -3583,7 +4082,7 @@
                 "testing",
                 "xunit"
             ],
-            "time": "2017-04-02 07:44:40"
+            "time": "2017-11-03 13:47:33"
         },
         {
             "name": "phpunit/php-file-iterator",
@@ -3724,29 +4223,29 @@
         },
         {
             "name": "phpunit/php-token-stream",
-            "version": "1.4.11",
+            "version": "2.0.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/php-token-stream.git",
-                "reference": "e03f8f67534427a787e21a385a67ec3ca6978ea7"
+                "reference": "9a02332089ac48e704c70f6cefed30c224e3c0b0"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/php-token-stream/zipball/e03f8f67534427a787e21a385a67ec3ca6978ea7",
-                "reference": "e03f8f67534427a787e21a385a67ec3ca6978ea7",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-token-stream/zipball/9a02332089ac48e704c70f6cefed30c224e3c0b0",
+                "reference": "9a02332089ac48e704c70f6cefed30c224e3c0b0",
                 "shasum": ""
             },
             "require": {
                 "ext-tokenizer": "*",
-                "php": ">=5.3.3"
+                "php": "^7.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "~4.2"
+                "phpunit/phpunit": "^6.2.4"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.4-dev"
+                    "dev-master": "2.0-dev"
                 }
             },
             "autoload": {
@@ -3769,20 +4268,20 @@
             "keywords": [
                 "tokenizer"
             ],
-            "time": "2017-02-27 10:12:30"
+            "time": "2017-08-20 05:47:52"
         },
         {
             "name": "phpunit/phpunit",
-            "version": "5.7.21",
+            "version": "6.4.3",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/phpunit.git",
-                "reference": "3b91adfb64264ddec5a2dee9851f354aa66327db"
+                "reference": "06b28548fd2b4a20c3cd6e247dc86331a7d4db13"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/3b91adfb64264ddec5a2dee9851f354aa66327db",
-                "reference": "3b91adfb64264ddec5a2dee9851f354aa66327db",
+                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/06b28548fd2b4a20c3cd6e247dc86331a7d4db13",
+                "reference": "06b28548fd2b4a20c3cd6e247dc86331a7d4db13",
                 "shasum": ""
             },
             "require": {
@@ -3791,33 +4290,35 @@
                 "ext-libxml": "*",
                 "ext-mbstring": "*",
                 "ext-xml": "*",
-                "myclabs/deep-copy": "~1.3",
-                "php": "^5.6 || ^7.0",
-                "phpspec/prophecy": "^1.6.2",
-                "phpunit/php-code-coverage": "^4.0.4",
-                "phpunit/php-file-iterator": "~1.4",
-                "phpunit/php-text-template": "~1.2",
-                "phpunit/php-timer": "^1.0.6",
-                "phpunit/phpunit-mock-objects": "^3.2",
-                "sebastian/comparator": "^1.2.4",
-                "sebastian/diff": "^1.4.3",
-                "sebastian/environment": "^1.3.4 || ^2.0",
-                "sebastian/exporter": "~2.0",
-                "sebastian/global-state": "^1.1",
-                "sebastian/object-enumerator": "~2.0",
-                "sebastian/resource-operations": "~1.0",
-                "sebastian/version": "~1.0.3|~2.0",
-                "symfony/yaml": "~2.1|~3.0"
+                "myclabs/deep-copy": "^1.6.1",
+                "phar-io/manifest": "^1.0.1",
+                "phar-io/version": "^1.0",
+                "php": "^7.0",
+                "phpspec/prophecy": "^1.7",
+                "phpunit/php-code-coverage": "^5.2.2",
+                "phpunit/php-file-iterator": "^1.4.2",
+                "phpunit/php-text-template": "^1.2.1",
+                "phpunit/php-timer": "^1.0.9",
+                "phpunit/phpunit-mock-objects": "^4.0.3",
+                "sebastian/comparator": "^2.0.2",
+                "sebastian/diff": "^2.0",
+                "sebastian/environment": "^3.1",
+                "sebastian/exporter": "^3.1",
+                "sebastian/global-state": "^2.0",
+                "sebastian/object-enumerator": "^3.0.3",
+                "sebastian/resource-operations": "^1.0",
+                "sebastian/version": "^2.0.1"
             },
             "conflict": {
-                "phpdocumentor/reflection-docblock": "3.0.2"
+                "phpdocumentor/reflection-docblock": "3.0.2",
+                "phpunit/dbunit": "<3.0"
             },
             "require-dev": {
                 "ext-pdo": "*"
             },
             "suggest": {
                 "ext-xdebug": "*",
-                "phpunit/php-invoker": "~1.1"
+                "phpunit/php-invoker": "^1.1"
             },
             "bin": [
                 "phpunit"
@@ -3825,7 +4326,7 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "5.7.x-dev"
+                    "dev-master": "6.4.x-dev"
                 }
             },
             "autoload": {
@@ -3851,33 +4352,33 @@
                 "testing",
                 "xunit"
             ],
-            "time": "2017-06-21 08:11:54"
+            "time": "2017-10-16 13:18:59"
         },
         {
             "name": "phpunit/phpunit-mock-objects",
-            "version": "3.4.4",
+            "version": "4.0.4",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/phpunit-mock-objects.git",
-                "reference": "a23b761686d50a560cc56233b9ecf49597cc9118"
+                "reference": "2f789b59ab89669015ad984afa350c4ec577ade0"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/phpunit-mock-objects/zipball/a23b761686d50a560cc56233b9ecf49597cc9118",
-                "reference": "a23b761686d50a560cc56233b9ecf49597cc9118",
+                "url": "https://api.github.com/repos/sebastianbergmann/phpunit-mock-objects/zipball/2f789b59ab89669015ad984afa350c4ec577ade0",
+                "reference": "2f789b59ab89669015ad984afa350c4ec577ade0",
                 "shasum": ""
             },
             "require": {
-                "doctrine/instantiator": "^1.0.2",
-                "php": "^5.6 || ^7.0",
-                "phpunit/php-text-template": "^1.2",
-                "sebastian/exporter": "^1.2 || ^2.0"
+                "doctrine/instantiator": "^1.0.5",
+                "php": "^7.0",
+                "phpunit/php-text-template": "^1.2.1",
+                "sebastian/exporter": "^3.0"
             },
             "conflict": {
-                "phpunit/phpunit": "<5.4.0"
+                "phpunit/phpunit": "<6.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "^5.4"
+                "phpunit/phpunit": "^6.0"
             },
             "suggest": {
                 "ext-soap": "*"
@@ -3885,7 +4386,7 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "3.2.x-dev"
+                    "dev-master": "4.0.x-dev"
                 }
             },
             "autoload": {
@@ -3910,7 +4411,7 @@
                 "mock",
                 "xunit"
             ],
-            "time": "2017-06-30 09:13:00"
+            "time": "2017-08-03 14:08:16"
         },
         {
             "name": "sebastian/code-unit-reverse-lookup",
@@ -3959,30 +4460,30 @@
         },
         {
             "name": "sebastian/comparator",
-            "version": "1.2.4",
+            "version": "2.1.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/comparator.git",
-                "reference": "2b7424b55f5047b47ac6e5ccb20b2aea4011d9be"
+                "reference": "1174d9018191e93cb9d719edec01257fc05f8158"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/2b7424b55f5047b47ac6e5ccb20b2aea4011d9be",
-                "reference": "2b7424b55f5047b47ac6e5ccb20b2aea4011d9be",
+                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/1174d9018191e93cb9d719edec01257fc05f8158",
+                "reference": "1174d9018191e93cb9d719edec01257fc05f8158",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3",
-                "sebastian/diff": "~1.2",
-                "sebastian/exporter": "~1.2 || ~2.0"
+                "php": "^7.0",
+                "sebastian/diff": "^2.0",
+                "sebastian/exporter": "^3.1"
             },
             "require-dev": {
-                "phpunit/phpunit": "~4.4"
+                "phpunit/phpunit": "^6.4"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.2.x-dev"
+                    "dev-master": "2.1.x-dev"
                 }
             },
             "autoload": {
@@ -4013,38 +4514,38 @@
                 }
             ],
             "description": "Provides the functionality to compare PHP values for equality",
-            "homepage": "http://www.github.com/sebastianbergmann/comparator",
+            "homepage": "https://github.com/sebastianbergmann/comparator",
             "keywords": [
                 "comparator",
                 "compare",
                 "equality"
             ],
-            "time": "2017-01-29 09:50:25"
+            "time": "2017-11-03 07:16:52"
         },
         {
             "name": "sebastian/diff",
-            "version": "1.4.3",
+            "version": "2.0.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/diff.git",
-                "reference": "7f066a26a962dbe58ddea9f72a4e82874a3975a4"
+                "reference": "347c1d8b49c5c3ee30c7040ea6fc446790e6bddd"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/7f066a26a962dbe58ddea9f72a4e82874a3975a4",
-                "reference": "7f066a26a962dbe58ddea9f72a4e82874a3975a4",
+                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/347c1d8b49c5c3ee30c7040ea6fc446790e6bddd",
+                "reference": "347c1d8b49c5c3ee30c7040ea6fc446790e6bddd",
                 "shasum": ""
             },
             "require": {
-                "php": "^5.3.3 || ^7.0"
+                "php": "^7.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.0"
+                "phpunit/phpunit": "^6.2"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.4-dev"
+                    "dev-master": "2.0-dev"
                 }
             },
             "autoload": {
@@ -4071,32 +4572,32 @@
             "keywords": [
                 "diff"
             ],
-            "time": "2017-05-22 07:24:03"
+            "time": "2017-08-03 08:09:46"
         },
         {
             "name": "sebastian/environment",
-            "version": "2.0.0",
+            "version": "3.1.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/environment.git",
-                "reference": "5795ffe5dc5b02460c3e34222fee8cbe245d8fac"
+                "reference": "cd0871b3975fb7fc44d11314fd1ee20925fce4f5"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/5795ffe5dc5b02460c3e34222fee8cbe245d8fac",
-                "reference": "5795ffe5dc5b02460c3e34222fee8cbe245d8fac",
+                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/cd0871b3975fb7fc44d11314fd1ee20925fce4f5",
+                "reference": "cd0871b3975fb7fc44d11314fd1ee20925fce4f5",
                 "shasum": ""
             },
             "require": {
-                "php": "^5.6 || ^7.0"
+                "php": "^7.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "^5.0"
+                "phpunit/phpunit": "^6.1"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "2.0.x-dev"
+                    "dev-master": "3.1.x-dev"
                 }
             },
             "autoload": {
@@ -4121,34 +4622,34 @@
                 "environment",
                 "hhvm"
             ],
-            "time": "2016-11-26 07:53:53"
+            "time": "2017-07-01 08:51:00"
         },
         {
             "name": "sebastian/exporter",
-            "version": "2.0.0",
+            "version": "3.1.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/exporter.git",
-                "reference": "ce474bdd1a34744d7ac5d6aad3a46d48d9bac4c4"
+                "reference": "234199f4528de6d12aaa58b612e98f7d36adb937"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/ce474bdd1a34744d7ac5d6aad3a46d48d9bac4c4",
-                "reference": "ce474bdd1a34744d7ac5d6aad3a46d48d9bac4c4",
+                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/234199f4528de6d12aaa58b612e98f7d36adb937",
+                "reference": "234199f4528de6d12aaa58b612e98f7d36adb937",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3",
-                "sebastian/recursion-context": "~2.0"
+                "php": "^7.0",
+                "sebastian/recursion-context": "^3.0"
             },
             "require-dev": {
                 "ext-mbstring": "*",
-                "phpunit/phpunit": "~4.4"
+                "phpunit/phpunit": "^6.0"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "2.0.x-dev"
+                    "dev-master": "3.1.x-dev"
                 }
             },
             "autoload": {
@@ -4188,27 +4689,27 @@
                 "export",
                 "exporter"
             ],
-            "time": "2016-11-19 08:54:04"
+            "time": "2017-04-03 13:19:02"
         },
         {
             "name": "sebastian/global-state",
-            "version": "1.1.1",
+            "version": "2.0.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/global-state.git",
-                "reference": "bc37d50fea7d017d3d340f230811c9f1d7280af4"
+                "reference": "e8ba02eed7bbbb9e59e43dedd3dddeff4a56b0c4"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/bc37d50fea7d017d3d340f230811c9f1d7280af4",
-                "reference": "bc37d50fea7d017d3d340f230811c9f1d7280af4",
+                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/e8ba02eed7bbbb9e59e43dedd3dddeff4a56b0c4",
+                "reference": "e8ba02eed7bbbb9e59e43dedd3dddeff4a56b0c4",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3"
+                "php": "^7.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "~4.2"
+                "phpunit/phpunit": "^6.0"
             },
             "suggest": {
                 "ext-uopz": "*"
@@ -4216,7 +4717,7 @@
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "1.0-dev"
+                    "dev-master": "2.0-dev"
                 }
             },
             "autoload": {
@@ -4239,33 +4740,34 @@
             "keywords": [
                 "global state"
             ],
-            "time": "2015-10-12 03:26:01"
+            "time": "2017-04-27 15:39:26"
         },
         {
             "name": "sebastian/object-enumerator",
-            "version": "2.0.1",
+            "version": "3.0.3",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/object-enumerator.git",
-                "reference": "1311872ac850040a79c3c058bea3e22d0f09cbb7"
+                "reference": "7cfd9e65d11ffb5af41198476395774d4c8a84c5"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/1311872ac850040a79c3c058bea3e22d0f09cbb7",
-                "reference": "1311872ac850040a79c3c058bea3e22d0f09cbb7",
+                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/7cfd9e65d11ffb5af41198476395774d4c8a84c5",
+                "reference": "7cfd9e65d11ffb5af41198476395774d4c8a84c5",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.6",
-                "sebastian/recursion-context": "~2.0"
+                "php": "^7.0",
+                "sebastian/object-reflector": "^1.1.1",
+                "sebastian/recursion-context": "^3.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "~5"
+                "phpunit/phpunit": "^6.0"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "2.0.x-dev"
+                    "dev-master": "3.0.x-dev"
                 }
             },
             "autoload": {
@@ -4285,32 +4787,77 @@
             ],
             "description": "Traverses array structures and object graphs to enumerate all referenced objects",
             "homepage": "https://github.com/sebastianbergmann/object-enumerator/",
-            "time": "2017-02-18 15:18:39"
+            "time": "2017-08-03 12:35:26"
+        },
+        {
+            "name": "sebastian/object-reflector",
+            "version": "1.1.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/object-reflector.git",
+                "reference": "773f97c67f28de00d397be301821b06708fca0be"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/773f97c67f28de00d397be301821b06708fca0be",
+                "reference": "773f97c67f28de00d397be301821b06708fca0be",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^6.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.1-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                }
+            ],
+            "description": "Allows reflection of object attributes, including inherited and non-public ones",
+            "homepage": "https://github.com/sebastianbergmann/object-reflector/",
+            "time": "2017-03-29 09:07:27"
         },
         {
             "name": "sebastian/recursion-context",
-            "version": "2.0.0",
+            "version": "3.0.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/sebastianbergmann/recursion-context.git",
-                "reference": "2c3ba150cbec723aa057506e73a8d33bdb286c9a"
+                "reference": "5b0cd723502bac3b006cbf3dbf7a1e3fcefe4fa8"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/2c3ba150cbec723aa057506e73a8d33bdb286c9a",
-                "reference": "2c3ba150cbec723aa057506e73a8d33bdb286c9a",
+                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/5b0cd723502bac3b006cbf3dbf7a1e3fcefe4fa8",
+                "reference": "5b0cd723502bac3b006cbf3dbf7a1e3fcefe4fa8",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.3.3"
+                "php": "^7.0"
             },
             "require-dev": {
-                "phpunit/phpunit": "~4.4"
+                "phpunit/phpunit": "^6.0"
             },
             "type": "library",
             "extra": {
                 "branch-alias": {
-                    "dev-master": "2.0.x-dev"
+                    "dev-master": "3.0.x-dev"
                 }
             },
             "autoload": {
@@ -4338,7 +4885,7 @@
             ],
             "description": "Provides functionality to recursively process PHP variables",
             "homepage": "http://www.github.com/sebastianbergmann/recursion-context",
-            "time": "2016-11-19 07:33:16"
+            "time": "2017-03-03 06:23:57"
         },
         {
             "name": "sebastian/resource-operations",
@@ -4427,20 +4974,20 @@
         },
         {
             "name": "symfony/class-loader",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/class-loader.git",
-                "reference": "386a294d621576302e7cc36965d6ed53b8c73c4f"
+                "reference": "7572c904b209fa9907c69a6a9a68243c265a4d01"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/class-loader/zipball/386a294d621576302e7cc36965d6ed53b8c73c4f",
-                "reference": "386a294d621576302e7cc36965d6ed53b8c73c4f",
+                "url": "https://api.github.com/repos/symfony/class-loader/zipball/7572c904b209fa9907c69a6a9a68243c265a4d01",
+                "reference": "7572c904b209fa9907c69a6a9a68243c265a4d01",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9"
+                "php": "^5.5.9|>=7.0.8"
             },
             "require-dev": {
                 "symfony/finder": "~2.8|~3.0",
@@ -4479,24 +5026,24 @@
             ],
             "description": "Symfony ClassLoader Component",
             "homepage": "https://symfony.com",
-            "time": "2017-06-02 09:51:43"
+            "time": "2017-10-02 06:42:24"
         },
         {
             "name": "symfony/dom-crawler",
-            "version": "v3.3.6",
+            "version": "v3.3.10",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/dom-crawler.git",
-                "reference": "fc2c588ce376e9fe04a7b8c79e3ec62fe32d95b1"
+                "reference": "40dafd42d5dad7fe5ad4e958413d92a207522ac1"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/dom-crawler/zipball/fc2c588ce376e9fe04a7b8c79e3ec62fe32d95b1",
-                "reference": "fc2c588ce376e9fe04a7b8c79e3ec62fe32d95b1",
+                "url": "https://api.github.com/repos/symfony/dom-crawler/zipball/40dafd42d5dad7fe5ad4e958413d92a207522ac1",
+                "reference": "40dafd42d5dad7fe5ad4e958413d92a207522ac1",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9",
+                "php": "^5.5.9|>=7.0.8",
                 "symfony/polyfill-mbstring": "~1.0"
             },
             "require-dev": {
@@ -4535,62 +5082,47 @@
             ],
             "description": "Symfony DomCrawler Component",
             "homepage": "https://symfony.com",
-            "time": "2017-05-25 23:10:31"
+            "time": "2017-10-02 06:42:24"
         },
         {
-            "name": "symfony/yaml",
-            "version": "v3.3.6",
+            "name": "theseer/tokenizer",
+            "version": "1.1.0",
             "source": {
                 "type": "git",
-                "url": "https://github.com/symfony/yaml.git",
-                "reference": "ddc23324e6cfe066f3dd34a37ff494fa80b617ed"
+                "url": "https://github.com/theseer/tokenizer.git",
+                "reference": "cb2f008f3f05af2893a87208fe6a6c4985483f8b"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/yaml/zipball/ddc23324e6cfe066f3dd34a37ff494fa80b617ed",
-                "reference": "ddc23324e6cfe066f3dd34a37ff494fa80b617ed",
+                "url": "https://api.github.com/repos/theseer/tokenizer/zipball/cb2f008f3f05af2893a87208fe6a6c4985483f8b",
+                "reference": "cb2f008f3f05af2893a87208fe6a6c4985483f8b",
                 "shasum": ""
             },
             "require": {
-                "php": ">=5.5.9"
-            },
-            "require-dev": {
-                "symfony/console": "~2.8|~3.0"
-            },
-            "suggest": {
-                "symfony/console": "For validating YAML files using the lint command"
+                "ext-dom": "*",
+                "ext-tokenizer": "*",
+                "ext-xmlwriter": "*",
+                "php": "^7.0"
             },
             "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "3.3-dev"
-                }
-            },
             "autoload": {
-                "psr-4": {
-                    "Symfony\\Component\\Yaml\\": ""
-                },
-                "exclude-from-classmap": [
-                    "/Tests/"
+                "classmap": [
+                    "src/"
                 ]
             },
             "notification-url": "https://packagist.org/downloads/",
             "license": [
-                "MIT"
+                "BSD-3-Clause"
             ],
             "authors": [
                 {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "https://symfony.com/contributors"
+                    "name": "Arne Blankerts",
+                    "email": "arne@blankerts.de",
+                    "role": "Developer"
                 }
             ],
-            "description": "Symfony Yaml Component",
-            "homepage": "https://symfony.com",
-            "time": "2017-07-23 12:43:26"
+            "description": "A small library for converting tokenized PHP source code into XML and potentially other formats",
+            "time": "2017-04-07 12:08:54"
         },
         {
             "name": "webmozart/assert",
@@ -4644,11 +5176,11 @@
         }
     ],
     "aliases": [],
-    "minimum-stability": "dev",
+    "minimum-stability": "stable",
     "stability-flags": {
-        "proengsoft/laravel-jsvalidation": 20
+        "tymon/jwt-auth": 5
     },
-    "prefer-stable": true,
+    "prefer-stable": false,
     "prefer-lowest": false,
     "platform": {
         "php": ">=5.6.4"
diff --git a/config/app.php b/config/app.php
index eb0f964..2e409ae 100644
--- a/config/app.php
+++ b/config/app.php
@@ -23,7 +23,7 @@ return [
     | Vanguard Version
     |--------------------------------------------------------------------------
     */
-    'version' => '2.0.2',
+    'version' => '2.1.0',
 
     /*
     |--------------------------------------------------------------------------
diff --git a/config/broadcasting.php b/config/broadcasting.php
index 36f9b3c..e34e07d 100644
--- a/config/broadcasting.php
+++ b/config/broadcasting.php
@@ -30,9 +30,12 @@ return [
 
         'pusher' => [
             'driver' => 'pusher',
-            'key' => env('PUSHER_KEY'),
-            'secret' => env('PUSHER_SECRET'),
+            'key' => env('PUSHER_APP_KEY'),
+            'secret' => env('PUSHER_APP_SECRET'),
             'app_id' => env('PUSHER_APP_ID'),
+            'options' => [
+                //
+            ],
         ],
 
         'redis' => [
diff --git a/config/cache.php b/config/cache.php
index e2e54fe..42c26c2 100644
--- a/config/cache.php
+++ b/config/cache.php
@@ -46,14 +46,24 @@ return [
 
         'file' => [
             'driver' => 'file',
-            'path'   => storage_path('framework/cache'),
+            'path' => storage_path('framework/cache/data'),
         ],
 
         'memcached' => [
-            'driver'  => 'memcached',
+            'driver' => 'memcached',
+            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
+            'sasl' => [
+                env('MEMCACHED_USERNAME'),
+                env('MEMCACHED_PASSWORD'),
+            ],
+            'options' => [
+                // Memcached::OPT_CONNECT_TIMEOUT  => 2000,
+            ],
             'servers' => [
                 [
-                    'host' => '127.0.0.1', 'port' => 11211, 'weight' => 100,
+                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),
+                    'port' => env('MEMCACHED_PORT', 11211),
+                    'weight' => 100,
                 ],
             ],
         ],
@@ -76,6 +86,9 @@ return [
     |
     */
 
-    'prefix' => 'laravel',
+    'prefix' => env(
+        'CACHE_PREFIX',
+        str_slug(env('APP_NAME', 'laravel'), '_').'_cache'
+    ),
 
 ];
diff --git a/config/compile.php b/config/compile.php
deleted file mode 100644
index 04807ea..0000000
--- a/config/compile.php
+++ /dev/null
@@ -1,35 +0,0 @@
-<?php
-
-return [
-
-    /*
-    |--------------------------------------------------------------------------
-    | Additional Compiled Classes
-    |--------------------------------------------------------------------------
-    |
-    | Here you may specify additional classes to include in the compiled file
-    | generated by the `artisan optimize` command. These should be classes
-    | that are included on basically every request into the application.
-    |
-    */
-
-    'files' => [
-        //
-    ],
-
-    /*
-    |--------------------------------------------------------------------------
-    | Compiled File Providers
-    |--------------------------------------------------------------------------
-    |
-    | Here you may list service providers which define a "compiles" function
-    | that returns additional files that should be compiled, providing an
-    | easy way to get common files from any packages you are utilizing.
-    |
-    */
-
-    'providers' => [
-        //
-    ],
-
-];
diff --git a/config/database.php b/config/database.php
index 7922d30..9653303 100644
--- a/config/database.php
+++ b/config/database.php
@@ -35,7 +35,7 @@ return [
 
         'sqlite' => [
             'driver'   => 'sqlite',
-            'database' => storage_path('database.sqlite'),
+            'database' => env('DB_DATABASE', database_path('database.sqlite')),
             'prefix'   => env('DB_PREFIX', ''),
         ],
 
@@ -47,36 +47,41 @@ return [
 
         'mysql' => [
             'driver'    => 'mysql',
-            'engine'    => 'InnoDB',
             'host'      => env('DB_HOST', 'localhost'),
+            'port'      => env('DB_PORT', '3306'),
             'database'  => env('DB_DATABASE', 'forge'),
             'username'  => env('DB_USERNAME', 'forge'),
             'password'  => env('DB_PASSWORD', ''),
-            'charset'   => 'utf8',
-            'collation' => 'utf8_unicode_ci',
+            'unix_socket' => env('DB_SOCKET', ''),
+            'charset'   => 'utf8mb4',
+            'collation' => 'utf8mb4_unicode_ci',
             'prefix'    => env('DB_PREFIX', ''),
-            'strict'    => false
+            'strict'    => false,
+            'engine'    => 'InnoDB'
         ],
 
         'pgsql' => [
-            'driver'   => 'pgsql',
-            'host'     => env('DB_HOST', 'localhost'),
+            'driver' => 'pgsql',
+            'host' => env('DB_HOST', '127.0.0.1'),
+            'port' => env('DB_PORT', '5432'),
             'database' => env('DB_DATABASE', 'forge'),
             'username' => env('DB_USERNAME', 'forge'),
             'password' => env('DB_PASSWORD', ''),
-            'charset'  => 'utf8',
-            'prefix'   => env('DB_PREFIX', ''),
-            'schema'   => 'public',
+            'charset' => 'utf8',
+            'prefix' => '',
+            'schema' => 'public',
+            'sslmode' => 'prefer',
         ],
 
         'sqlsrv' => [
-            'driver'   => 'sqlsrv',
-            'host'     => env('DB_HOST', 'localhost'),
+            'driver' => 'sqlsrv',
+            'host' => env('DB_HOST', 'localhost'),
+            'port' => env('DB_PORT', '1433'),
             'database' => env('DB_DATABASE', 'forge'),
             'username' => env('DB_USERNAME', 'forge'),
             'password' => env('DB_PASSWORD', ''),
-            'charset'  => 'utf8',
-            'prefix'   => env('DB_PREFIX', ''),
+            'charset' => 'utf8',
+            'prefix' => '',
         ],
 
     ],
diff --git a/config/filesystems.php b/config/filesystems.php
index 6216f66..0da6f97 100644
--- a/config/filesystems.php
+++ b/config/filesystems.php
@@ -48,6 +48,13 @@ return [
             'root'   => storage_path('app'),
         ],
 
+        'public' => [
+            'driver' => 'local',
+            'root' => storage_path('app/public'),
+            'url' => env('APP_URL').'/storage',
+            'visibility' => 'public',
+        ],
+
         'ftp' => [
             'driver'   => 'ftp',
             'host'     => 'ftp.example.com',
diff --git a/config/mail.php b/config/mail.php
index 1741262..2354433 100644
--- a/config/mail.php
+++ b/config/mail.php
@@ -54,7 +54,10 @@ return [
     |
     */
 
-    'from' => ['address' => env('MAIL_FROM_ADDRESS', 'test@vanguard.dev'), 'name' => env('MAIL_FROM_NAME', 'Tester')],
+    'from' => [
+        'address' => env('MAIL_FROM_ADDRESS', 'test@vanguard.dev'),
+        'name' => env('MAIL_FROM_NAME', 'Tester')
+    ],
 
     /*
     |--------------------------------------------------------------------------
@@ -110,19 +113,6 @@ return [
 
     /*
     |--------------------------------------------------------------------------
-    | Mail "Pretend"
-    |--------------------------------------------------------------------------
-    |
-    | When this option is enabled, e-mail will not actually be sent over the
-    | web and will instead be written to your application's logs files so
-    | you may inspect the message. This is great for local development.
-    |
-    */
-
-    'pretend' => false,
-
-    /*
-    |--------------------------------------------------------------------------
     | Markdown Mail Settings
     |--------------------------------------------------------------------------
     |
diff --git a/config/queue.php b/config/queue.php
index cf9b09d..d304928 100644
--- a/config/queue.php
+++ b/config/queue.php
@@ -39,38 +39,30 @@ return [
             'driver' => 'database',
             'table' => 'jobs',
             'queue' => 'default',
-            'expire' => 60,
+            'retry_after' => 90,
         ],
 
         'beanstalkd' => [
             'driver' => 'beanstalkd',
-            'host'   => 'localhost',
-            'queue'  => 'default',
-            'ttr'    => 60,
+            'host' => 'localhost',
+            'queue' => 'default',
+            'retry_after' => 90,
         ],
 
         'sqs' => [
             'driver' => 'sqs',
-            'key'    => 'your-public-key',
+            'key' => 'your-public-key',
             'secret' => 'your-secret-key',
-            'queue'  => 'your-queue-url',
+            'prefix' => 'https://sqs.us-east-1.amazonaws.com/your-account-id',
+            'queue' => 'your-queue-name',
             'region' => 'us-east-1',
         ],
 
-        'iron' => [
-            'driver'  => 'iron',
-            'host'    => 'mq-aws-us-east-1.iron.io',
-            'token'   => 'your-token',
-            'project' => 'your-project-id',
-            'queue'   => 'your-queue-name',
-            'encrypt' => true,
-        ],
-
         'redis' => [
             'driver' => 'redis',
             'connection' => 'default',
-            'queue'  => 'default',
-            'expire' => 60,
+            'queue' => 'default',
+            'retry_after' => 90,
         ],
 
     ],
@@ -87,7 +79,8 @@ return [
     */
 
     'failed' => [
-        'database' => 'mysql', 'table' => 'failed_jobs',
+        'database' => env('DB_CONNECTION', 'mysql'),
+        'table' => 'failed_jobs',
     ],
 
 ];
diff --git a/config/services.php b/config/services.php
index 209a9cc..3c8dc72 100644
--- a/config/services.php
+++ b/config/services.php
@@ -19,10 +19,6 @@ return [
         'secret' => env('MAILGUN_SECRET'),
     ],
 
-    'mandrill' => [
-        'secret' => env('MANDRILL_SECRET'),
-    ],
-
     'ses' => [
         'key'    => env('SES_KEY'),
         'secret' => env('SES_SECRET'),
diff --git a/config/session.php b/config/session.php
index 9a07906..3219fbc 100644
--- a/config/session.php
+++ b/config/session.php
@@ -29,7 +29,7 @@ return [
     |
     */
 
-    'lifetime' => 120,
+    'lifetime' => env('SESSION_LIFETIME', 120),
 
     'expire_on_close' => false,
 
@@ -87,6 +87,18 @@ return [
 
     /*
     |--------------------------------------------------------------------------
+    | Session Cache Store
+    |--------------------------------------------------------------------------
+    |
+    | When using the "apc" or "memcached" session drivers, you may specify a
+    | cache store that should be used for these sessions. This value must
+    | correspond with one of the application's configured cache stores.
+    |
+    */
+    'store' => null,
+
+    /*
+    |--------------------------------------------------------------------------
     | Session Sweeping Lottery
     |--------------------------------------------------------------------------
     |
@@ -109,7 +121,10 @@ return [
     |
     */
 
-    'cookie' => 'vanguard_session',
+    'cookie' => env(
+        'SESSION_COOKIE',
+        str_slug(env('APP_NAME', 'laravel'), '_').'_session'
+    ),
 
     /*
     |--------------------------------------------------------------------------
@@ -135,7 +150,7 @@ return [
     |
     */
 
-    'domain' => null,
+    'domain' => env('SESSION_DOMAIN', null),
 
     /*
     |--------------------------------------------------------------------------
@@ -148,6 +163,32 @@ return [
     |
     */
 
-    'secure' => false,
+    'secure' => env('SESSION_SECURE_COOKIE', false),
+
+    /*
+    |--------------------------------------------------------------------------
+    | HTTP Access Only
+    |--------------------------------------------------------------------------
+    |
+    | Setting this value to true will prevent JavaScript from accessing the
+    | value of the cookie and the cookie will only be accessible through
+    | the HTTP protocol. You are free to modify this option if needed.
+    |
+    */
+    'http_only' => true,
+
+    /*
+    |--------------------------------------------------------------------------
+    | Same-Site Cookies
+    |--------------------------------------------------------------------------
+    |
+    | This option determines how your cookies behave when cross-site requests
+    | take place, and can be used to mitigate CSRF attacks. By default, we
+    | do not enable this as other CSRF protection services are in place.
+    |
+    | Supported: "lax", "strict"
+    |
+    */
+    'same_site' => null,
 
 ];
diff --git a/config/settings.php b/config/settings.php
index 78009a5..47107c7 100644
--- a/config/settings.php
+++ b/config/settings.php
@@ -1,17 +1,17 @@
 <?php
-return array(
-	// which type of store to use.
-	// valid options: 'json', 'database'
-	'store' => 'json',
+return [
+    // which type of store to use.
+    // valid options: 'json', 'database'
+    'store' => 'json',
 
-	// if the json store is used, give the full path to the .json file
-	// that the store writes to.
-	'path' => storage_path().'/settings.json',
+    // if the json store is used, give the full path to the .json file
+    // that the store writes to.
+    'path' => storage_path().'/settings.json',
 
-	// if the database store is used, set the name of the table used..
-	'table' => 'settings',
+    // if the database store is used, set the name of the table used..
+    'table' => 'settings',
 
-	// If the database store is used, you can set which connection to use. if
-	// set to null, the default connection will be used.
-	'connection' => null,
-);
+    // If the database store is used, you can set which connection to use. if
+    // set to null, the default connection will be used.
+    'connection' => null,
+];
diff --git a/config/view.php b/config/view.php
index e193ab6..2acfd9c 100644
--- a/config/view.php
+++ b/config/view.php
@@ -14,7 +14,7 @@ return [
     */
 
     'paths' => [
-        realpath(base_path('resources/views')),
+        resource_path('views'),
     ],
 
     /*
diff --git a/phpspec.yml b/phpspec.yml
deleted file mode 100644
index 77cbcb4..0000000
--- a/phpspec.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-suites:
-    main:
-        namespace: ASecurity
-        psr4_prefix: ASecurity
-        src_path: app
\ No newline at end of file
diff --git a/phpunit.xml b/phpunit.xml
index bb64160..b166455 100644
--- a/phpunit.xml
+++ b/phpunit.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <phpunit backupGlobals="false"
          backupStaticAttributes="false"
-         bootstrap="bootstrap/autoload.php"
+         bootstrap="vendor/autoload.php"
          colors="true"
          convertErrorsToExceptions="true"
          convertNoticesToExceptions="true"
diff --git a/public/.htaccess b/public/.htaccess
index 2e0b3d9..232a375 100644
--- a/public/.htaccess
+++ b/public/.htaccess
@@ -5,16 +5,17 @@
 
     RewriteEngine On
 
+    # Handle Authorization Header
+    RewriteCond %{HTTP:Authorization} .
+    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
+
     # Redirect Trailing Slashes If Not A Folder...
     RewriteCond %{REQUEST_FILENAME} !-d
-    RewriteRule ^(.*)/$ /$1 [L,R=301]
+    RewriteCond %{REQUEST_URI} (.+)/$
+    RewriteRule ^ %1 [L,R=301]
 
     # Handle Front Controller...
     RewriteCond %{REQUEST_FILENAME} !-d
     RewriteCond %{REQUEST_FILENAME} !-f
     RewriteRule ^ index.php [L]
-
-    # Handle Authorization Header
-    RewriteCond %{HTTP:Authorization} .
-    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
 </IfModule>
diff --git a/public/index.php b/public/index.php
index 8c01ec9..eca6ffc 100644
--- a/public/index.php
+++ b/public/index.php
@@ -7,6 +7,8 @@
  * @author   Taylor Otwell <taylorotwell@gmail.com>
  */
 
+define('LARAVEL_START', microtime(true));
+
 /*
 |--------------------------------------------------------------------------
 | Register The Auto Loader
@@ -19,7 +21,7 @@
 |
 */
 
-require __DIR__.'/../bootstrap/autoload.php';
+require __DIR__.'/../vendor/autoload.php';
 
 /*
 |--------------------------------------------------------------------------
diff --git a/public/vendor/jsvalidation/js/jsvalidation.js b/public/vendor/jsvalidation/js/jsvalidation.js
index f33b5ba..4d433cd 100644
--- a/public/vendor/jsvalidation/js/jsvalidation.js
+++ b/public/vendor/jsvalidation/js/jsvalidation.js
@@ -1396,7 +1396,7 @@ if ( $.ajaxPrefilter ) {
 }
 
 }));
-function strlen(string) {
+function strlen (string) {
   //  discuss at: http://phpjs.org/functions/strlen/
   // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
   // improved by: Sakimori
@@ -1413,55 +1413,56 @@ function strlen(string) {
   //   example 2: strlen('A\ud87e\udc04Z');
   //   returns 2: 3
 
-  var str = string + '';
+  var str = string + ''
   var i = 0,
     chr = '',
-    lgth = 0;
+    lgth = 0
 
   if (!this.php_js || !this.php_js.ini || !this.php_js.ini['unicode.semantics'] || this.php_js.ini[
       'unicode.semantics'].local_value.toLowerCase() !== 'on') {
-    return string.length;
+    return string.length
   }
 
-  var getWholeChar = function(str, i) {
-    var code = str.charCodeAt(i);
+  var getWholeChar = function (str, i) {
+    var code = str.charCodeAt(i)
     var next = '',
-      prev = '';
+      prev = ''
     if (0xD800 <= code && code <= 0xDBFF) {
       // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single characters)
       if (str.length <= (i + 1)) {
-        throw 'High surrogate without following low surrogate';
+        throw 'High surrogate without following low surrogate'
       }
-      next = str.charCodeAt(i + 1);
+      next = str.charCodeAt(i + 1)
       if (0xDC00 > next || next > 0xDFFF) {
-        throw 'High surrogate without following low surrogate';
+        throw 'High surrogate without following low surrogate'
       }
-      return str.charAt(i) + str.charAt(i + 1);
+      return str.charAt(i) + str.charAt(i + 1)
     } else if (0xDC00 <= code && code <= 0xDFFF) {
       // Low surrogate
       if (i === 0) {
-        throw 'Low surrogate without preceding high surrogate';
+        throw 'Low surrogate without preceding high surrogate'
       }
-      prev = str.charCodeAt(i - 1);
+      prev = str.charCodeAt(i - 1)
       if (0xD800 > prev || prev > 0xDBFF) {
-        //(could change last hex to 0xDB7F to treat high private surrogates as single characters)
-        throw 'Low surrogate without preceding high surrogate';
+        // (could change last hex to 0xDB7F to treat high private surrogates as single characters)
+        throw 'Low surrogate without preceding high surrogate'
       }
       // We can pass over low surrogates now as the second component in a pair which we have already processed
-      return false;
+      return false
     }
-    return str.charAt(i);
-  };
+    return str.charAt(i)
+  }
 
   for (i = 0, lgth = 0; i < str.length; i++) {
     if ((chr = getWholeChar(str, i)) === false) {
-      continue;
+      continue
     } // Adapt this line at the top of any loop, passing in the whole string and the current iteration and returning a variable to represent the individual character; purpose is to treat the first part of a surrogate pair as the whole character and then ignore the second part
-    lgth++;
+    lgth++
   }
-  return lgth;
+  return lgth
 }
-function array_diff(arr1) {
+
+function array_diff (arr1) {
   //  discuss at: http://phpjs.org/functions/array_diff/
   // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
   // improved by: Sanjoy Roy
@@ -1474,24 +1475,25 @@ function array_diff(arr1) {
     k1 = '',
     i = 1,
     k = '',
-    arr = {};
+    arr = {}
 
   arr1keys: for (k1 in arr1) {
     for (i = 1; i < argl; i++) {
-      arr = arguments[i];
+      arr = arguments[i]
       for (k in arr) {
         if (arr[k] === arr1[k1]) {
           // If it reaches here, it was found in at least one array, so try next value
-          continue arr1keys;
+          continue arr1keys
         }
       }
-      retArr[k1] = arr1[k1];
+      retArr[k1] = arr1[k1]
     }
   }
 
-  return retArr;
+  return retArr
 }
-function strtotime(text, now) {
+
+function strtotime (text, now) {
   //  discuss at: http://phpjs.org/functions/strtotime/
   //     version: 1109.2016
   // original by: Caio Ariede (http://caioariede.com)
@@ -1521,17 +1523,17 @@ function strtotime(text, now) {
   //   example 7: strtotime('2009-05-04T08:30:00Z');
   //   returns 7: 1241425800
 
-  var parsed, match, today, year, date, days, ranges, len, times, regex, i, fail = false;
+  var parsed, match, today, year, date, days, ranges, len, times, regex, i, fail = false
 
   if (!text) {
-    return fail;
+    return fail
   }
 
   // Unecessary spaces
   text = text.replace(/^\s+|\s+$/g, '')
     .replace(/\s{2,}/g, ' ')
     .replace(/[\t\r\n]/g, '')
-    .toLowerCase();
+    .toLowerCase()
 
   // in contrast to php, js Date.parse function interprets:
   // dates given as yyyy-mm-dd as in timezone: UTC,
@@ -1540,121 +1542,131 @@ function strtotime(text, now) {
   // etc...etc...
   // ...therefore we manually parse lots of common date formats
   match = text.match(
-    /^(\d{1,4})([\-\.\/\:])(\d{1,2})([\-\.\/\:])(\d{1,4})(?:\s(\d{1,2}):(\d{2})?:?(\d{2})?)?(?:\s([A-Z]+)?)?$/);
+    /^(\d{1,4})([\-\.\/\:])(\d{1,2})([\-\.\/\:])(\d{1,4})(?:\s(\d{1,2}):(\d{2})?:?(\d{2})?)?(?:\s([A-Z]+)?)?$/)
 
   if (match && match[2] === match[4]) {
     if (match[1] > 1901) {
       switch (match[2]) {
-      case '-': {
-        // YYYY-M-D
-        if (match[3] > 12 || match[5] > 31) {
-          return fail;
-        }
+        case '-':
+          {
+          // YYYY-M-D
+            if (match[3] > 12 || match[5] > 31) {
+              return fail
+            }
 
-        return new Date(match[1], parseInt(match[3], 10) - 1, match[5],
-          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;
-      }
-      case '.': {
-        // YYYY.M.D is not parsed by strtotime()
-        return fail;
-      }
-      case '/': {
-        // YYYY/M/D
-        if (match[3] > 12 || match[5] > 31) {
-          return fail;
-        }
+            return new Date(match[1], parseInt(match[3], 10) - 1, match[5],
+            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000
+          }
+        case '.':
+          {
+          // YYYY.M.D is not parsed by strtotime()
+            return fail
+          }
+        case '/':
+          {
+          // YYYY/M/D
+            if (match[3] > 12 || match[5] > 31) {
+              return fail
+            }
 
-        return new Date(match[1], parseInt(match[3], 10) - 1, match[5],
-          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;
-      }
+            return new Date(match[1], parseInt(match[3], 10) - 1, match[5],
+            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000
+          }
       }
     } else if (match[5] > 1901) {
       switch (match[2]) {
-      case '-': {
-        // D-M-YYYY
-        if (match[3] > 12 || match[1] > 31) {
-          return fail;
-        }
+        case '-':
+          {
+          // D-M-YYYY
+            if (match[3] > 12 || match[1] > 31) {
+              return fail
+            }
 
-        return new Date(match[5], parseInt(match[3], 10) - 1, match[1],
-          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;
-      }
-      case '.': {
-        // D.M.YYYY
-        if (match[3] > 12 || match[1] > 31) {
-          return fail;
-        }
+            return new Date(match[5], parseInt(match[3], 10) - 1, match[1],
+            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000
+          }
+        case '.':
+          {
+          // D.M.YYYY
+            if (match[3] > 12 || match[1] > 31) {
+              return fail
+            }
 
-        return new Date(match[5], parseInt(match[3], 10) - 1, match[1],
-          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;
-      }
-      case '/': {
-        // M/D/YYYY
-        if (match[1] > 12 || match[3] > 31) {
-          return fail;
-        }
+            return new Date(match[5], parseInt(match[3], 10) - 1, match[1],
+            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000
+          }
+        case '/':
+          {
+          // M/D/YYYY
+            if (match[1] > 12 || match[3] > 31) {
+              return fail
+            }
 
-        return new Date(match[5], parseInt(match[1], 10) - 1, match[3],
-          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;
-      }
+            return new Date(match[5], parseInt(match[1], 10) - 1, match[3],
+            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000
+          }
       }
     } else {
       switch (match[2]) {
-      case '-': {
-        // YY-M-D
-        if (match[3] > 12 || match[5] > 31 || (match[1] < 70 && match[1] > 38)) {
-          return fail;
-        }
+        case '-':
+          {
+          // YY-M-D
+            if (match[3] > 12 || match[5] > 31 || (match[1] < 70 && match[1] > 38)) {
+              return fail
+            }
 
-        year = match[1] >= 0 && match[1] <= 38 ? +match[1] + 2000 : match[1];
-        return new Date(year, parseInt(match[3], 10) - 1, match[5],
-          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;
-      }
-      case '.': {
-        // D.M.YY or H.MM.SS
-        if (match[5] >= 70) {
-          // D.M.YY
-          if (match[3] > 12 || match[1] > 31) {
-            return fail;
+            year = match[1] >= 0 && match[1] <= 38 ? +match[1] + 2000 : match[1]
+            return new Date(year, parseInt(match[3], 10) - 1, match[5],
+            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000
           }
+        case '.':
+          {
+          // D.M.YY or H.MM.SS
+            if (match[5] >= 70) {
+            // D.M.YY
+              if (match[3] > 12 || match[1] > 31) {
+                return fail
+              }
+
+              return new Date(match[5], parseInt(match[3], 10) - 1, match[1],
+              match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000
+            }
+            if (match[5] < 60 && !match[6]) {
+            // H.MM.SS
+              if (match[1] > 23 || match[3] > 59) {
+                return fail
+              }
+
+              today = new Date()
+              return new Date(today.getFullYear(), today.getMonth(), today.getDate(),
+              match[1] || 0, match[3] || 0, match[5] || 0, match[9] || 0) / 1000
+            }
 
-          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],
-            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;
-        }
-        if (match[5] < 60 && !match[6]) {
-          // H.MM.SS
-          if (match[1] > 23 || match[3] > 59) {
-            return fail;
+          // invalid format, cannot be parsed
+            return fail
           }
+        case '/':
+          {
+          // M/D/YY
+            if (match[1] > 12 || match[3] > 31 || (match[5] < 70 && match[5] > 38)) {
+              return fail
+            }
 
-          today = new Date();
-          return new Date(today.getFullYear(), today.getMonth(), today.getDate(),
-            match[1] || 0, match[3] || 0, match[5] || 0, match[9] || 0) / 1000;
-        }
-
-        // invalid format, cannot be parsed
-        return fail;
-      }
-      case '/': {
-        // M/D/YY
-        if (match[1] > 12 || match[3] > 31 || (match[5] < 70 && match[5] > 38)) {
-          return fail;
-        }
-
-        year = match[5] >= 0 && match[5] <= 38 ? +match[5] + 2000 : match[5];
-        return new Date(year, parseInt(match[1], 10) - 1, match[3],
-          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;
-      }
-      case ':': {
-        // HH:MM:SS
-        if (match[1] > 23 || match[3] > 59 || match[5] > 59) {
-          return fail;
-        }
+            year = match[5] >= 0 && match[5] <= 38 ? +match[5] + 2000 : match[5]
+            return new Date(year, parseInt(match[1], 10) - 1, match[3],
+            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000
+          }
+        case ':':
+          {
+          // HH:MM:SS
+            if (match[1] > 23 || match[3] > 59 || match[5] > 59) {
+              return fail
+            }
 
-        today = new Date();
-        return new Date(today.getFullYear(), today.getMonth(), today.getDate(),
-          match[1] || 0, match[3] || 0, match[5] || 0) / 1000;
-      }
+            today = new Date()
+            return new Date(today.getFullYear(), today.getMonth(), today.getDate(),
+            match[1] || 0, match[3] || 0, match[5] || 0) / 1000
+          }
       }
     }
   }
@@ -1662,10 +1674,10 @@ function strtotime(text, now) {
   // other formats and "now" should be parsed by Date.parse()
   if (text === 'now') {
     return now === null || isNaN(now) ? new Date()
-      .getTime() / 1000 | 0 : now | 0;
+      .getTime() / 1000 | 0 : now | 0
   }
   if (!isNaN(parsed = Date.parse(text))) {
-    return parsed / 1000 | 0;
+    return parsed / 1000 | 0
   }
   // Browsers != Chrome have problems parsing ISO 8601 date strings, as they do
   // not accept lower case characters, space, or shortened time zones.
@@ -1678,95 +1690,95 @@ function strtotime(text, now) {
       /^([0-9]{4}-[0-9]{2}-[0-9]{2})[ t]([0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?)([\+-][0-9]{2}(:[0-9]{2})?|z)/)) {
     // fix time zone information
     if (match[4] == 'z') {
-      match[4] = 'Z';
+      match[4] = 'Z'
     } else if (match[4].match(/^([\+-][0-9]{2})$/)) {
-      match[4] = match[4] + ':00';
+      match[4] = match[4] + ':00'
     }
 
     if (!isNaN(parsed = Date.parse(match[1] + 'T' + match[2] + match[4]))) {
-      return parsed / 1000 | 0;
+      return parsed / 1000 | 0
     }
   }
 
-  date = now ? new Date(now * 1000) : new Date();
+  date = now ? new Date(now * 1000) : new Date()
   days = {
-    'sun' : 0,
-    'mon' : 1,
-    'tue' : 2,
-    'wed' : 3,
-    'thu' : 4,
-    'fri' : 5,
-    'sat' : 6
-  };
+    'sun': 0,
+    'mon': 1,
+    'tue': 2,
+    'wed': 3,
+    'thu': 4,
+    'fri': 5,
+    'sat': 6
+  }
   ranges = {
-    'yea' : 'FullYear',
-    'mon' : 'Month',
-    'day' : 'Date',
-    'hou' : 'Hours',
-    'min' : 'Minutes',
-    'sec' : 'Seconds'
-  };
+    'yea': 'FullYear',
+    'mon': 'Month',
+    'day': 'Date',
+    'hou': 'Hours',
+    'min': 'Minutes',
+    'sec': 'Seconds'
+  }
 
-  function lastNext(type, range, modifier) {
-    var diff, day = days[range];
+  function lastNext (type, range, modifier) {
+    var diff, day = days[range]
 
     if (typeof day !== 'undefined') {
-      diff = day - date.getDay();
+      diff = day - date.getDay()
 
       if (diff === 0) {
-        diff = 7 * modifier;
+        diff = 7 * modifier
       } else if (diff > 0 && type === 'last') {
-        diff -= 7;
+        diff -= 7
       } else if (diff < 0 && type === 'next') {
-        diff += 7;
+        diff += 7
       }
 
-      date.setDate(date.getDate() + diff);
+      date.setDate(date.getDate() + diff)
     }
   }
 
-  function process(val) {
+  function process (val) {
     var splt = val.split(' '), // Todo: Reconcile this with regex using \s, taking into account browser issues with split and regexes
       type = splt[0],
       range = splt[1].substring(0, 3),
       typeIsNumber = /\d+/.test(type),
       ago = splt[2] === 'ago',
-      num = (type === 'last' ? -1 : 1) * (ago ? -1 : 1);
+      num = (type === 'last' ? -1 : 1) * (ago ? -1 : 1)
 
     if (typeIsNumber) {
-      num *= parseInt(type, 10);
+      num *= parseInt(type, 10)
     }
 
     if (ranges.hasOwnProperty(range) && !splt[1].match(/^mon(day|\.)?$/i)) {
-      return date['set' + ranges[range]](date['get' + ranges[range]]() + num);
+      return date['set' + ranges[range]](date['get' + ranges[range]]() + num)
     }
 
     if (range === 'wee') {
-      return date.setDate(date.getDate() + (num * 7));
+      return date.setDate(date.getDate() + (num * 7))
     }
 
     if (type === 'next' || type === 'last') {
-      lastNext(type, range, num);
+      lastNext(type, range, num)
     } else if (!typeIsNumber) {
-      return false;
+      return false
     }
 
-    return true;
+    return true
   }
 
   times = '(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec' +
     '|sunday|sun\\.?|monday|mon\\.?|tuesday|tue\\.?|wednesday|wed\\.?' +
-    '|thursday|thu\\.?|friday|fri\\.?|saturday|sat\\.?)';
-  regex = '([+-]?\\d+\\s' + times + '|' + '(last|next)\\s' + times + ')(\\sago)?';
+    '|thursday|thu\\.?|friday|fri\\.?|saturday|sat\\.?)'
+  regex = '([+-]?\\d+\\s' + times + '|' + '(last|next)\\s' + times + ')(\\sago)?'
 
-  match = text.match(new RegExp(regex, 'gi'));
+  match = text.match(new RegExp(regex, 'gi'))
   if (!match) {
-    return fail;
+    return fail
   }
 
   for (i = 0, len = match.length; i < len; i++) {
     if (!process(match[i])) {
-      return fail;
+      return fail
     }
   }
 
@@ -1774,84 +1786,173 @@ function strtotime(text, now) {
   // if (!match.every(process))
   //    return false;
 
-  return (date.getTime() / 1000);
+  return (date.getTime() / 1000)
+}
+
+function is_numeric (mixed_var) {
+  //  discuss at: http://phpjs.org/functions/is_numeric/
+  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
+  // improved by: David
+  // improved by: taith
+  // bugfixed by: Tim de Koning
+  // bugfixed by: WebDevHobo (http://webdevhobo.blogspot.com/)
+  // bugfixed by: Brett Zamir (http://brett-zamir.me)
+  // bugfixed by: Denis Chenu (http://shnoulle.net)
+  //   example 1: is_numeric(186.31);
+  //   returns 1: true
+  //   example 2: is_numeric('Kevin van Zonneveld');
+  //   returns 2: false
+  //   example 3: is_numeric(' +186.31e2');
+  //   returns 3: true
+  //   example 4: is_numeric('');
+  //   returns 4: false
+  //   example 5: is_numeric([]);
+  //   returns 5: false
+  //   example 6: is_numeric('1 ');
+  //   returns 6: false
+
+  var whitespace =
+    ' \n\r\t\f\x0b\xa0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000'
+  return (typeof mixed_var === 'number' || (typeof mixed_var === 'string' && whitespace.indexOf(mixed_var.slice(-1)) ===
+    -1)) && mixed_var !== '' && !isNaN(mixed_var)
 }
+
 /*!
- * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2015
- * @version 1.3.1
+ * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2017
+ * @version 1.3.4
  *
- * Date formatter utility library, that allows you to format date and 
- * time variables or Date objects using PHP DateTime format.
- * @see http://php.net/manual/en/function.date.php
+ * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.
+ * This library is a standalone javascript library and does not depend on other libraries or plugins like jQuery.
  * 
- * Authors:
- *      [Kartik Visweswaran](https://github.com/kartik-v)
- *      [Enrica R](https://github.com/Erik-r)
+ * @see http://php.net/manual/en/function.date.php
  *
  * For more JQuery plugins visit http://plugins.krajee.com
  * For more Yii related demos visit http://demos.krajee.com
  */
-var defaultConfig = {
-    dateSettings: {
-        days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
-        daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
-        months: ['January', 'February', 'March', 'April', 'May', 'June',
-            'July', 'August', 'September', 'October', 'November', 'December'],
-        monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
-        meridiem: ['AM', 'PM']
-    },
-    separators: /[ \-+\/\.T:@]/g,
-    validParts: /[djDlwSFmMnyYaAgGhHisU]/g
-};
-
-var DateFormatter = function (options) {
-    var config = $.extend(true, defaultConfig, options);
-    this.dateSettings = config.dateSettings;
-    this.separators = config.separators;
-    this.validParts = config.validParts;
-};
-
-DateFormatter.prototype = {
-    constructor: DateFormatter,
-    parseDate: function (vDate, vFormat) {
-        if (!vDate) {
-            return undefined;
-        }
-        if (vDate instanceof Date) {
-            return vDate;
+var DateFormatter;
+(function () {
+    "use strict";
+
+    var _compare, _lpad, _extend, _indexOf, defaultSettings, DAY, HOUR;
+    DAY = 1000 * 60 * 60 * 24;
+    HOUR = 3600;
+
+    _compare = function (str1, str2) {
+        return typeof(str1) === 'string' && typeof(str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();
+    };
+    _lpad = function (value, length, chr) {
+        var val = value.toString();
+        chr = chr || '0';
+        return val.length < length ? _lpad(chr + val, length) : val;
+    };
+    _extend = function (out) {
+        var i, obj;
+        out = out || {};
+        for (i = 1; i < arguments.length; i++) {
+            obj = arguments[i];
+            if (!obj) {
+                continue;
+            }
+            for (var key in obj) {
+                if (obj.hasOwnProperty(key)) {
+                    if (typeof obj[key] === 'object') {
+                        _extend(out[key], obj[key]);
+                    } else {
+                        out[key] = obj[key];
+                    }
+                }
+            }
         }
-        if (typeof vDate == 'number') {
-            return new Date(vDate);
+        return out;
+    };
+    _indexOf = function (val, arr) {
+        for (var i = 0; i < arr.length; i++) {
+            if (arr[i].toLowerCase() === val.toLowerCase()) {
+                return i;
+            }
         }
-        var self = this,
-            parsedDateTime = {
-                date: null,
-                year: null,
-                month: null,
-                day: null,
-                dayOfWeek: null,
-                hour: 0,
-                min: 0,
-                sec: 0
-            };
-
-        if (vDate instanceof Date) {
-            return vDate;
-        } else if (typeof vDate == 'string') {
-            var vFormatParts = vFormat.match(self.validParts);
+        return -1;
+    };
+    defaultSettings = {
+        dateSettings: {
+            days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
+            daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
+            months: [
+                'January', 'February', 'March', 'April', 'May', 'June', 'July',
+                'August', 'September', 'October', 'November', 'December'
+            ],
+            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
+            meridiem: ['AM', 'PM'],
+            ordinal: function (number) {
+                var n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};
+                return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];
+            }
+        },
+        separators: /[ \-+\/\.T:@]/g,
+        validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,
+        intParts: /[djwNzmnyYhHgGis]/g,
+        tzParts: /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
+        tzClip: /[^-+\dA-Z]/g
+    };
+
+    DateFormatter = function (options) {
+        var self = this, config = _extend(defaultSettings, options);
+        self.dateSettings = config.dateSettings;
+        self.separators = config.separators;
+        self.validParts = config.validParts;
+        self.intParts = config.intParts;
+        self.tzParts = config.tzParts;
+        self.tzClip = config.tzClip;
+    };
+
+    DateFormatter.prototype = {
+        constructor: DateFormatter,
+        getMonth: function (val) {
+            var self = this, i;
+            i = _indexOf(val, self.dateSettings.monthsShort) + 1;
+            if (i === 0) {
+                i = _indexOf(val, self.dateSettings.months) + 1;
+            }
+            return i;
+        },
+        parseDate: function (vDate, vFormat) {
+            var self = this, vFormatParts, vDateParts, i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,
+                vSettings = self.dateSettings, vMonth, vMeriIndex, vMeriOffset, len, mer,
+                out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0};
+            if (!vDate) {
+                return null;
+            }
+            if (vDate instanceof Date) {
+                return vDate;
+            }
+            if (vFormat === 'U') {
+                i = parseInt(vDate);
+                return i ? new Date(i * 1000) : vDate;
+            }
+            switch (typeof vDate) {
+                case 'number':
+                    return new Date(vDate);
+                case 'string':
+                    break;
+                default:
+                    return null;
+            }
+            vFormatParts = vFormat.match(self.validParts);
             if (!vFormatParts || vFormatParts.length === 0) {
                 throw new Error("Invalid date format definition.");
             }
-            var vDateParts = vDate.replace(self.separators, '\0').split('\0');
-            var i, vDateFlag = false , vTimeFlag = false;
+            vDateParts = vDate.replace(self.separators, '\0').split('\0');
             for (i = 0; i < vDateParts.length; i++) {
+                vDatePart = vDateParts[i];
+                iDatePart = parseInt(vDatePart);
                 switch (vFormatParts[i]) {
                     case 'y':
                     case 'Y':
-                        if (vDateParts[i].length == 2) {
-                            parsedDateTime.year = parseInt(((parseInt(vDateParts[i]) < 70) ? '20' : '19') + vDateParts[i]);
-                        } else if (vDateParts[i].length == 4) {
-                            parsedDateTime.year = parseInt(vDateParts[i]);
+                        if (iDatePart) {
+                            len = vDatePart.length;
+                            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;
+                        } else {
+                            return null;
                         }
                         vDateFlag = true;
                         break;
@@ -1859,242 +1960,489 @@ DateFormatter.prototype = {
                     case 'n':
                     case 'M':
                     case 'F':
-                        var vMonth;
-                        if (isNaN(vDateParts[i])) {
-                            vMonth = self.dateSettings.monthsShort.indexOf(vDateParts[i]);
-                            if (vMonth > -1) {
-                                parsedDateTime.month = vMonth + 1;
-                            }
-                            vMonth = self.dateSettings.months.indexOf(vDateParts[i]);
-                            if (vMonth > -1) {
-                                parsedDateTime.month = vMonth + 1;
+                        if (isNaN(iDatePart)) {
+                            vMonth = self.getMonth(vDatePart);
+                            if (vMonth > 0) {
+                                out.month = vMonth;
+                            } else {
+                                return null;
                             }
                         } else {
-                            if (parseInt(vDateParts[i]) >= 1 && parseInt(vDateParts[i]) <= 12) {
-                                parsedDateTime.month = parseInt(vDateParts[i]);
+                            if (iDatePart >= 1 && iDatePart <= 12) {
+                                out.month = iDatePart;
+                            } else {
+                                return null;
                             }
                         }
                         vDateFlag = true;
                         break;
                     case 'd':
                     case 'j':
-                        if (parseInt(vDateParts[i]) >= 1 && parseInt(vDateParts[i]) <= 31) {
-                            parsedDateTime.day = parseInt(vDateParts[i]);
+                        if (iDatePart >= 1 && iDatePart <= 31) {
+                            out.day = iDatePart;
+                        } else {
+                            return null;
                         }
                         vDateFlag = true;
                         break;
                     case 'g':
                     case 'h':
-                        var vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :
+                        vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :
                             (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;
-
-                        if (vMeriIndex > -1) {
-                            var vMeriOffset = (vDateParts[vMeriIndex].toLowerCase == self.dateSettings.meridiem[0].toLowerCase) ? 0 :
-                                (vDateParts[vMeriIndex].toLowerCase == self.dateSettings.meridiem[1].toLowerCase) ? 12 : -1;
-
-                            if (parseInt(vDateParts[i]) >= 1 && parseInt(vDateParts[i]) <= 12 && vMeriOffset > -1) {
-                                parsedDateTime.hour = parseInt(vDateParts[i]) + vMeriOffset - 1;
-                            } else if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 23) {
-                                parsedDateTime.hour = parseInt(vDateParts[i]);
+                        mer = vDateParts[vMeriIndex];
+                        if (vMeriIndex !== -1) {
+                            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :
+                                (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);
+                            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset !== -1) {
+                                out.hour = iDatePart % 12 === 0 ? vMeriOffset : iDatePart + vMeriOffset;
+                            } else {
+                                if (iDatePart >= 0 && iDatePart <= 23) {
+                                    out.hour = iDatePart;
+                                }
+                            }
+                        } else {
+                            if (iDatePart >= 0 && iDatePart <= 23) {
+                                out.hour = iDatePart;
+                            } else {
+                                return null;
                             }
-                        } else if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 23) {
-                            parsedDateTime.hour = parseInt(vDateParts[i]);
                         }
                         vTimeFlag = true;
                         break;
                     case 'G':
                     case 'H':
-                        if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 23) {
-                            parsedDateTime.hour = parseInt(vDateParts[i]);
+                        if (iDatePart >= 0 && iDatePart <= 23) {
+                            out.hour = iDatePart;
+                        } else {
+                            return null;
                         }
                         vTimeFlag = true;
                         break;
                     case 'i':
-                        if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 59) {
-                            parsedDateTime.min = parseInt(vDateParts[i]);
+                        if (iDatePart >= 0 && iDatePart <= 59) {
+                            out.min = iDatePart;
+                        } else {
+                            return null;
                         }
                         vTimeFlag = true;
                         break;
                     case 's':
-                        if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 59) {
-                            parsedDateTime.sec = parseInt(vDateParts[i]);
+                        if (iDatePart >= 0 && iDatePart <= 59) {
+                            out.sec = iDatePart;
+                        } else {
+                            return null;
                         }
                         vTimeFlag = true;
+                        break;
                 }
             }
-            if (vDateFlag === true && parsedDateTime.year && parsedDateTime.month && parsedDateTime.day) {
-                parsedDateTime.date = new Date(parsedDateTime.year, parsedDateTime.month - 1, parsedDateTime.day, parsedDateTime.hour, parsedDateTime.min, parsedDateTime.sec, 0);
-                // parsedDateTime.dayOfWeek = parsedDateTime.date.getDay();
-                return parsedDateTime.date;
-            } else if (vTimeFlag === true) {
-                parsedDateTime.date = new Date(0, 0, 0, parsedDateTime.hour, parsedDateTime.min, parsedDateTime.sec, 0);
-                return parsedDateTime.date;
+            if (vDateFlag === true && out.year && out.month && out.day) {
+                out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);
             } else {
-                return false;
+                if (vTimeFlag !== true) {
+                    return null;
+                }
+                out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);
             }
-        }
-    },
-    guessDate: function (vDateStr, vFormat) {
-        var self = this;
-        if (typeof vDateStr != 'string') {
-            return vDateStr;
-        }
-
-        var vParts = vDateStr.replace(self.separators, '\0').split('\0'),
-            vFormatParts = vFormat.match(self.validParts),
-            vPattern = /^[djmn]/g;
-
-        if (vPattern.test(vFormatParts[0])) {
+            return out.date;
+        },
+        guessDate: function (vDateStr, vFormat) {
+            if (typeof vDateStr !== 'string') {
+                return vDateStr;
+            }
+            var self = this, vParts = vDateStr.replace(self.separators, '\0').split('\0'), vPattern = /^[djmn]/g, len,
+                vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0, vYear, i, n, iPart, iSec;
 
-            var vDate = new Date(),
-                vDigit = 0, i;
+            if (!vPattern.test(vFormatParts[0])) {
+                return vDateStr;
+            }
 
             for (i = 0; i < vParts.length; i++) {
                 vDigit = 2;
+                iPart = vParts[i];
+                iSec = parseInt(iPart.substr(0, 2));
+                if (isNaN(iSec)) {
+                    return null;
+                }
                 switch (i) {
                     case 0:
-                        if (vFormatParts[0] == 'm' || vFormatParts[0] == 'n') {
-                            vDate.setMonth(parseInt(vParts[i].substr(0, 2)) - 1);
+                        if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {
+                            vDate.setMonth(iSec - 1);
                         } else {
-                            vDate.setDate(parseInt(vParts[i].substr(0, 2)));
+                            vDate.setDate(iSec);
                         }
                         break;
                     case 1:
-                        if (vFormatParts[0] == 'm' || vFormatParts[0] == 'n') {
-                            vDate.setDate(parseInt(vParts[i].substr(0, 2)));
-
+                        if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {
+                            vDate.setDate(iSec);
                         } else {
-                            vDate.setMonth(parseInt(vParts[i].substr(0, 2)) - 1);
+                            vDate.setMonth(iSec - 1);
                         }
                         break;
                     case 2:
-                        var year = vDate.getFullYear();
-                        if (vParts[i].length < 4) {
-                            vDate.setFullYear(parseInt(year.toString().substr(0, 4 - vParts[i].length) + vParts[i]));
-                            vDigit = vParts[i].length;
-                        } else {
-                            vDate.setFullYear = parseInt(vParts[i].substr(0, 4));
-                            vDigit = 4;
+                        vYear = vDate.getFullYear();
+                        len = iPart.length;
+                        vDigit = len < 4 ? len : 4;
+                        vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));
+                        if (!vYear) {
+                            return null;
                         }
+                        vDate.setFullYear(vYear);
                         break;
                     case 3:
-                        vDate.setHours(parseInt(vParts[i].substr(0, 2)));
+                        vDate.setHours(iSec);
                         break;
                     case 4:
-                        vDate.setMinutes(parseInt(vParts[i].substr(0, 2)));
+                        vDate.setMinutes(iSec);
                         break;
                     case 5:
-                        vDate.setSeconds(parseInt(vParts[i].substr(0, 2)));
+                        vDate.setSeconds(iSec);
+                        break;
                 }
-                if (vParts[i].substr(vDigit).length > 0) {
-                    vParts.splice(i + 1, 0, vParts[i].substr(vDigit));
+                n = iPart.substr(vDigit);
+                if (n.length > 0) {
+                    vParts.splice(i + 1, 0, n);
                 }
             }
             return vDate;
-        }
-    },
-    formatDate: function (vDate, vFormat) {
-        var self = this;
-        if (typeof vDate == 'string') {
-            vDate = self.parseDate(vDate, vFormat);
-            if (vDate == false) {
-                return false;
+        },
+        parseFormat: function (vChar, vDate) {
+            var self = this, vSettings = self.dateSettings, fmt, backslash = /\\?(.?)/gi, doFormat = function (t, s) {
+                return fmt[t] ? fmt[t]() : s;
+            };
+            fmt = {
+                /////////
+                // DAY //
+                /////////
+                /**
+                 * Day of month with leading 0: `01..31`
+                 * @return {string}
+                 */
+                d: function () {
+                    return _lpad(fmt.j(), 2);
+                },
+                /**
+                 * Shorthand day name: `Mon...Sun`
+                 * @return {string}
+                 */
+                D: function () {
+                    return vSettings.daysShort[fmt.w()];
+                },
+                /**
+                 * Day of month: `1..31`
+                 * @return {number}
+                 */
+                j: function () {
+                    return vDate.getDate();
+                },
+                /**
+                 * Full day name: `Monday...Sunday`
+                 * @return {number}
+                 */
+                l: function () {
+                    return vSettings.days[fmt.w()];
+                },
+                /**
+                 * ISO-8601 day of week: `1[Mon]..7[Sun]`
+                 * @return {number}
+                 */
+                N: function () {
+                    return fmt.w() || 7;
+                },
+                /**
+                 * Day of week: `0[Sun]..6[Sat]`
+                 * @return {number}
+                 */
+                w: function () {
+                    return vDate.getDay();
+                },
+                /**
+                 * Day of year: `0..365`
+                 * @return {number}
+                 */
+                z: function () {
+                    var a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);
+                    return Math.round((a - b) / DAY);
+                },
+
+                //////////
+                // WEEK //
+                //////////
+                /**
+                 * ISO-8601 week number
+                 * @return {number}
+                 */
+                W: function () {
+                    var a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);
+                    return _lpad(1 + Math.round((a - b) / DAY / 7), 2);
+                },
+
+                ///////////
+                // MONTH //
+                ///////////
+                /**
+                 * Full month name: `January...December`
+                 * @return {string}
+                 */
+                F: function () {
+                    return vSettings.months[vDate.getMonth()];
+                },
+                /**
+                 * Month w/leading 0: `01..12`
+                 * @return {string}
+                 */
+                m: function () {
+                    return _lpad(fmt.n(), 2);
+                },
+                /**
+                 * Shorthand month name; `Jan...Dec`
+                 * @return {string}
+                 */
+                M: function () {
+                    return vSettings.monthsShort[vDate.getMonth()];
+                },
+                /**
+                 * Month: `1...12`
+                 * @return {number}
+                 */
+                n: function () {
+                    return vDate.getMonth() + 1;
+                },
+                /**
+                 * Days in month: `28...31`
+                 * @return {number}
+                 */
+                t: function () {
+                    return (new Date(fmt.Y(), fmt.n(), 0)).getDate();
+                },
+
+                //////////
+                // YEAR //
+                //////////
+                /**
+                 * Is leap year? `0 or 1`
+                 * @return {number}
+                 */
+                L: function () {
+                    var Y = fmt.Y();
+                    return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;
+                },
+                /**
+                 * ISO-8601 year
+                 * @return {number}
+                 */
+                o: function () {
+                    var n = fmt.n(), W = fmt.W(), Y = fmt.Y();
+                    return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);
+                },
+                /**
+                 * Full year: `e.g. 1980...2010`
+                 * @return {number}
+                 */
+                Y: function () {
+                    return vDate.getFullYear();
+                },
+                /**
+                 * Last two digits of year: `00...99`
+                 * @return {string}
+                 */
+                y: function () {
+                    return fmt.Y().toString().slice(-2);
+                },
+
+                //////////
+                // TIME //
+                //////////
+                /**
+                 * Meridian lower: `am or pm`
+                 * @return {string}
+                 */
+                a: function () {
+                    return fmt.A().toLowerCase();
+                },
+                /**
+                 * Meridian upper: `AM or PM`
+                 * @return {string}
+                 */
+                A: function () {
+                    var n = fmt.G() < 12 ? 0 : 1;
+                    return vSettings.meridiem[n];
+                },
+                /**
+                 * Swatch Internet time: `000..999`
+                 * @return {string}
+                 */
+                B: function () {
+                    var H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();
+                    return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);
+                },
+                /**
+                 * 12-Hours: `1..12`
+                 * @return {number}
+                 */
+                g: function () {
+                    return fmt.G() % 12 || 12;
+                },
+                /**
+                 * 24-Hours: `0..23`
+                 * @return {number}
+                 */
+                G: function () {
+                    return vDate.getHours();
+                },
+                /**
+                 * 12-Hours with leading 0: `01..12`
+                 * @return {string}
+                 */
+                h: function () {
+                    return _lpad(fmt.g(), 2);
+                },
+                /**
+                 * 24-Hours w/leading 0: `00..23`
+                 * @return {string}
+                 */
+                H: function () {
+                    return _lpad(fmt.G(), 2);
+                },
+                /**
+                 * Minutes w/leading 0: `00..59`
+                 * @return {string}
+                 */
+                i: function () {
+                    return _lpad(vDate.getMinutes(), 2);
+                },
+                /**
+                 * Seconds w/leading 0: `00..59`
+                 * @return {string}
+                 */
+                s: function () {
+                    return _lpad(vDate.getSeconds(), 2);
+                },
+                /**
+                 * Microseconds: `000000-999000`
+                 * @return {string}
+                 */
+                u: function () {
+                    return _lpad(vDate.getMilliseconds() * 1000, 6);
+                },
+
+                //////////////
+                // TIMEZONE //
+                //////////////
+                /**
+                 * Timezone identifier: `e.g. Atlantic/Azores, ...`
+                 * @return {string}
+                 */
+                e: function () {
+                    var str = /\((.*)\)/.exec(String(vDate))[1];
+                    return str || 'Coordinated Universal Time';
+                },
+                /**
+                 * DST observed? `0 or 1`
+                 * @return {number}
+                 */
+                I: function () {
+                    var a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),
+                        b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);
+                    return ((a - c) !== (b - d)) ? 1 : 0;
+                },
+                /**
+                 * Difference to GMT in hour format: `e.g. +0200`
+                 * @return {string}
+                 */
+                O: function () {
+                    var tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);
+                    return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);
+                },
+                /**
+                 * Difference to GMT with colon: `e.g. +02:00`
+                 * @return {string}
+                 */
+                P: function () {
+                    var O = fmt.O();
+                    return (O.substr(0, 3) + ':' + O.substr(3, 2));
+                },
+                /**
+                 * Timezone abbreviation: `e.g. EST, MDT, ...`
+                 * @return {string}
+                 */
+                T: function () {
+                    var str = (String(vDate).match(self.tzParts) || [""]).pop().replace(self.tzClip, "");
+                    return str || 'UTC';
+                },
+                /**
+                 * Timezone offset in seconds: `-43200...50400`
+                 * @return {number}
+                 */
+                Z: function () {
+                    return -vDate.getTimezoneOffset() * 60;
+                },
+
+                ////////////////////
+                // FULL DATE TIME //
+                ////////////////////
+                /**
+                 * ISO-8601 date
+                 * @return {string}
+                 */
+                c: function () {
+                    return 'Y-m-d\\TH:i:sP'.replace(backslash, doFormat);
+                },
+                /**
+                 * RFC 2822 date
+                 * @return {string}
+                 */
+                r: function () {
+                    return 'D, d M Y H:i:s O'.replace(backslash, doFormat);
+                },
+                /**
+                 * Seconds since UNIX epoch
+                 * @return {number}
+                 */
+                U: function () {
+                    return vDate.getTime() / 1000 || 0;
+                }
+            };
+            return doFormat(vChar, vChar);
+        },
+        formatDate: function (vDate, vFormat) {
+            var self = this, i, n, len, str, vChar, vDateStr = '', BACKSLASH = '\\';
+            if (typeof vDate === 'string') {
+                vDate = self.parseDate(vDate, vFormat);
+                if (!vDate) {
+                    return null;
+                }
             }
-        }
-        if (vDate instanceof Date) {
-            var i, vChar, vDateStr = '', self = this;
-            var validParts = /[djDlwSFmMnyYaAgGhHisU]/;
-            for (i = 0; i < vFormat.length; i++) {
-                vChar = vFormat.charAt(i);
-                if (validParts.test(vChar) == true) {
-                    switch (vChar) {
-                        case 'j':
-                            vDateStr += vDate.getDate();
-                            break;
-                        case 'd':
-                            vDateStr += ((vDate.getDate() <= 9) ? '0' : '') + vDate.getDate();
-                            break;
-                        case 'D':
-                            vDateStr += self.dateSettings.daysShort[vDate.getDay()];
-                            break;
-                        case 'l':
-                            vDateStr += self.dateSettings.days[vDate.getDay()];
-                            break;
-                        case 'w':
-                            vDateStr += vDate.getDay();
-                            break;
-                        case 'S':
-                            var vDay = vDate.getDay();
-                            if (vDay == 1 || vDay == 21 || vDay == 31) {
-                                vDateStr += 'st';
-                            } else if (vDay == 2 || vDay == 22) {
-                                vDateStr += 'nd';
-                            } else if (vDay == 3 || vDay == 23) {
-                                vDateStr += 'rd';
-                            } else {
-                                vDateStr += 'th';
-                            }
-                            break;
-                        case 'n':
-                            vDateStr += vDate.getMonth() + 1;
-                            break;
-                        case 'm':
-                            vDateStr += ((vDate.getMonth() <= 8) ? '0' : '') + (vDate.getMonth() + 1);
-                            break;
-                        case 'F':
-                            vDateStr += self.dateSettings.months[vDate.getMonth()];
-                            break;
-                        case 'M':
-                            vDateStr += self.dateSettings.monthsShort[vDate.getMonth()];
-                            break;
-                        case 'Y':
-                            vDateStr += vDate.getFullYear();
-                            break;
-                        case 'y':
-                            vDateStr += vDate.getFullYear().toString().substr(2);
-                            break;
-                        case 'g':
-                            vDateStr += (vDate.getHours() % 12) + 1;
-                            break;
-                        case 'G':
-                            vDateStr += vDate.getHours();
-                            break;
-                        case 'h':
-                            vDateStr += ((vDate.getHours() % 12 <= 8) ? '0' : '') + ((vDate.getHours() % 12) + 1);
-                            break;
-                        case 'H':
-                            vDateStr += ((vDate.getHours() <= 9) ? '0' : '') + vDate.getHours();
-                            break;
-                        case 'a':
-                        case 'A':
-                            vDateStr += (vDate.getHours <= 12) ? self.dateSettings.meridiem[0] : self.dateSettings.meridiem[1];
-                            break;
-                        case 'i':
-                            vDateStr += ((vDate.getMinutes() <= 9) ? '0' : '') + vDate.getMinutes();
-                            break;
-                        case 's':
-                            vDateStr += ((vDate.getSeconds() <= 9) ? '0' : '') + vDate.getSeconds();
-                            break;
-                        case 'U':
-                            vDateStr += vDate.getTime() / 1000;
-                            break;
+            if (vDate instanceof Date) {
+                len = vFormat.length;
+                for (i = 0; i < len; i++) {
+                    vChar = vFormat.charAt(i);
+                    if (vChar === 'S' || vChar === BACKSLASH) {
+                        continue;
                     }
-
-                } else {
-                    vDateStr += vChar;
+                    if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {
+                        vDateStr += vChar;
+                        continue;
+                    }
+                    str = self.parseFormat(vChar, vDate);
+                    if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {
+                        n = parseInt(str) || 0;
+                        str += self.dateSettings.ordinal(n);
+                    }
+                    vDateStr += str;
                 }
+                return vDateStr;
             }
-            return vDateStr;
+            return '';
         }
-    }
-};
-
+    };
+})();
 /*!
  * Laravel Javascript Validation
  *
  * https://github.com/proengsoft/laravel-jsvalidation
  *
- * Copyright (c) 2014 Proengsoft
+ * Copyright (c) 2017 Proengsoft
  * Released under the MIT license
  */
 
@@ -2104,29 +2452,64 @@ laravelValidation = {
     implicitRules: ['Required','Confirmed'],
 
     /**
-     * Initialize laravel validations
+     * Initialize laravel validations.
      */
     init: function () {
 
         // Disable class rules and attribute rules
         $.validator.classRuleSettings = {};
-        $.validator.normalizeAttributeRule = function(){};
+        $.validator.attributeRules = function () {
+            this.rules = {}
+        };
 
+        $.validator.dataRules = this.arrayRules;
+        $.validator.prototype.arrayRulesCache = {};
         // Register validations methods
         this.setupValidations();
-        
     },
 
+    arrayRules: function(element) {
+
+        var rules = {},
+            validator = $.data( element.form, "validator"),
+            cache = validator.arrayRulesCache;
+
+        // Is not an Array
+        if (element.name.indexOf('[') === -1 ) {
+            return rules;
+        }
+
+        if (! (element.name in cache) ) {
+            cache[element.name]={};
+        }
+
+        $.each(validator.settings.rules, function(name, tmpRules){
+            if (name in cache[element.name]) {
+                $.extend(rules, cache[element.name][name]);
+            } else {
+                cache[element.name][name]={};
+                var nameRegExp = laravelValidation.helpers.regexFromWildcard(name);
+                if (element.name.match(nameRegExp)) {
+                    var newRules = $.validator.normalizeRule( tmpRules ) || {};
+                    cache[element.name][name]=newRules;
+                    $.extend(rules, newRules);
+                }
+            }
+        });
+
+        return rules;
+    },
 
     setupValidations: function () {
 
         /**
-         * Create JQueryValidation check to validate Laravel rules
+         * Create JQueryValidation check to validate Laravel rules.
          */
 
         $.validator.addMethod("laravelValidation", function (value, element, params) {
             var validator = this;
             var validated = true;
+            var previous = this.previousValue( element );
 
             // put Implicit rules in front
             var rules=[];
@@ -2148,13 +2531,25 @@ laravelValidation = {
                     return false;
                 }
 
-
                 if (laravelValidation.methods[rule]!==undefined) {
-                    validated = laravelValidation.methods[rule].call(validator, value, element, param[1]);
-                    /*
-                } else if($.validator.methods[rule]!==undefined) {
-                    validated = $.validator.methods[rule].call(validator, value, element, param[1]);
-                    */
+                    validated = laravelValidation.methods[rule].call(validator, value, element, param[1], function(valid) {
+                        validator.settings.messages[ element.name ].laravelValidationRemote = previous.originalMessage;
+                        if ( valid ) {
+                            var submitted = validator.formSubmitted;
+                            validator.prepareElement( element );
+                            validator.formSubmitted = submitted;
+                            validator.successList.push( element );
+                            delete validator.invalid[ element.name ];
+                            validator.showErrors();
+                        } else {
+                            var errors = {};
+                            errors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message;
+                            validator.invalid[ element.name ] = true;
+                            validator.showErrors( errors );
+                        }
+                        validator.showErrors(validator.errorMap);
+                        previous.valid = valid;
+                    });
                 } else {
                     validated=false;
                 }
@@ -2170,19 +2565,19 @@ laravelValidation = {
             });
             return validated;
 
-        }, "");
+        }, '');
 
 
         /**
-         * Create JQueryValidation check to validate Remote Laravel rules
+         * Create JQueryValidation check to validate Remote Laravel rules.
          */
-
         $.validator.addMethod("laravelValidationRemote", function (value, element, params) {
 
             var implicit = false,
                 check = params[0][1],
-                attribute = check[0],
-                token = check[1];
+                attribute = element.name,
+                token = check[1],
+                validateAll = check[2];
 
             $.each(params, function (i, parameters) {
                 implicit = implicit || parameters[3];
@@ -2211,9 +2606,19 @@ laravelValidation = {
             previous.old = value;
             validator = this;
             this.startRequest( element );
-            data = {};
-            data[ element.name ] = value;
-            data['_jsvalidation']= attribute;
+
+            data = $(validator.currentForm).serializeArray();
+
+            data.push({
+                'name': '_jsvalidation',
+                'value': attribute
+            });
+
+            data.push({
+                'name': '_jsvalidation_validate_all',
+                'value': validateAll
+            });
+
             var formMethod = $(validator.currentForm).attr('method');
             if($(validator.currentForm).find('input[name="_method"]').length) {
                 formMethod = $(validator.currentForm).find('input[name="_method"]').val();
@@ -2233,29 +2638,19 @@ laravelValidation = {
                         return xhr.setRequestHeader('X-XSRF-TOKEN', token);
                     }
                 }
-
-
             }, param )
-            ).always(function( response, textStatus, errorThrown ) {
+            ).always(function( response, textStatus ) {
                     var errors, message, submitted, valid;
 
                     if (textStatus === 'error') {
                         valid = false;
-                        if ('responseText' in response) {
-                            var errorMsg = response.responseText.match(/<h1\s*>(.*)<\/h1\s*>/i);
-                            if ($.isArray(errorMsg)) {
-                                response = [errorMsg[1]];
-                            }
-                        } else {
-                            response = ["Whoops, looks like something went wrong."];
-                        }
+                        response = laravelValidation.helpers.parseErrorResponse(response);
                     } else if (textStatus === 'success') {
                         valid = response === true || response === "true";
                     } else {
                         return;
                     }
 
-
                     validator.settings.messages[ element.name ].laravelValidationRemote = previous.originalMessage;
 
                     if ( valid ) {
@@ -2278,13 +2673,8 @@ laravelValidation = {
                 }
             );
             return "pending";
-
-
-        }, "");
-
+        }, '');
     }
-
-
 };
 
 $(function() {
@@ -2298,7 +2688,7 @@ $(function() {
  *
  * Helper functions used by validators
  *
- * Copyright (c) 2014 Proengsoft
+ * Copyright (c) 2017 Proengsoft
  * Released under the MIT license
  */
 
@@ -2312,24 +2702,31 @@ $.extend(true, laravelValidation, {
         numericRules: ['Integer', 'Numeric'],
 
         /**
-         * Gets the file information from file input
+         * Gets the file information from file input.
          *
          * @param fieldObj
+         * @param index
          * @returns {{file: *, extension: string, size: number}}
          */
-        fileinfo: function (fieldObj) {
+        fileinfo: function (fieldObj, index) {
             var FileName = fieldObj.value;
-            return {
-                file: FileName,
-                extension: FileName.substr(FileName.lastIndexOf('.') + 1),
-                size: fieldObj.files[0].size / 1024
-            };
+            index = typeof index !== 'undefined' ? index : 0;
+            if ( fieldObj.files !== null ) {
+                if (typeof fieldObj.files[index] !== 'undefined') {
+                    return {
+                        file: FileName,
+                        extension: FileName.substr(FileName.lastIndexOf('.') + 1),
+                        size: fieldObj.files[index].size / 1024,
+                        type: fieldObj.files[index].type
+                    };
+                }
+            }
+            return false;
         },
 
 
         /**
-         *
-         * Gets the selectors for th specified field names
+         * Gets the selectors for th specified field names.
          *
          * @param names
          * @returns {string}
@@ -2347,7 +2744,7 @@ $.extend(true, laravelValidation, {
 
 
         /**
-         * Check if element has numeric rules
+         * Check if element has numeric rules.
          *
          * @param element
          * @returns {boolean}
@@ -2357,7 +2754,7 @@ $.extend(true, laravelValidation, {
         },
 
         /**
-         * Check if element has passed ruls rules
+         * Check if element has passed rules.
          *
          * @param element
          * @param rules
@@ -2371,22 +2768,33 @@ $.extend(true, laravelValidation, {
             }
 
             var validator = $.data(element.form, "validator");
-            var objRules = validator.settings.rules[element.name];
-            if ('laravelValidation' in objRules) {
-                var _rules=objRules.laravelValidation;
-                for (var i = 0; i < _rules.length; i++) {
-                    if ($.inArray(_rules[i][0],rules) !== -1) {
-                        found = true;
-                        break;
+            var listRules = [];
+            var cache = validator.arrayRulesCache;
+            if (element.name in cache) {
+                $.each(cache[element.name], function (index, arrayRule) {
+                    listRules.push(arrayRule);
+                });
+            }
+            if (element.name in validator.settings.rules) {
+                listRules.push(validator.settings.rules[element.name]);
+            }
+            $.each(listRules, function(index,objRules){
+                if ('laravelValidation' in objRules) {
+                    var _rules=objRules.laravelValidation;
+                    for (var i = 0; i < _rules.length; i++) {
+                        if ($.inArray(_rules[i][0],rules) !== -1) {
+                            found = true;
+                            return false;
+                        }
                     }
                 }
-            }
+            });
 
             return found;
         },
 
         /**
-         * Return the string length using PHP function
+         * Return the string length using PHP function.
          * http://php.net/manual/en/function.strlen.php
          * http://phpjs.org/functions/strlen/
          *
@@ -2396,9 +2804,8 @@ $.extend(true, laravelValidation, {
             return strlen(string);
         },
 
-
         /**
-         * Get the size of the object depending of his type
+         * Get the size of the object depending of his type.
          *
          * @param obj
          * @param element
@@ -2407,12 +2814,12 @@ $.extend(true, laravelValidation, {
          */
         getSize: function getSize(obj, element, value) {
 
-            if (this.hasNumericRules(element) && /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value)) {
+            if (this.hasNumericRules(element) && this.is_numeric(value)) {
                 return parseFloat(value);
             } else if ($.isArray(value)) {
                 return parseFloat(value.length);
             } else if (element.type === 'file') {
-                return parseFloat(Math.ceil(this.fileinfo(element).size));
+                return parseFloat(Math.floor(this.fileinfo(element).size));
             }
 
             return parseFloat(this.strlen(value));
@@ -2420,7 +2827,7 @@ $.extend(true, laravelValidation, {
 
 
         /**
-         * Return specified rule from element
+         * Return specified rule from element.
          *
          * @param rule
          * @param element
@@ -2442,9 +2849,8 @@ $.extend(true, laravelValidation, {
             return found;
         },
 
-
         /**
-         * Return he timestamp of value passed using format or default format in element*
+         * Return he timestamp of value passed using format or default format in element.
          *
          * @param value
          * @param format
@@ -2478,17 +2884,18 @@ $.extend(true, laravelValidation, {
 
         /**
          * This method allows you to intelligently guess the date by closely matching the specific format.
+         *
          * @param value
          * @param format
          * @returns {Date}
          */
-        gessDate: function (value, format) {
+        guessDate: function (value, format) {
             var fmt = new DateFormatter();
             return fmt.guessDate(value, format)
         },
 
         /**
-         * Returns Unix timestamp based on PHP function strototime
+         * Returns Unix timestamp based on PHP function strototime.
          * http://php.net/manual/es/function.strtotime.php
          * http://phpjs.org/functions/strtotime/
          *
@@ -2500,9 +2907,20 @@ $.extend(true, laravelValidation, {
             return strtotime(text, now)
         },
 
+        /**
+         * Returns if value is numeric.
+         * http://php.net/manual/es/var.is_numeric.php
+         * http://phpjs.org/functions/is_numeric/
+         *
+         * @param mixed_var
+         * @returns {*}
+         */
+        is_numeric: function (mixed_var) {
+            return is_numeric(mixed_var)
+        },
 
         /**
-         * Returns Array diff based on PHP function array_diff
+         * Returns Array diff based on PHP function array_diff.
          * http://php.net/manual/es/function.array_diff.php
          * http://phpjs.org/functions/array_diff/
          *
@@ -2514,7 +2932,14 @@ $.extend(true, laravelValidation, {
             return array_diff(arr1, arr2);
         },
 
-
+        /**
+         * Makes element dependant from other.
+         *
+         * @param validator
+         * @param element
+         * @param name
+         * @returns {*}
+         */
         dependentElement: function(validator, element, name) {
 
             var el=validator.findByName(name);
@@ -2538,12 +2963,61 @@ $.extend(true, laravelValidation, {
             }
 
             return el[0];
-        }
+        },
+
+        /**
+         * Parses error Ajax response and gets the message.
+         *
+         * @param response
+         * @returns {string[]}
+         */
+        parseErrorResponse: function (response) {
+            var newResponse = ['Whoops, looks like something went wrong.'];
+            if ('responseText' in response) {
+                var errorMsg = response.responseText.match(/<h1\s*>(.*)<\/h1\s*>/i);
+                if ($.isArray(errorMsg)) {
+                    newResponse = [errorMsg[1]];
+                }
+            }
+            return newResponse;
+        },
 
+        /**
+         * Escape string to use as Regular Expression.
+         *
+         * @param str
+         * @returns string
+         */
+        escapeRegExp: function (str) {
+            return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
+        },
+
+        /**
+         * Generate RegExp from wildcard attributes.
+         *
+         * @param name
+         * @returns {RegExp}
+         */
+        regexFromWildcard: function(name) {
+            var nameParts = name.split("[*]");
+            if (nameParts.length === 1) {
+                nameParts.push('');
+            }
+            var regexpParts = nameParts.map(function(currentValue, index) {
+                if (index % 2 === 0) {
+                    currentValue = currentValue + '[';
+                } else {
+                    currentValue = ']' +currentValue;
+                }
 
+                return laravelValidation.helpers.escapeRegExp(currentValue);
+            });
 
+            return new RegExp('^'+regexpParts.join('.*')+'$');
+        }
     }
 });
+
 /*!
  * Laravel Javascript Validation
  *
@@ -2551,7 +3025,7 @@ $.extend(true, laravelValidation, {
  *
  * Timezone Helper functions used by validators
  *
- * Copyright (c) 2014 Proengsoft
+ * Copyright (c) 2017 Proengsoft
  * Released under the MIT license
  */
 
@@ -2560,7 +3034,7 @@ $.extend(true, laravelValidation, {
     helpers: {
 
         /**
-         * Check if the specified timezone is valid
+         * Check if the specified timezone is valid.
          *
          * @param value
          * @returns {boolean}
@@ -3019,24 +3493,21 @@ $.extend(true, laravelValidation, {
             }
 
             return (continent in timezones && ( timezones[continent].length===0 || timezones[continent].indexOf(city)!==-1))
-
         }
     }
-
-
 });
+
 /*!
  * Laravel Javascript Validation
  *
  * https://github.com/proengsoft/laravel-jsvalidation
  *
- * Metjods that implement Laravel Validations
+ * Methods that implement Laravel Validations
  *
- * Copyright (c) 2014 Proengsoft
+ * Copyright (c) 2017 Proengsoft
  * Released under the MIT license
  */
 
-
 $.extend(true, laravelValidation, {
 
     methods:{
@@ -3045,16 +3516,35 @@ $.extend(true, laravelValidation, {
 
         jsRemoteTimer:0,
 
-
         /**
          * "Validate" optional attributes.
-         * Always returns true, just lets us put sometimes in rules.*
+         * Always returns true, just lets us put sometimes in rules.
+         *
          * @return {boolean}
          */
         Sometimes: function() {
             return true;
         },
 
+        /**
+         * Bail This is the default behaivour os JSValidation.
+         * Always returns true, just lets us put sometimes in rules.
+         *
+         * @return {boolean}
+         */
+        Bail: function() {
+            return true;
+        },
+
+        /**
+         * "Indicate" validation should pass if value is null.
+         * Always returns true, just lets us put "nullable" in rules.
+         *
+         * @return {boolean}
+         */
+        Nullable: function() {
+            return true;
+        },
 
         /**
          * Validate the given attribute is filled if it is present.
@@ -3065,7 +3555,7 @@ $.extend(true, laravelValidation, {
 
 
         /**
-         *Validate that a required attribute exists.
+         * Validate that a required attribute exists.
          */
         Required: function(value, element) {
             return  $.validator.methods.required.call(this, value, element);
@@ -3073,6 +3563,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute exists when any other attribute exists.
+         *
          * @return {boolean}
          */
         RequiredWith: function(value, element, params) {
@@ -3101,6 +3592,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute exists when all other attribute exists.
+         *
          * @return {boolean}
          */
         RequiredWithAll: function(value, element, params) {
@@ -3127,9 +3619,9 @@ $.extend(true, laravelValidation, {
             return true;
         },
 
-
         /**
          * Validate that an attribute exists when any other attribute does not exists.
+         *
          * @return {boolean}
          */
         RequiredWithout: function(value, element, params) {
@@ -3156,9 +3648,9 @@ $.extend(true, laravelValidation, {
             return true;
         },
 
-
         /**
          * Validate that an attribute exists when all other attribute does not exists.
+         *
          * @return {boolean}
          */
         RequiredWithoutAll: function(value, element, params) {
@@ -3183,12 +3675,11 @@ $.extend(true, laravelValidation, {
                 return  $.validator.methods.required.call(this, value, element, true);
             }
             return true;
-
         },
 
-
         /**
          * Validate that an attribute exists when another attribute has a given value.
+         *
          * @return {boolean}
          */
         RequiredIf: function(value, element, params) {
@@ -3199,21 +3690,50 @@ $.extend(true, laravelValidation, {
 
             if (target!==undefined) {
                 var val=String(this.elementValue(target));
-                var data=params.slice(1);
-                if ($.inArray(val,data)!== -1) {
-                    return $.validator.methods.required.call(
-                        this, value, element, true
-                    );
+                if (typeof val !== 'undefined') {
+                    var data = params.slice(1);
+                    if ($.inArray(val, data) !== -1) {
+                        return $.validator.methods.required.call(
+                            this, value, element, true
+                        );
+                    }
                 }
             }
 
             return true;
-
         },
 
+        /**
+         * Validate that an attribute exists when another
+         * attribute does not have a given value.
+         *
+         * @return {boolean}
+         */
+        RequiredUnless: function(value, element, params) {
+
+            var target=laravelValidation.helpers.dependentElement(
+                this, element, params[0]
+            );
+
+            if (target!==undefined) {
+                var val=String(this.elementValue(target));
+                if (typeof val !== 'undefined') {
+                    var data = params.slice(1);
+                    if ($.inArray(val, data) !== -1) {
+                        return true;
+                    }
+                }
+            }
+
+            return $.validator.methods.required.call(
+                this, value, element, true
+            );
+
+        },
 
         /**
          * Validate that an attribute has a matching confirmation.
+         *
          * @return {boolean}
          */
         Confirmed: function(value, element, params) {
@@ -3222,6 +3742,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that two attributes match.
+         *
          * @return {boolean}
          */
         Same: function(value, element, params) {
@@ -3237,7 +3758,65 @@ $.extend(true, laravelValidation, {
         },
 
         /**
+         * Validate that the values of an attribute is in another attribute.
+         *
+         * @param value
+         * @param element
+         * @param params
+         * @returns {boolean}
+         * @constructor
+         */
+        InArray: function (value, element, params) {
+            if (typeof params[0] === 'undefined') {
+                return false;
+            }
+            var elements = this.elements();
+            var found = false;
+            var nameRegExp = laravelValidation.helpers.regexFromWildcard(params[0]);
+
+            for ( var i = 0; i < elements.length ; i++ ) {
+                var targetName = elements[i].name;
+                if (targetName.match(nameRegExp)) {
+                    var equals = laravelValidation.methods.Same.call(this,value, element, [targetName]);
+                    found = found || equals;
+                }
+            }
+
+            return found;
+        },
+
+        /**
+         * Validate an attribute is unique among other values.
+         *
+         * @param value
+         * @param element
+         * @param params
+         * @returns {boolean}
+         */
+        Distinct: function (value, element, params) {
+            if (typeof params[0] === 'undefined') {
+                return false;
+            }
+
+            var elements = this.elements();
+            var found = false;
+            var nameRegExp = laravelValidation.helpers.regexFromWildcard(params[0]);
+
+            for ( var i = 0; i < elements.length ; i++ ) {
+                var targetName = elements[i].name;
+                if (targetName !== element.name && targetName.match(nameRegExp)) {
+                    var equals = laravelValidation.methods.Same.call(this,value, element, [targetName]);
+                    found = found || equals;
+                }
+            }
+
+            return !found;
+        },
+
+
+        /**
          * Validate that an attribute is different from another attribute.
+         *
          * @return {boolean}
          */
         Different: function(value, element, params) {
@@ -3247,6 +3826,7 @@ $.extend(true, laravelValidation, {
         /**
          * Validate that an attribute was "accepted".
          * This validation rule implies the attribute is "required".
+         *
          * @return {boolean}
          */
         Accepted: function(value) {
@@ -3263,6 +3843,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute is a boolean.
+         *
          * @return {boolean}
          */
         Boolean: function(value) {
@@ -3272,6 +3853,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute is an integer.
+         *
          * @return {boolean}
          */
         Integer: function(value) {
@@ -3288,6 +3870,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute is a string.
+         *
          * @return {boolean}
          */
         String: function(value) {
@@ -3298,8 +3881,10 @@ $.extend(true, laravelValidation, {
          * The field under validation must be numeric and must have an exact length of value.
          */
         Digits: function(value, element, params) {
-            return ($.validator.methods.number.call(this, value, element, true)
-                && value.length===parseInt(params));
+            return (
+                $.validator.methods.number.call(this, value, element, true) &&
+                value.length === parseInt(params, 10)
+            );
         },
 
         /**
@@ -3312,6 +3897,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate the size of an attribute.
+         *
          * @return {boolean}
          */
         Size: function(value, element, params) {
@@ -3320,6 +3906,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate the size of an attribute is between a set of values.
+         *
          * @return {boolean}
          */
         Between: function(value, element, params) {
@@ -3329,6 +3916,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate the size of an attribute is greater than a minimum value.
+         *
          * @return {boolean}
          */
         Min: function(value, element, params) {
@@ -3337,6 +3925,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate the size of an attribute is less than a maximum value.
+         *
          * @return {boolean}
          */
         Max: function(value, element, params) {
@@ -3344,7 +3933,8 @@ $.extend(true, laravelValidation, {
         },
 
         /**
-         *  Validate an attribute is contained within a list of values.
+         * Validate an attribute is contained within a list of values.
+         *
          * @return {boolean}
          */
         In: function(value, element, params) {
@@ -3356,16 +3946,17 @@ $.extend(true, laravelValidation, {
         },
 
         /**
-         *  Validate an attribute is not contained within a list of values.
+         * Validate an attribute is not contained within a list of values.
+         *
          * @return {boolean}
          */
         NotIn: function(value, element, params) {
             return params.indexOf(value.toString()) === -1;
         },
 
-
         /**
-         *  Validate that an attribute is a valid IP.
+         * Validate that an attribute is a valid IP.
+         *
          * @return {boolean}
          */
         Ip: function(value) {
@@ -3374,7 +3965,7 @@ $.extend(true, laravelValidation, {
         },
 
         /**
-         *  Validate that an attribute is a valid e-mail address.
+         * Validate that an attribute is a valid e-mail address.
          */
         Email: function(value, element) {
             return $.validator.methods.email.call(this, value, element, true);
@@ -3388,25 +3979,110 @@ $.extend(true, laravelValidation, {
         },
 
         /**
+         * The field under validation must be a successfully uploaded file.
+         *
+         * @return {boolean}
+         */
+        File: function(value, element) {
+            if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {
+                return true;
+            }
+            if ('files' in element ) {
+                return (element.files.length > 0);
+            }
+            return false;
+        },
+
+        /**
          * Validate the MIME type of a file upload attribute is in a set of MIME types.
+         *
          * @return {boolean}
          */
         Mimes: function(value, element, params) {
-            var lowerParams = $.map(params, String.toLowerCase);
-            return (!window.File || !window.FileReader || !window.FileList || !window.Blob) ||
-                lowerParams.indexOf(laravelValidation.helpers.fileinfo(element).extension.toLowerCase())!==-1;
+            if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {
+                return true;
+            }
+            var lowerParams = $.map(params, function(item) {
+                return item.toLowerCase();
+            });
+
+            var fileinfo = laravelValidation.helpers.fileinfo(element);
+            return (fileinfo !== false && lowerParams.indexOf(fileinfo.extension.toLowerCase())!==-1);
+        },
+
+        /**
+         * The file under validation must match one of the given MIME types.
+         *
+         * @return {boolean}
+         */
+        Mimetypes: function(value, element, params) {
+            if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {
+                return true;
+            }
+            var lowerParams = $.map(params, function(item) {
+                return item.toLowerCase();
+            });
+
+            var fileinfo = laravelValidation.helpers.fileinfo(element);
+
+            if (fileinfo === false) {
+                return false;
+            }
+            return (lowerParams.indexOf(fileinfo.type.toLowerCase())!==-1);
         },
 
         /**
          * Validate the MIME type of a file upload attribute is in a set of MIME types.
          */
         Image: function(value, element) {
-            return laravelValidation.methods.Mimes.call(this, value, element, ['jpg', 'png', 'gif', 'bmp', 'svg']);
+            return laravelValidation.methods.Mimes.call(this, value, element, [
+                'jpg', 'png', 'gif', 'bmp', 'svg', 'jpeg'
+            ]);
         },
 
+        /**
+         * Validate dimensions of Image.
+         *
+         * @return {boolean|string}
+         */
+        Dimensions: function(value, element, params, callback) {
+            if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {
+                return true;
+            }
+            if (element.files === null || typeof element.files[0] === 'undefined') {
+                return false;
+            }
+
+            var fr = new FileReader;
+            fr.onload = function () {
+                var img = new Image();
+                img.onload = function () {
+                    var height = parseFloat(img.naturalHeight);
+                    var width = parseFloat(img.naturalWidth);
+                    var ratio = width / height;
+                    var notValid = ((params['width']) && parseFloat(params['width'] !== width)) ||
+                        ((params['min_width']) && parseFloat(params['min_width']) > width) ||
+                        ((params['max_width']) && parseFloat(params['max_width']) < width) ||
+                        ((params['height']) && parseFloat(params['height']) !== height) ||
+                        ((params['min_height']) && parseFloat(params['min_height']) > height) ||
+                        ((params['max_height']) && parseFloat(params['max_height']) < height) ||
+                        ((params['ratio']) && ratio !== parseFloat(eval(params['ratio']))
+                        );
+                    callback(! notValid);
+                };
+                img.onerror = function() {
+                    callback(false);
+                };
+                img.src = fr.result;
+            };
+            fr.readAsDataURL(element.files[0]);
+
+            return 'pending';
+        },
 
         /**
          * Validate that an attribute contains only alphabetic characters.
+         *
          * @return {boolean}
          */
         Alpha: function(value) {
@@ -3421,6 +4097,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute contains only alpha-numeric characters.
+         *
          * @return {boolean}
          */
         AlphaNum: function(value) {
@@ -3433,6 +4110,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute contains only alphabetic characters.
+         *
          * @return {boolean}
          */
         AlphaDash: function(value) {
@@ -3445,6 +4123,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute passes a regular expression check.
+         *
          * @return {boolean}
          */
         Regex: function(value, element, params) {
@@ -3452,7 +4131,7 @@ $.extend(true, laravelValidation, {
             // Converting php regular expression
             var phpReg= new RegExp('^(?:\/)(.*\\\/?[^\/]*|[^\/]*)(?:\/)([gmixXsuUAJ]*)?$');
             var matches=params[0].match(phpReg);
-            if (matches==null) {
+            if (matches === null) {
                 return false;
             }
             // checking modifiers
@@ -3471,6 +4150,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute is a valid date.
+         *
          * @return {boolean}
          */
         Date: function(value) {
@@ -3479,6 +4159,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate that an attribute matches a date format.
+         *
          * @return {boolean}
          */
         DateFormat: function(value, element, params) {
@@ -3487,6 +4168,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate the date is before a given date.
+         *
          * @return {boolean}
          */
         Before: function(value, element, params) {
@@ -3507,6 +4189,7 @@ $.extend(true, laravelValidation, {
 
         /**
          * Validate the date is after a given date.
+         *
          * @return {boolean}
          */
         After: function(value, element, params) {
@@ -3548,11 +4231,7 @@ $.extend(true, laravelValidation, {
             }
             return result;
         }
-
-
     }
-    
 });
 
-
-//# sourceMappingURL=jsvalidation.js.map
\ No newline at end of file
+//# sourceMappingURL=jsvalidation.js.map
diff --git a/public/vendor/jsvalidation/js/jsvalidation.js.map b/public/vendor/jsvalidation/js/jsvalidation.js.map
index 685c65a..f1a51a4 100644
--- a/public/vendor/jsvalidation/js/jsvalidation.js.map
+++ b/public/vendor/jsvalidation/js/jsvalidation.js.map
@@ -1 +1 @@
-{"version":3,"sources":["jquery.validate.js","strlen.js","array_diff.js","strtotime.js","php-date-formatter.js","jsvalidation.js","helpers.js","timezones.js","validations.js"],"names":[],"mappingsr3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChxzhefile":"jsvalidation.js","sourcesContent":["/*!\n * jQuery Validation Plugin v1.14.0\n *\n * http://jqueryvalidation.org/\n *\n * Copyright (c) 2015 Jörn Zaefferer\n * Released under the MIT license\n */\n(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine( [\"jquery\"], factory );\n\t} else {\n\t\tfactory( jQuery );\n\t}\n}(function( $ ) {\n\n$.extend($.fn, {\n\t// http://jqueryvalidation.org/validate/\n\tvalidate: function( options ) {\n\n\t\t// if nothing is selected, return nothing; can't chain anyway\n\t\tif ( !this.length ) {\n\t\t\tif ( options && options.debug && window.console ) {\n\t\t\t\tconsole.warn( \"Nothing selected, can't validate, returning nothing.\" );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// check if a validator for this form was already created\n\t\tvar validator = $.data( this[ 0 ], \"validator\" );\n\t\tif ( validator ) {\n\t\t\treturn validator;\n\t\t}\n\n\t\t// Add novalidate tag if HTML5.\n\t\tthis.attr( \"novalidate\", \"novalidate\" );\n\n\t\tvalidator = new $.validator( options, this[ 0 ] );\n\t\t$.data( this[ 0 ], \"validator\", validator );\n\n\t\tif ( validator.settings.onsubmit ) {\n\n\t\t\tthis.on( \"click.validate\", \":submit\", function( event ) {\n\t\t\t\tif ( validator.settings.submitHandler ) {\n\t\t\t\t\tvalidator.submitButton = event.target;\n\t\t\t\t}\n\n\t\t\t\t// allow suppressing validation by adding a cancel class to the submit button\n\t\t\t\tif ( $( this ).hasClass( \"cancel\" ) ) {\n\t\t\t\t\tvalidator.cancelSubmit = true;\n\t\t\t\t}\n\n\t\t\t\t// allow suppressing validation by adding the html5 formnovalidate attribute to the submit button\n\t\t\t\tif ( $( this ).attr( \"formnovalidate\" ) !== undefined ) {\n\t\t\t\t\tvalidator.cancelSubmit = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// validate the form on submit\n\t\t\tthis.on( \"submit.validate\", function( event ) {\n\t\t\t\tif ( validator.settings.debug ) {\n\t\t\t\t\t// prevent form submit to be able to see console output\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tfunction handle() {\n\t\t\t\t\tvar hidden, result;\n\t\t\t\t\tif ( validator.settings.submitHandler ) {\n\t\t\t\t\t\tif ( validator.submitButton ) {\n\t\t\t\t\t\t\t// insert a hidden input as a replacement for the missing submit button\n\t\t\t\t\t\t\thidden = $( \"<input type='hidden'/>\" )\n\t\t\t\t\t\t\t\t.attr( \"name\", validator.submitButton.name )\n\t\t\t\t\t\t\t\t.val( $( validator.submitButton ).val() )\n\t\t\t\t\t\t\t\t.appendTo( validator.currentForm );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = validator.settings.submitHandler.call( validator, validator.currentForm, event );\n\t\t\t\t\t\tif ( validator.submitButton ) {\n\t\t\t\t\t\t\t// and clean up afterwards; thanks to no-block-scope, hidden can be referenced\n\t\t\t\t\t\t\thidden.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( result !== undefined ) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// prevent submit for invalid forms or custom submit handlers\n\t\t\t\tif ( validator.cancelSubmit ) {\n\t\t\t\t\tvalidator.cancelSubmit = false;\n\t\t\t\t\treturn handle();\n\t\t\t\t}\n\t\t\t\tif ( validator.form() ) {\n\t\t\t\t\tif ( validator.pendingRequest ) {\n\t\t\t\t\t\tvalidator.formSubmitted = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn handle();\n\t\t\t\t} else {\n\t\t\t\t\tvalidator.focusInvalid();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn validator;\n\t},\n\t// http://jqueryvalidation.org/valid/\n\tvalid: function() {\n\t\tvar valid, validator, errorList;\n\n\t\tif ( $( this[ 0 ] ).is( \"form\" ) ) {\n\t\t\tvalid = this.validate().form();\n\t\t} else {\n\t\t\terrorList = [];\n\t\t\tvalid = true;\n\t\t\tvalidator = $( this[ 0 ].form ).validate();\n\t\t\tthis.each( function() {\n\t\t\t\tvalid = validator.element( this ) && valid;\n\t\t\t\terrorList = errorList.concat( validator.errorList );\n\t\t\t});\n\t\t\tvalidator.errorList = errorList;\n\t\t}\n\t\treturn valid;\n\t},\n\n\t// http://jqueryvalidation.org/rules/\n\trules: function( command, argument ) {\n\t\tvar element = this[ 0 ],\n\t\t\tsettings, staticRules, existingRules, data, param, filtered;\n\n\t\tif ( command ) {\n\t\t\tsettings = $.data( element.form, \"validator\" ).settings;\n\t\t\tstaticRules = settings.rules;\n\t\t\texistingRules = $.validator.staticRules( element );\n\t\t\tswitch ( command ) {\n\t\t\tcase \"add\":\n\t\t\t\t$.extend( existingRules, $.validator.normalizeRule( argument ) );\n\t\t\t\t// remove messages from rules, but allow them to be set separately\n\t\t\t\tdelete existingRules.messages;\n\t\t\t\tstaticRules[ element.name ] = existingRules;\n\t\t\t\tif ( argument.messages ) {\n\t\t\t\t\tsettings.messages[ element.name ] = $.extend( settings.messages[ element.name ], argument.messages );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"remove\":\n\t\t\t\tif ( !argument ) {\n\t\t\t\t\tdelete staticRules[ element.name ];\n\t\t\t\t\treturn existingRules;\n\t\t\t\t}\n\t\t\t\tfiltered = {};\n\t\t\t\t$.each( argument.split( /\\s/ ), function( index, method ) {\n\t\t\t\t\tfiltered[ method ] = existingRules[ method ];\n\t\t\t\t\tdelete existingRules[ method ];\n\t\t\t\t\tif ( method === \"required\" ) {\n\t\t\t\t\t\t$( element ).removeAttr( \"aria-required\" );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn filtered;\n\t\t\t}\n\t\t}\n\n\t\tdata = $.validator.normalizeRules(\n\t\t$.extend(\n\t\t\t{},\n\t\t\t$.validator.classRules( element ),\n\t\t\t$.validator.attributeRules( element ),\n\t\t\t$.validator.dataRules( element ),\n\t\t\t$.validator.staticRules( element )\n\t\t), element );\n\n\t\t// make sure required is at front\n\t\tif ( data.required ) {\n\t\t\tparam = data.required;\n\t\t\tdelete data.required;\n\t\t\tdata = $.extend( { required: param }, data );\n\t\t\t$( element ).attr( \"aria-required\", \"true\" );\n\t\t}\n\n\t\t// make sure remote is at back\n\t\tif ( data.remote ) {\n\t\t\tparam = data.remote;\n\t\t\tdelete data.remote;\n\t\t\tdata = $.extend( data, { remote: param });\n\t\t}\n\n\t\treturn data;\n\t}\n});\n\n// Custom selectors\n$.extend( $.expr[ \":\" ], {\n\t// http://jqueryvalidation.org/blank-selector/\n\tblank: function( a ) {\n\t\treturn !$.trim( \"\" + $( a ).val() );\n\t},\n\t// http://jqueryvalidation.org/filled-selector/\n\tfilled: function( a ) {\n\t\treturn !!$.trim( \"\" + $( a ).val() );\n\t},\n\t// http://jqueryvalidation.org/unchecked-selector/\n\tunchecked: function( a ) {\n\t\treturn !$( a ).prop( \"checked\" );\n\t}\n});\n\n// constructor for validator\n$.validator = function( options, form ) {\n\tthis.settings = $.extend( true, {}, $.validator.defaults, options );\n\tthis.currentForm = form;\n\tthis.init();\n};\n\n// http://jqueryvalidation.org/jQuery.validator.format/\n$.validator.format = function( source, params ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn function() {\n\t\t\tvar args = $.makeArray( arguments );\n\t\t\targs.unshift( source );\n\t\t\treturn $.validator.format.apply( this, args );\n\t\t};\n\t}\n\tif ( arguments.length > 2 && params.constructor !== Array  ) {\n\t\tparams = $.makeArray( arguments ).slice( 1 );\n\t}\n\tif ( params.constructor !== Array ) {\n\t\tparams = [ params ];\n\t}\n\t$.each( params, function( i, n ) {\n\t\tsource = source.replace( new RegExp( \"\\\\{\" + i + \"\\\\}\", \"g\" ), function() {\n\t\t\treturn n;\n\t\t});\n\t});\n\treturn source;\n};\n\n$.extend( $.validator, {\n\n\tdefaults: {\n\t\tmessages: {},\n\t\tgroups: {},\n\t\trules: {},\n\t\terrorClass: \"error\",\n\t\tvalidClass: \"valid\",\n\t\terrorElement: \"label\",\n\t\tfocusCleanup: false,\n\t\tfocusInvalid: true,\n\t\terrorContainer: $( [] ),\n\t\terrorLabelContainer: $( [] ),\n\t\tonsubmit: true,\n\t\tignore: \":hidden\",\n\t\tignoreTitle: false,\n\t\tonfocusin: function( element ) {\n\t\t\tthis.lastActive = element;\n\n\t\t\t// Hide error label and remove error class on focus if enabled\n\t\t\tif ( this.settings.focusCleanup ) {\n\t\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t\tthis.hideThese( this.errorsFor( element ) );\n\t\t\t}\n\t\t},\n\t\tonfocusout: function( element ) {\n\t\t\tif ( !this.checkable( element ) && ( element.name in this.submitted || !this.optional( element ) ) ) {\n\t\t\t\tthis.element( element );\n\t\t\t}\n\t\t},\n\t\tonkeyup: function( element, event ) {\n\t\t\t// Avoid revalidate the field when pressing one of the following keys\n\t\t\t// Shift       => 16\n\t\t\t// Ctrl        => 17\n\t\t\t// Alt         => 18\n\t\t\t// Caps lock   => 20\n\t\t\t// End         => 35\n\t\t\t// Home        => 36\n\t\t\t// Left arrow  => 37\n\t\t\t// Up arrow    => 38\n\t\t\t// Right arrow => 39\n\t\t\t// Down arrow  => 40\n\t\t\t// Insert      => 45\n\t\t\t// Num lock    => 144\n\t\t\t// AltGr key   => 225\n\t\t\tvar excludedKeys = [\n\t\t\t\t16, 17, 18, 20, 35, 36, 37,\n\t\t\t\t38, 39, 40, 45, 144, 225\n\t\t\t];\n\n\t\t\tif ( event.which === 9 && this.elementValue( element ) === \"\" || $.inArray( event.keyCode, excludedKeys ) !== -1 ) {\n\t\t\t\treturn;\n\t\t\t} else if ( element.name in this.submitted || element === this.lastElement ) {\n\t\t\t\tthis.element( element );\n\t\t\t}\n\t\t},\n\t\tonclick: function( element ) {\n\t\t\t// click on selects, radiobuttons and checkboxes\n\t\t\tif ( element.name in this.submitted ) {\n\t\t\t\tthis.element( element );\n\n\t\t\t// or option elements, check parent select in that case\n\t\t\t} else if ( element.parentNode.name in this.submitted ) {\n\t\t\t\tthis.element( element.parentNode );\n\t\t\t}\n\t\t},\n\t\thighlight: function( element, errorClass, validClass ) {\n\t\t\tif ( element.type === \"radio\" ) {\n\t\t\t\tthis.findByName( element.name ).addClass( errorClass ).removeClass( validClass );\n\t\t\t} else {\n\t\t\t\t$( element ).addClass( errorClass ).removeClass( validClass );\n\t\t\t}\n\t\t},\n\t\tunhighlight: function( element, errorClass, validClass ) {\n\t\t\tif ( element.type === \"radio\" ) {\n\t\t\t\tthis.findByName( element.name ).removeClass( errorClass ).addClass( validClass );\n\t\t\t} else {\n\t\t\t\t$( element ).removeClass( errorClass ).addClass( validClass );\n\t\t\t}\n\t\t}\n\t},\n\n\t// http://jqueryvalidation.org/jQuery.validator.setDefaults/\n\tsetDefaults: function( settings ) {\n\t\t$.extend( $.validator.defaults, settings );\n\t},\n\n\tmessages: {\n\t\trequired: \"This field is required.\",\n\t\tremote: \"Please fix this field.\",\n\t\temail: \"Please enter a valid email address.\",\n\t\turl: \"Please enter a valid URL.\",\n\t\tdate: \"Please enter a valid date.\",\n\t\tdateISO: \"Please enter a valid date ( ISO ).\",\n\t\tnumber: \"Please enter a valid number.\",\n\t\tdigits: \"Please enter only digits.\",\n\t\tcreditcard: \"Please enter a valid credit card number.\",\n\t\tequalTo: \"Please enter the same value again.\",\n\t\tmaxlength: $.validator.format( \"Please enter no more than {0} characters.\" ),\n\t\tminlength: $.validator.format( \"Please enter at least {0} characters.\" ),\n\t\trangelength: $.validator.format( \"Please enter a value between {0} and {1} characters long.\" ),\n\t\trange: $.validator.format( \"Please enter a value between {0} and {1}.\" ),\n\t\tmax: $.validator.format( \"Please enter a value less than or equal to {0}.\" ),\n\t\tmin: $.validator.format( \"Please enter a value greater than or equal to {0}.\" )\n\t},\n\n\tautoCreateRanges: false,\n\n\tprototype: {\n\n\t\tinit: function() {\n\t\t\tthis.labelContainer = $( this.settings.errorLabelContainer );\n\t\t\tthis.errorContext = this.labelContainer.length && this.labelContainer || $( this.currentForm );\n\t\t\tthis.containers = $( this.settings.errorContainer ).add( this.settings.errorLabelContainer );\n\t\t\tthis.submitted = {};\n\t\t\tthis.valueCache = {};\n\t\t\tthis.pendingRequest = 0;\n\t\t\tthis.pending = {};\n\t\t\tthis.invalid = {};\n\t\t\tthis.reset();\n\n\t\t\tvar groups = ( this.groups = {} ),\n\t\t\t\trules;\n\t\t\t$.each( this.settings.groups, function( key, value ) {\n\t\t\t\tif ( typeof value === \"string\" ) {\n\t\t\t\t\tvalue = value.split( /\\s/ );\n\t\t\t\t}\n\t\t\t\t$.each( value, function( index, name ) {\n\t\t\t\t\tgroups[ name ] = key;\n\t\t\t\t});\n\t\t\t});\n\t\t\trules = this.settings.rules;\n\t\t\t$.each( rules, function( key, value ) {\n\t\t\t\trules[ key ] = $.validator.normalizeRule( value );\n\t\t\t});\n\n\t\t\tfunction delegate( event ) {\n\t\t\t\tvar validator = $.data( this.form, \"validator\" ),\n\t\t\t\t\teventType = \"on\" + event.type.replace( /^validate/, \"\" ),\n\t\t\t\t\tsettings = validator.settings;\n\t\t\t\tif ( settings[ eventType ] && !$( this ).is( settings.ignore ) ) {\n\t\t\t\t\tsettings[ eventType ].call( validator, this, event );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$( this.currentForm )\n\t\t\t\t.on( \"focusin.validate focusout.validate keyup.validate\",\n\t\t\t\t\t\":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], \" +\n\t\t\t\t\t\"[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], \" +\n\t\t\t\t\t\"[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], \" +\n\t\t\t\t\t\"[type='radio'], [type='checkbox']\", delegate)\n\t\t\t\t// Support: Chrome, oldIE\n\t\t\t\t// \"select\" is provided as event.target when clicking a option\n\t\t\t\t.on(\"click.validate\", \"select, option, [type='radio'], [type='checkbox']\", delegate);\n\n\t\t\tif ( this.settings.invalidHandler ) {\n\t\t\t\t$( this.currentForm ).on( \"invalid-form.validate\", this.settings.invalidHandler );\n\t\t\t}\n\n\t\t\t// Add aria-required to any Static/Data/Class required fields before first validation\n\t\t\t// Screen readers require this attribute to be present before the initial submission http://www.w3.org/TR/WCAG-TECHS/ARIA2.html\n\t\t\t$( this.currentForm ).find( \"[required], [data-rule-required], .required\" ).attr( \"aria-required\", \"true\" );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.form/\n\t\tform: function() {\n\t\t\tthis.checkForm();\n\t\t\t$.extend( this.submitted, this.errorMap );\n\t\t\tthis.invalid = $.extend({}, this.errorMap );\n\t\t\tif ( !this.valid() ) {\n\t\t\t\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ]);\n\t\t\t}\n\t\t\tthis.showErrors();\n\t\t\treturn this.valid();\n\t\t},\n\n\t\tcheckForm: function() {\n\t\t\tthis.prepareForm();\n\t\t\tfor ( var i = 0, elements = ( this.currentElements = this.elements() ); elements[ i ]; i++ ) {\n\t\t\t\tthis.check( elements[ i ] );\n\t\t\t}\n\t\t\treturn this.valid();\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.element/\n\t\telement: function( element ) {\n\t\t\tvar cleanElement = this.clean( element ),\n\t\t\t\tcheckElement = this.validationTargetFor( cleanElement ),\n\t\t\t\tresult = true;\n\n\t\t\tthis.lastElement = checkElement;\n\n\t\t\tif ( checkElement === undefined ) {\n\t\t\t\tdelete this.invalid[ cleanElement.name ];\n\t\t\t} else {\n\t\t\t\tthis.prepareElement( checkElement );\n\t\t\t\tthis.currentElements = $( checkElement );\n\n\t\t\t\tresult = this.check( checkElement ) !== false;\n\t\t\t\tif ( result ) {\n\t\t\t\t\tdelete this.invalid[ checkElement.name ];\n\t\t\t\t} else {\n\t\t\t\t\tthis.invalid[ checkElement.name ] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add aria-invalid status for screen readers\n\t\t\t$( element ).attr( \"aria-invalid\", !result );\n\n\t\t\tif ( !this.numberOfInvalids() ) {\n\t\t\t\t// Hide error containers on last error\n\t\t\t\tthis.toHide = this.toHide.add( this.containers );\n\t\t\t}\n\t\t\tthis.showErrors();\n\t\t\treturn result;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.showErrors/\n\t\tshowErrors: function( errors ) {\n\t\t\tif ( errors ) {\n\t\t\t\t// add items to error list and map\n\t\t\t\t$.extend( this.errorMap, errors );\n\t\t\t\tthis.errorList = [];\n\t\t\t\tfor ( var name in errors ) {\n\t\t\t\t\tthis.errorList.push({\n\t\t\t\t\t\tmessage: errors[ name ],\n\t\t\t\t\t\telement: this.findByName( name )[ 0 ]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// remove items from success list\n\t\t\t\tthis.successList = $.grep( this.successList, function( element ) {\n\t\t\t\t\treturn !( element.name in errors );\n\t\t\t\t});\n\t\t\t}\n\t\t\tif ( this.settings.showErrors ) {\n\t\t\t\tthis.settings.showErrors.call( this, this.errorMap, this.errorList );\n\t\t\t} else {\n\t\t\t\tthis.defaultShowErrors();\n\t\t\t}\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.resetForm/\n\t\tresetForm: function() {\n\t\t\tif ( $.fn.resetForm ) {\n\t\t\t\t$( this.currentForm ).resetForm();\n\t\t\t}\n\t\t\tthis.submitted = {};\n\t\t\tthis.lastElement = null;\n\t\t\tthis.prepareForm();\n\t\t\tthis.hideErrors();\n\t\t\tvar i, elements = this.elements()\n\t\t\t\t.removeData( \"previousValue\" )\n\t\t\t\t.removeAttr( \"aria-invalid\" );\n\n\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\tfor ( i = 0; elements[ i ]; i++ ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, elements[ i ],\n\t\t\t\t\t\tthis.settings.errorClass, \"\" );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telements.removeClass( this.settings.errorClass );\n\t\t\t}\n\t\t},\n\n\t\tnumberOfInvalids: function() {\n\t\t\treturn this.objectLength( this.invalid );\n\t\t},\n\n\t\tobjectLength: function( obj ) {\n\t\t\t/* jshint unused: false */\n\t\t\tvar count = 0,\n\t\t\t\ti;\n\t\t\tfor ( i in obj ) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\thideErrors: function() {\n\t\t\tthis.hideThese( this.toHide );\n\t\t},\n\n\t\thideThese: function( errors ) {\n\t\t\terrors.not( this.containers ).text( \"\" );\n\t\t\tthis.addWrapper( errors ).hide();\n\t\t},\n\n\t\tvalid: function() {\n\t\t\treturn this.size() === 0;\n\t\t},\n\n\t\tsize: function() {\n\t\t\treturn this.errorList.length;\n\t\t},\n\n\t\tfocusInvalid: function() {\n\t\t\tif ( this.settings.focusInvalid ) {\n\t\t\t\ttry {\n\t\t\t\t\t$( this.findLastActive() || this.errorList.length && this.errorList[ 0 ].element || [])\n\t\t\t\t\t.filter( \":visible\" )\n\t\t\t\t\t.focus()\n\t\t\t\t\t// manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find\n\t\t\t\t\t.trigger( \"focusin\" );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// ignore IE throwing errors when focusing hidden elements\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tfindLastActive: function() {\n\t\t\tvar lastActive = this.lastActive;\n\t\t\treturn lastActive && $.grep( this.errorList, function( n ) {\n\t\t\t\treturn n.element.name === lastActive.name;\n\t\t\t}).length === 1 && lastActive;\n\t\t},\n\n\t\telements: function() {\n\t\t\tvar validator = this,\n\t\t\t\trulesCache = {};\n\n\t\t\t// select all valid inputs inside the form (no submit or reset buttons)\n\t\t\treturn $( this.currentForm )\n\t\t\t.find( \"input, select, textarea\" )\n\t\t\t.not( \":submit, :reset, :image, :disabled\" )\n\t\t\t.not( this.settings.ignore )\n\t\t\t.filter( function() {\n\t\t\t\tif ( !this.name && validator.settings.debug && window.console ) {\n\t\t\t\t\tconsole.error( \"%o has no name assigned\", this );\n\t\t\t\t}\n\n\t\t\t\t// select only the first element for each name, and only those with rules specified\n\t\t\t\tif ( this.name in rulesCache || !validator.objectLength( $( this ).rules() ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\trulesCache[ this.name ] = true;\n\t\t\t\treturn true;\n\t\t\t});\n\t\t},\n\n\t\tclean: function( selector ) {\n\t\t\treturn $( selector )[ 0 ];\n\t\t},\n\n\t\terrors: function() {\n\t\t\tvar errorClass = this.settings.errorClass.split( \" \" ).join( \".\" );\n\t\t\treturn $( this.settings.errorElement + \".\" + errorClass, this.errorContext );\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.successList = [];\n\t\t\tthis.errorList = [];\n\t\t\tthis.errorMap = {};\n\t\t\tthis.toShow = $( [] );\n\t\t\tthis.toHide = $( [] );\n\t\t\tthis.currentElements = $( [] );\n\t\t},\n\n\t\tprepareForm: function() {\n\t\t\tthis.reset();\n\t\t\tthis.toHide = this.errors().add( this.containers );\n\t\t},\n\n\t\tprepareElement: function( element ) {\n\t\t\tthis.reset();\n\t\t\tthis.toHide = this.errorsFor( element );\n\t\t},\n\n\t\telementValue: function( element ) {\n\t\t\tvar val,\n\t\t\t\t$element = $( element ),\n\t\t\t\ttype = element.type;\n\n\t\t\tif ( type === \"radio\" || type === \"checkbox\" ) {\n\t\t\t\treturn this.findByName( element.name ).filter(\":checked\").val();\n\t\t\t} else if ( type === \"number\" && typeof element.validity !== \"undefined\" ) {\n\t\t\t\treturn element.validity.badInput ? false : $element.val();\n\t\t\t}\n\n\t\t\tval = $element.val();\n\t\t\tif ( typeof val === \"string\" ) {\n\t\t\t\treturn val.replace(/\\r/g, \"\" );\n\t\t\t}\n\t\t\treturn val;\n\t\t},\n\n\t\tcheck: function( element ) {\n\t\t\telement = this.validationTargetFor( this.clean( element ) );\n\n\t\t\tvar rules = $( element ).rules(),\n\t\t\t\trulesCount = $.map( rules, function( n, i ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}).length,\n\t\t\t\tdependencyMismatch = false,\n\t\t\t\tval = this.elementValue( element ),\n\t\t\t\tresult, method, rule;\n\n\t\t\tfor ( method in rules ) {\n\t\t\t\trule = { method: method, parameters: rules[ method ] };\n\t\t\t\ttry {\n\n\t\t\t\t\tresult = $.validator.methods[ method ].call( this, val, element, rule.parameters );\n\n\t\t\t\t\t// if a method indicates that the field is optional and therefore valid,\n\t\t\t\t\t// don't mark it as valid when there are no other rules\n\t\t\t\t\tif ( result === \"dependency-mismatch\" && rulesCount === 1 ) {\n\t\t\t\t\t\tdependencyMismatch = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdependencyMismatch = false;\n\n\t\t\t\t\tif ( result === \"pending\" ) {\n\t\t\t\t\t\tthis.toHide = this.toHide.not( this.errorsFor( element ) );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !result ) {\n\t\t\t\t\t\tthis.formatAndAdd( element, rule );\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\tif ( this.settings.debug && window.console ) {\n\t\t\t\t\t\tconsole.log( \"Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\", e );\n\t\t\t\t\t}\n\t\t\t\t\tif ( e instanceof TypeError ) {\n\t\t\t\t\t\te.message += \".  Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( dependencyMismatch ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( this.objectLength( rules ) ) {\n\t\t\t\tthis.successList.push( element );\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t// return the custom message for the given element and validation method\n\t\t// specified in the element's HTML5 data attribute\n\t\t// return the generic message if present and no method specific message is present\n\t\tcustomDataMessage: function( element, method ) {\n\t\t\treturn $( element ).data( \"msg\" + method.charAt( 0 ).toUpperCase() +\n\t\t\t\tmethod.substring( 1 ).toLowerCase() ) || $( element ).data( \"msg\" );\n\t\t},\n\n\t\t// return the custom message for the given element name and validation method\n\t\tcustomMessage: function( name, method ) {\n\t\t\tvar m = this.settings.messages[ name ];\n\t\t\treturn m && ( m.constructor === String ? m : m[ method ]);\n\t\t},\n\n\t\t// return the first defined argument, allowing empty strings\n\t\tfindDefined: function() {\n\t\t\tfor ( var i = 0; i < arguments.length; i++) {\n\t\t\t\tif ( arguments[ i ] !== undefined ) {\n\t\t\t\t\treturn arguments[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\n\t\tdefaultMessage: function( element, method ) {\n\t\t\treturn this.findDefined(\n\t\t\t\tthis.customMessage( element.name, method ),\n\t\t\t\tthis.customDataMessage( element, method ),\n\t\t\t\t// title is never undefined, so handle empty string as undefined\n\t\t\t\t!this.settings.ignoreTitle && element.title || undefined,\n\t\t\t\t$.validator.messages[ method ],\n\t\t\t\t\"<strong>Warning: No message defined for \" + element.name + \"</strong>\"\n\t\t\t);\n\t\t},\n\n\t\tformatAndAdd: function( element, rule ) {\n\t\t\tvar message = this.defaultMessage( element, rule.method ),\n\t\t\t\ttheregex = /\\$?\\{(\\d+)\\}/g;\n\t\t\tif ( typeof message === \"function\" ) {\n\t\t\t\tmessage = message.call( this, rule.parameters, element );\n\t\t\t} else if ( theregex.test( message ) ) {\n\t\t\t\tmessage = $.validator.format( message.replace( theregex, \"{$1}\" ), rule.parameters );\n\t\t\t}\n\t\t\tthis.errorList.push({\n\t\t\t\tmessage: message,\n\t\t\t\telement: element,\n\t\t\t\tmethod: rule.method\n\t\t\t});\n\n\t\t\tthis.errorMap[ element.name ] = message;\n\t\t\tthis.submitted[ element.name ] = message;\n\t\t},\n\n\t\taddWrapper: function( toToggle ) {\n\t\t\tif ( this.settings.wrapper ) {\n\t\t\t\ttoToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );\n\t\t\t}\n\t\t\treturn toToggle;\n\t\t},\n\n\t\tdefaultShowErrors: function() {\n\t\t\tvar i, elements, error;\n\t\t\tfor ( i = 0; this.errorList[ i ]; i++ ) {\n\t\t\t\terror = this.errorList[ i ];\n\t\t\t\tif ( this.settings.highlight ) {\n\t\t\t\t\tthis.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t\tthis.showLabel( error.element, error.message );\n\t\t\t}\n\t\t\tif ( this.errorList.length ) {\n\t\t\t\tthis.toShow = this.toShow.add( this.containers );\n\t\t\t}\n\t\t\tif ( this.settings.success ) {\n\t\t\t\tfor ( i = 0; this.successList[ i ]; i++ ) {\n\t\t\t\t\tthis.showLabel( this.successList[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\tfor ( i = 0, elements = this.validElements(); elements[ i ]; i++ ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, elements[ i ], this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.toHide = this.toHide.not( this.toShow );\n\t\t\tthis.hideErrors();\n\t\t\tthis.addWrapper( this.toShow ).show();\n\t\t},\n\n\t\tvalidElements: function() {\n\t\t\treturn this.currentElements.not( this.invalidElements() );\n\t\t},\n\n\t\tinvalidElements: function() {\n\t\t\treturn $( this.errorList ).map(function() {\n\t\t\t\treturn this.element;\n\t\t\t});\n\t\t},\n\n\t\tshowLabel: function( element, message ) {\n\t\t\tvar place, group, errorID,\n\t\t\t\terror = this.errorsFor( element ),\n\t\t\t\telementID = this.idOrName( element ),\n\t\t\t\tdescribedBy = $( element ).attr( \"aria-describedby\" );\n\t\t\tif ( error.length ) {\n\t\t\t\t// refresh error/success class\n\t\t\t\terror.removeClass( this.settings.validClass ).addClass( this.settings.errorClass );\n\t\t\t\t// replace message on existing label\n\t\t\t\terror.html( message );\n\t\t\t} else {\n\t\t\t\t// create error element\n\t\t\t\terror = $( \"<\" + this.settings.errorElement + \">\" )\n\t\t\t\t\t.attr( \"id\", elementID + \"-error\" )\n\t\t\t\t\t.addClass( this.settings.errorClass )\n\t\t\t\t\t.html( message || \"\" );\n\n\t\t\t\t// Maintain reference to the element to be placed into the DOM\n\t\t\t\tplace = error;\n\t\t\t\tif ( this.settings.wrapper ) {\n\t\t\t\t\t// make sure the element is visible, even in IE\n\t\t\t\t\t// actually showing the wrapped element is handled elsewhere\n\t\t\t\t\tplace = error.hide().show().wrap( \"<\" + this.settings.wrapper + \"/>\" ).parent();\n\t\t\t\t}\n\t\t\t\tif ( this.labelContainer.length ) {\n\t\t\t\t\tthis.labelContainer.append( place );\n\t\t\t\t} else if ( this.settings.errorPlacement ) {\n\t\t\t\t\tthis.settings.errorPlacement( place, $( element ) );\n\t\t\t\t} else {\n\t\t\t\t\tplace.insertAfter( element );\n\t\t\t\t}\n\n\t\t\t\t// Link error back to the element\n\t\t\t\tif ( error.is( \"label\" ) ) {\n\t\t\t\t\t// If the error is a label, then associate using 'for'\n\t\t\t\t\terror.attr( \"for\", elementID );\n\t\t\t\t} else if ( error.parents( \"label[for='\" + elementID + \"']\" ).length === 0 ) {\n\t\t\t\t\t// If the element is not a child of an associated label, then it's necessary\n\t\t\t\t\t// to explicitly apply aria-describedby\n\n\t\t\t\t\terrorID = error.attr( \"id\" ).replace( /(:|\\.|\\[|\\]|\\$)/g, \"\\\\$1\");\n\t\t\t\t\t// Respect existing non-error aria-describedby\n\t\t\t\t\tif ( !describedBy ) {\n\t\t\t\t\t\tdescribedBy = errorID;\n\t\t\t\t\t} else if ( !describedBy.match( new RegExp( \"\\\\b\" + errorID + \"\\\\b\" ) ) ) {\n\t\t\t\t\t\t// Add to end of list if not already present\n\t\t\t\t\t\tdescribedBy += \" \" + errorID;\n\t\t\t\t\t}\n\t\t\t\t\t$( element ).attr( \"aria-describedby\", describedBy );\n\n\t\t\t\t\t// If this element is grouped, then assign to all elements in the same group\n\t\t\t\t\tgroup = this.groups[ element.name ];\n\t\t\t\t\tif ( group ) {\n\t\t\t\t\t\t$.each( this.groups, function( name, testgroup ) {\n\t\t\t\t\t\t\tif ( testgroup === group ) {\n\t\t\t\t\t\t\t\t$( \"[name='\" + name + \"']\", this.currentForm )\n\t\t\t\t\t\t\t\t\t.attr( \"aria-describedby\", error.attr( \"id\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( !message && this.settings.success ) {\n\t\t\t\terror.text( \"\" );\n\t\t\t\tif ( typeof this.settings.success === \"string\" ) {\n\t\t\t\t\terror.addClass( this.settings.success );\n\t\t\t\t} else {\n\t\t\t\t\tthis.settings.success( error, element );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.toShow = this.toShow.add( error );\n\t\t},\n\n\t\terrorsFor: function( element ) {\n\t\t\tvar name = this.idOrName( element ),\n\t\t\t\tdescriber = $( element ).attr( \"aria-describedby\" ),\n\t\t\t\tselector = \"label[for='\" + name + \"'], label[for='\" + name + \"'] *\";\n\n\t\t\t// aria-describedby should directly reference the error element\n\t\t\tif ( describer ) {\n\t\t\t\tselector = selector + \", #\" + describer.replace( /\\s+/g, \", #\" );\n\t\t\t}\n\t\t\treturn this\n\t\t\t\t.errors()\n\t\t\t\t.filter( selector );\n\t\t},\n\n\t\tidOrName: function( element ) {\n\t\t\treturn this.groups[ element.name ] || ( this.checkable( element ) ? element.name : element.id || element.name );\n\t\t},\n\n\t\tvalidationTargetFor: function( element ) {\n\n\t\t\t// If radio/checkbox, validate first element in group instead\n\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\telement = this.findByName( element.name );\n\t\t\t}\n\n\t\t\t// Always apply ignore filter\n\t\t\treturn $( element ).not( this.settings.ignore )[ 0 ];\n\t\t},\n\n\t\tcheckable: function( element ) {\n\t\t\treturn ( /radio|checkbox/i ).test( element.type );\n\t\t},\n\n\t\tfindByName: function( name ) {\n\t\t\treturn $( this.currentForm ).find( \"[name='\" + name + \"']\" );\n\t\t},\n\n\t\tgetLength: function( value, element ) {\n\t\t\tswitch ( element.nodeName.toLowerCase() ) {\n\t\t\tcase \"select\":\n\t\t\t\treturn $( \"option:selected\", element ).length;\n\t\t\tcase \"input\":\n\t\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\t\treturn this.findByName( element.name ).filter( \":checked\" ).length;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value.length;\n\t\t},\n\n\t\tdepend: function( param, element ) {\n\t\t\treturn this.dependTypes[typeof param] ? this.dependTypes[typeof param]( param, element ) : true;\n\t\t},\n\n\t\tdependTypes: {\n\t\t\t\"boolean\": function( param ) {\n\t\t\t\treturn param;\n\t\t\t},\n\t\t\t\"string\": function( param, element ) {\n\t\t\t\treturn !!$( param, element.form ).length;\n\t\t\t},\n\t\t\t\"function\": function( param, element ) {\n\t\t\t\treturn param( element );\n\t\t\t}\n\t\t},\n\n\t\toptional: function( element ) {\n\t\t\tvar val = this.elementValue( element );\n\t\t\treturn !$.validator.methods.required.call( this, val, element ) && \"dependency-mismatch\";\n\t\t},\n\n\t\tstartRequest: function( element ) {\n\t\t\tif ( !this.pending[ element.name ] ) {\n\t\t\t\tthis.pendingRequest++;\n\t\t\t\tthis.pending[ element.name ] = true;\n\t\t\t}\n\t\t},\n\n\t\tstopRequest: function( element, valid ) {\n\t\t\tthis.pendingRequest--;\n\t\t\t// sometimes synchronization fails, make sure pendingRequest is never < 0\n\t\t\tif ( this.pendingRequest < 0 ) {\n\t\t\t\tthis.pendingRequest = 0;\n\t\t\t}\n\t\t\tdelete this.pending[ element.name ];\n\t\t\tif ( valid && this.pendingRequest === 0 && this.formSubmitted && this.form() ) {\n\t\t\t\t$( this.currentForm ).submit();\n\t\t\t\tthis.formSubmitted = false;\n\t\t\t} else if (!valid && this.pendingRequest === 0 && this.formSubmitted ) {\n\t\t\t\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ]);\n\t\t\t\tthis.formSubmitted = false;\n\t\t\t}\n\t\t},\n\n\t\tpreviousValue: function( element ) {\n\t\t\treturn $.data( element, \"previousValue\" ) || $.data( element, \"previousValue\", {\n\t\t\t\told: null,\n\t\t\t\tvalid: true,\n\t\t\t\tmessage: this.defaultMessage( element, \"remote\" )\n\t\t\t});\n\t\t},\n\n\t\t// cleans up all forms and elements, removes validator-specific events\n\t\tdestroy: function() {\n\t\t\tthis.resetForm();\n\n\t\t\t$( this.currentForm )\n\t\t\t\t.off( \".validate\" )\n\t\t\t\t.removeData( \"validator\" );\n\t\t}\n\n\t},\n\n\tclassRuleSettings: {\n\t\trequired: { required: true },\n\t\temail: { email: true },\n\t\turl: { url: true },\n\t\tdate: { date: true },\n\t\tdateISO: { dateISO: true },\n\t\tnumber: { number: true },\n\t\tdigits: { digits: true },\n\t\tcreditcard: { creditcard: true }\n\t},\n\n\taddClassRules: function( className, rules ) {\n\t\tif ( className.constructor === String ) {\n\t\t\tthis.classRuleSettings[ className ] = rules;\n\t\t} else {\n\t\t\t$.extend( this.classRuleSettings, className );\n\t\t}\n\t},\n\n\tclassRules: function( element ) {\n\t\tvar rules = {},\n\t\t\tclasses = $( element ).attr( \"class\" );\n\n\t\tif ( classes ) {\n\t\t\t$.each( classes.split( \" \" ), function() {\n\t\t\t\tif ( this in $.validator.classRuleSettings ) {\n\t\t\t\t\t$.extend( rules, $.validator.classRuleSettings[ this ]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn rules;\n\t},\n\n\tnormalizeAttributeRule: function( rules, type, method, value ) {\n\n\t\t// convert the value to a number for number inputs, and for text for backwards compability\n\t\t// allows type=\"date\" and others to be compared as strings\n\t\tif ( /min|max/.test( method ) && ( type === null || /number|range|text/.test( type ) ) ) {\n\t\t\tvalue = Number( value );\n\n\t\t\t// Support Opera Mini, which returns NaN for undefined minlength\n\t\t\tif ( isNaN( value ) ) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\t\t}\n\n\t\tif ( value || value === 0 ) {\n\t\t\trules[ method ] = value;\n\t\t} else if ( type === method && type !== \"range\" ) {\n\n\t\t\t// exception: the jquery validate 'range' method\n\t\t\t// does not test for the html5 'range' type\n\t\t\trules[ method ] = true;\n\t\t}\n\t},\n\n\tattributeRules: function( element ) {\n\t\tvar rules = {},\n\t\t\t$element = $( element ),\n\t\t\ttype = element.getAttribute( \"type\" ),\n\t\t\tmethod, value;\n\n\t\tfor ( method in $.validator.methods ) {\n\n\t\t\t// support for <input required> in both html5 and older browsers\n\t\t\tif ( method === \"required\" ) {\n\t\t\t\tvalue = element.getAttribute( method );\n\n\t\t\t\t// Some browsers return an empty string for the required attribute\n\t\t\t\t// and non-HTML5 browsers might have required=\"\" markup\n\t\t\t\tif ( value === \"\" ) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t}\n\n\t\t\t\t// force non-HTML5 browsers to return bool\n\t\t\t\tvalue = !!value;\n\t\t\t} else {\n\t\t\t\tvalue = $element.attr( method );\n\t\t\t}\n\n\t\t\tthis.normalizeAttributeRule( rules, type, method, value );\n\t\t}\n\n\t\t// maxlength may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs\n\t\tif ( rules.maxlength && /-1|2147483647|524288/.test( rules.maxlength ) ) {\n\t\t\tdelete rules.maxlength;\n\t\t}\n\n\t\treturn rules;\n\t},\n\n\tdataRules: function( element ) {\n\t\tvar rules = {},\n\t\t\t$element = $( element ),\n\t\t\ttype = element.getAttribute( \"type\" ),\n\t\t\tmethod, value;\n\n\t\tfor ( method in $.validator.methods ) {\n\t\t\tvalue = $element.data( \"rule\" + method.charAt( 0 ).toUpperCase() + method.substring( 1 ).toLowerCase() );\n\t\t\tthis.normalizeAttributeRule( rules, type, method, value );\n\t\t}\n\t\treturn rules;\n\t},\n\n\tstaticRules: function( element ) {\n\t\tvar rules = {},\n\t\t\tvalidator = $.data( element.form, \"validator\" );\n\n\t\tif ( validator.settings.rules ) {\n\t\t\trules = $.validator.normalizeRule( validator.settings.rules[ element.name ] ) || {};\n\t\t}\n\t\treturn rules;\n\t},\n\n\tnormalizeRules: function( rules, element ) {\n\t\t// handle dependency check\n\t\t$.each( rules, function( prop, val ) {\n\t\t\t// ignore rule when param is explicitly false, eg. required:false\n\t\t\tif ( val === false ) {\n\t\t\t\tdelete rules[ prop ];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( val.param || val.depends ) {\n\t\t\t\tvar keepRule = true;\n\t\t\t\tswitch ( typeof val.depends ) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\tkeepRule = !!$( val.depends, element.form ).length;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\tkeepRule = val.depends.call( element, element );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( keepRule ) {\n\t\t\t\t\trules[ prop ] = val.param !== undefined ? val.param : true;\n\t\t\t\t} else {\n\t\t\t\t\tdelete rules[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// evaluate parameters\n\t\t$.each( rules, function( rule, parameter ) {\n\t\t\trules[ rule ] = $.isFunction( parameter ) ? parameter( element ) : parameter;\n\t\t});\n\n\t\t// clean number parameters\n\t\t$.each([ \"minlength\", \"maxlength\" ], function() {\n\t\t\tif ( rules[ this ] ) {\n\t\t\t\trules[ this ] = Number( rules[ this ] );\n\t\t\t}\n\t\t});\n\t\t$.each([ \"rangelength\", \"range\" ], function() {\n\t\t\tvar parts;\n\t\t\tif ( rules[ this ] ) {\n\t\t\t\tif ( $.isArray( rules[ this ] ) ) {\n\t\t\t\t\trules[ this ] = [ Number( rules[ this ][ 0 ]), Number( rules[ this ][ 1 ] ) ];\n\t\t\t\t} else if ( typeof rules[ this ] === \"string\" ) {\n\t\t\t\t\tparts = rules[ this ].replace(/[\\[\\]]/g, \"\" ).split( /[\\s,]+/ );\n\t\t\t\t\trules[ this ] = [ Number( parts[ 0 ]), Number( parts[ 1 ] ) ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif ( $.validator.autoCreateRanges ) {\n\t\t\t// auto-create ranges\n\t\t\tif ( rules.min != null && rules.max != null ) {\n\t\t\t\trules.range = [ rules.min, rules.max ];\n\t\t\t\tdelete rules.min;\n\t\t\t\tdelete rules.max;\n\t\t\t}\n\t\t\tif ( rules.minlength != null && rules.maxlength != null ) {\n\t\t\t\trules.rangelength = [ rules.minlength, rules.maxlength ];\n\t\t\t\tdelete rules.minlength;\n\t\t\t\tdelete rules.maxlength;\n\t\t\t}\n\t\t}\n\n\t\treturn rules;\n\t},\n\n\t// Converts a simple string to a {string: true} rule, e.g., \"required\" to {required:true}\n\tnormalizeRule: function( data ) {\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tvar transformed = {};\n\t\t\t$.each( data.split( /\\s/ ), function() {\n\t\t\t\ttransformed[ this ] = true;\n\t\t\t});\n\t\t\tdata = transformed;\n\t\t}\n\t\treturn data;\n\t},\n\n\t// http://jqueryvalidation.org/jQuery.validator.addMethod/\n\taddMethod: function( name, method, message ) {\n\t\t$.validator.methods[ name ] = method;\n\t\t$.validator.messages[ name ] = message !== undefined ? message : $.validator.messages[ name ];\n\t\tif ( method.length < 3 ) {\n\t\t\t$.validator.addClassRules( name, $.validator.normalizeRule( name ) );\n\t\t}\n\t},\n\n\tmethods: {\n\n\t\t// http://jqueryvalidation.org/required-method/\n\t\trequired: function( value, element, param ) {\n\t\t\t// check if dependency is met\n\t\t\tif ( !this.depend( param, element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\t\t\tif ( element.nodeName.toLowerCase() === \"select\" ) {\n\t\t\t\t// could be an array for select-multiple or a string, both are fine this way\n\t\t\t\tvar val = $( element ).val();\n\t\t\t\treturn val && val.length > 0;\n\t\t\t}\n\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\treturn this.getLength( value, element ) > 0;\n\t\t\t}\n\t\t\treturn value.length > 0;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/email-method/\n\t\temail: function( value, element ) {\n\t\t\t// From https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\n\t\t\t// Retrieved 2014-01-14\n\t\t\t// If you have a problem with this implementation, report a bug against the above spec\n\t\t\t// Or use custom methods to implement your own email validation\n\t\t\treturn this.optional( element ) || /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/url-method/\n\t\turl: function( value, element ) {\n\n\t\t\t// Copyright (c) 2010-2013 Diego Perini, MIT licensed\n\t\t\t// https://gist.github.com/dperini/729294\n\t\t\t// see also https://mathiasbynens.be/demo/url-regex\n\t\t\t// modified to allow protocol-relative URLs\n\t\t\treturn this.optional( element ) || /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/date-method/\n\t\tdate: function( value, element ) {\n\t\t\treturn this.optional( element ) || !/Invalid|NaN/.test( new Date( value ).toString() );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/dateISO-method/\n\t\tdateISO: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/number-method/\n\t\tnumber: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/digits-method/\n\t\tdigits: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^\\d+$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/creditcard-method/\n\t\t// based on http://en.wikipedia.org/wiki/Luhn_algorithm\n\t\tcreditcard: function( value, element ) {\n\t\t\tif ( this.optional( element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\t\t\t// accept only spaces, digits and dashes\n\t\t\tif ( /[^0-9 \\-]+/.test( value ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar nCheck = 0,\n\t\t\t\tnDigit = 0,\n\t\t\t\tbEven = false,\n\t\t\t\tn, cDigit;\n\n\t\t\tvalue = value.replace( /\\D/g, \"\" );\n\n\t\t\t// Basing min and max length on\n\t\t\t// http://developer.ean.com/general_info/Valid_Credit_Card_Types\n\t\t\tif ( value.length < 13 || value.length > 19 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor ( n = value.length - 1; n >= 0; n--) {\n\t\t\t\tcDigit = value.charAt( n );\n\t\t\t\tnDigit = parseInt( cDigit, 10 );\n\t\t\t\tif ( bEven ) {\n\t\t\t\t\tif ( ( nDigit *= 2 ) > 9 ) {\n\t\t\t\t\t\tnDigit -= 9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCheck += nDigit;\n\t\t\t\tbEven = !bEven;\n\t\t\t}\n\n\t\t\treturn ( nCheck % 10 ) === 0;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/minlength-method/\n\t\tminlength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || length >= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/maxlength-method/\n\t\tmaxlength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || length <= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/rangelength-method/\n\t\trangelength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || ( length >= param[ 0 ] && length <= param[ 1 ] );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/min-method/\n\t\tmin: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || value >= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/max-method/\n\t\tmax: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || value <= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/range-method/\n\t\trange: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || ( value >= param[ 0 ] && value <= param[ 1 ] );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/equalTo-method/\n\t\tequalTo: function( value, element, param ) {\n\t\t\t// bind to the blur event of the target in order to revalidate whenever the target field is updated\n\t\t\t// TODO find a way to bind the event just once, avoiding the unbind-rebind overhead\n\t\t\tvar target = $( param );\n\t\t\tif ( this.settings.onfocusout ) {\n\t\t\t\ttarget.off( \".validate-equalTo\" ).on( \"blur.validate-equalTo\", function() {\n\t\t\t\t\t$( element ).valid();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn value === target.val();\n\t\t},\n\n\t\t// http://jqueryvalidation.org/remote-method/\n\t\tremote: function( value, element, param ) {\n\t\t\tif ( this.optional( element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\n\t\t\tvar previous = this.previousValue( element ),\n\t\t\t\tvalidator, data;\n\n\t\t\tif (!this.settings.messages[ element.name ] ) {\n\t\t\t\tthis.settings.messages[ element.name ] = {};\n\t\t\t}\n\t\t\tprevious.originalMessage = this.settings.messages[ element.name ].remote;\n\t\t\tthis.settings.messages[ element.name ].remote = previous.message;\n\n\t\t\tparam = typeof param === \"string\" && { url: param } || param;\n\n\t\t\tif ( previous.old === value ) {\n\t\t\t\treturn previous.valid;\n\t\t\t}\n\n\t\t\tprevious.old = value;\n\t\t\tvalidator = this;\n\t\t\tthis.startRequest( element );\n\t\t\tdata = {};\n\t\t\tdata[ element.name ] = value;\n\t\t\t$.ajax( $.extend( true, {\n\t\t\t\tmode: \"abort\",\n\t\t\t\tport: \"validate\" + element.name,\n\t\t\t\tdataType: \"json\",\n\t\t\t\tdata: data,\n\t\t\t\tcontext: validator.currentForm,\n\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\tvar valid = response === true || response === \"true\",\n\t\t\t\t\t\terrors, message, submitted;\n\n\t\t\t\t\tvalidator.settings.messages[ element.name ].remote = previous.originalMessage;\n\t\t\t\t\tif ( valid ) {\n\t\t\t\t\t\tsubmitted = validator.formSubmitted;\n\t\t\t\t\t\tvalidator.prepareElement( element );\n\t\t\t\t\t\tvalidator.formSubmitted = submitted;\n\t\t\t\t\t\tvalidator.successList.push( element );\n\t\t\t\t\t\tdelete validator.invalid[ element.name ];\n\t\t\t\t\t\tvalidator.showErrors();\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors = {};\n\t\t\t\t\t\tmessage = response || validator.defaultMessage( element, \"remote\" );\n\t\t\t\t\t\terrors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message;\n\t\t\t\t\t\tvalidator.invalid[ element.name ] = true;\n\t\t\t\t\t\tvalidator.showErrors( errors );\n\t\t\t\t\t}\n\t\t\t\t\tprevious.valid = valid;\n\t\t\t\t\tvalidator.stopRequest( element, valid );\n\t\t\t\t}\n\t\t\t}, param ) );\n\t\t\treturn \"pending\";\n\t\t}\n\t}\n\n});\n\n// ajax mode: abort\n// usage: $.ajax({ mode: \"abort\"[, port: \"uniqueport\"]});\n// if mode:\"abort\" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()\n\nvar pendingRequests = {},\n\tajax;\n// Use a prefilter if available (1.5+)\nif ( $.ajaxPrefilter ) {\n\t$.ajaxPrefilter(function( settings, _, xhr ) {\n\t\tvar port = settings.port;\n\t\tif ( settings.mode === \"abort\" ) {\n\t\t\tif ( pendingRequests[port] ) {\n\t\t\t\tpendingRequests[port].abort();\n\t\t\t}\n\t\t\tpendingRequests[port] = xhr;\n\t\t}\n\t});\n} else {\n\t// Proxy ajax\n\tajax = $.ajax;\n\t$.ajax = function( settings ) {\n\t\tvar mode = ( \"mode\" in settings ? settings : $.ajaxSettings ).mode,\n\t\t\tport = ( \"port\" in settings ? settings : $.ajaxSettings ).port;\n\t\tif ( mode === \"abort\" ) {\n\t\t\tif ( pendingRequests[port] ) {\n\t\t\t\tpendingRequests[port].abort();\n\t\t\t}\n\t\t\tpendingRequests[port] = ajax.apply(this, arguments);\n\t\t\treturn pendingRequests[port];\n\t\t}\n\t\treturn ajax.apply(this, arguments);\n\t};\n}\n\n}));","function strlen(string) {\r\n  //  discuss at: http://phpjs.org/functions/strlen/\r\n  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // improved by: Sakimori\r\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  //    input by: Kirk Strobeck\r\n  // bugfixed by: Onno Marsman\r\n  //  revised by: Brett Zamir (http://brett-zamir.me)\r\n  //        note: May look like overkill, but in order to be truly faithful to handling all Unicode\r\n  //        note: characters and to this function in PHP which does not count the number of bytes\r\n  //        note: but counts the number of characters, something like this is really necessary.\r\n  //   example 1: strlen('Kevin van Zonneveld');\r\n  //   returns 1: 19\r\n  //   example 2: ini_set('unicode.semantics', 'on');\r\n  //   example 2: strlen('A\\ud87e\\udc04Z');\r\n  //   returns 2: 3\r\n\r\n  var str = string + '';\r\n  var i = 0,\r\n    chr = '',\r\n    lgth = 0;\r\n\r\n  if (!this.php_js || !this.php_js.ini || !this.php_js.ini['unicode.semantics'] || this.php_js.ini[\r\n      'unicode.semantics'].local_value.toLowerCase() !== 'on') {\r\n    return string.length;\r\n  }\r\n\r\n  var getWholeChar = function(str, i) {\r\n    var code = str.charCodeAt(i);\r\n    var next = '',\r\n      prev = '';\r\n    if (0xD800 <= code && code <= 0xDBFF) {\r\n      // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single characters)\r\n      if (str.length <= (i + 1)) {\r\n        throw 'High surrogate without following low surrogate';\r\n      }\r\n      next = str.charCodeAt(i + 1);\r\n      if (0xDC00 > next || next > 0xDFFF) {\r\n        throw 'High surrogate without following low surrogate';\r\n      }\r\n      return str.charAt(i) + str.charAt(i + 1);\r\n    } else if (0xDC00 <= code && code <= 0xDFFF) {\r\n      // Low surrogate\r\n      if (i === 0) {\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      prev = str.charCodeAt(i - 1);\r\n      if (0xD800 > prev || prev > 0xDBFF) {\r\n        //(could change last hex to 0xDB7F to treat high private surrogates as single characters)\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      // We can pass over low surrogates now as the second component in a pair which we have already processed\r\n      return false;\r\n    }\r\n    return str.charAt(i);\r\n  };\r\n\r\n  for (i = 0, lgth = 0; i < str.length; i++) {\r\n    if ((chr = getWholeChar(str, i)) === false) {\r\n      continue;\r\n    } // Adapt this line at the top of any loop, passing in the whole string and the current iteration and returning a variable to represent the individual character; purpose is to treat the first part of a surrogate pair as the whole character and then ignore the second part\r\n    lgth++;\r\n  }\r\n  return lgth;\r\n}","function array_diff(arr1) {\r\n  //  discuss at: http://phpjs.org/functions/array_diff/\r\n  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // improved by: Sanjoy Roy\r\n  //  revised by: Brett Zamir (http://brett-zamir.me)\r\n  //   example 1: array_diff(['Kevin', 'van', 'Zonneveld'], ['van', 'Zonneveld']);\r\n  //   returns 1: {0:'Kevin'}\r\n\r\n  var retArr = {},\r\n    argl = arguments.length,\r\n    k1 = '',\r\n    i = 1,\r\n    k = '',\r\n    arr = {};\r\n\r\n  arr1keys: for (k1 in arr1) {\r\n    for (i = 1; i < argl; i++) {\r\n      arr = arguments[i];\r\n      for (k in arr) {\r\n        if (arr[k] === arr1[k1]) {\r\n          // If it reaches here, it was found in at least one array, so try next value\r\n          continue arr1keys;\r\n        }\r\n      }\r\n      retArr[k1] = arr1[k1];\r\n    }\r\n  }\r\n\r\n  return retArr;\r\n}","function strtotime(text, now) {\r\n  //  discuss at: http://phpjs.org/functions/strtotime/\r\n  //     version: 1109.2016\r\n  // original by: Caio Ariede (http://caioariede.com)\r\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // improved by: Caio Ariede (http://caioariede.com)\r\n  // improved by: A. Matías Quezada (http://amatiasq.com)\r\n  // improved by: preuter\r\n  // improved by: Brett Zamir (http://brett-zamir.me)\r\n  // improved by: Mirko Faber\r\n  //    input by: David\r\n  // bugfixed by: Wagner B. Soares\r\n  // bugfixed by: Artur Tchernychev\r\n  // bugfixed by: Stephan Bösch-Plepelits (http://github.com/plepe)\r\n  //        note: Examples all have a fixed timestamp to prevent tests to fail because of variable time(zones)\r\n  //   example 1: strtotime('+1 day', 1129633200);\r\n  //   returns 1: 1129719600\r\n  //   example 2: strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200);\r\n  //   returns 2: 1130425202\r\n  //   example 3: strtotime('last month', 1129633200);\r\n  //   returns 3: 1127041200\r\n  //   example 4: strtotime('2009-05-04 08:30:00 GMT');\r\n  //   returns 4: 1241425800\r\n  //   example 5: strtotime('2009-05-04 08:30:00+00');\r\n  //   returns 5: 1241425800\r\n  //   example 6: strtotime('2009-05-04 08:30:00+02:00');\r\n  //   returns 6: 1241418600\r\n  //   example 7: strtotime('2009-05-04T08:30:00Z');\r\n  //   returns 7: 1241425800\r\n\r\n  var parsed, match, today, year, date, days, ranges, len, times, regex, i, fail = false;\r\n\r\n  if (!text) {\r\n    return fail;\r\n  }\r\n\r\n  // Unecessary spaces\r\n  text = text.replace(/^\\s+|\\s+$/g, '')\r\n    .replace(/\\s{2,}/g, ' ')\r\n    .replace(/[\\t\\r\\n]/g, '')\r\n    .toLowerCase();\r\n\r\n  // in contrast to php, js Date.parse function interprets:\r\n  // dates given as yyyy-mm-dd as in timezone: UTC,\r\n  // dates with \".\" or \"-\" as MDY instead of DMY\r\n  // dates with two-digit years differently\r\n  // etc...etc...\r\n  // ...therefore we manually parse lots of common date formats\r\n  match = text.match(\r\n    /^(\\d{1,4})([\\-\\.\\/\\:])(\\d{1,2})([\\-\\.\\/\\:])(\\d{1,4})(?:\\s(\\d{1,2}):(\\d{2})?:?(\\d{2})?)?(?:\\s([A-Z]+)?)?$/);\r\n\r\n  if (match && match[2] === match[4]) {\r\n    if (match[1] > 1901) {\r\n      switch (match[2]) {\r\n      case '-': {\r\n        // YYYY-M-D\r\n        if (match[3] > 12 || match[5] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case '.': {\r\n        // YYYY.M.D is not parsed by strtotime()\r\n        return fail;\r\n      }\r\n      case '/': {\r\n        // YYYY/M/D\r\n        if (match[3] > 12 || match[5] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      }\r\n    } else if (match[5] > 1901) {\r\n      switch (match[2]) {\r\n      case '-': {\r\n        // D-M-YYYY\r\n        if (match[3] > 12 || match[1] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case '.': {\r\n        // D.M.YYYY\r\n        if (match[3] > 12 || match[1] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case '/': {\r\n        // M/D/YYYY\r\n        if (match[1] > 12 || match[3] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[5], parseInt(match[1], 10) - 1, match[3],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      }\r\n    } else {\r\n      switch (match[2]) {\r\n      case '-': {\r\n        // YY-M-D\r\n        if (match[3] > 12 || match[5] > 31 || (match[1] < 70 && match[1] > 38)) {\r\n          return fail;\r\n        }\r\n\r\n        year = match[1] >= 0 && match[1] <= 38 ? +match[1] + 2000 : match[1];\r\n        return new Date(year, parseInt(match[3], 10) - 1, match[5],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case '.': {\r\n        // D.M.YY or H.MM.SS\r\n        if (match[5] >= 70) {\r\n          // D.M.YY\r\n          if (match[3] > 12 || match[1] > 31) {\r\n            return fail;\r\n          }\r\n\r\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\r\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n        }\r\n        if (match[5] < 60 && !match[6]) {\r\n          // H.MM.SS\r\n          if (match[1] > 23 || match[3] > 59) {\r\n            return fail;\r\n          }\r\n\r\n          today = new Date();\r\n          return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\r\n            match[1] || 0, match[3] || 0, match[5] || 0, match[9] || 0) / 1000;\r\n        }\r\n\r\n        // invalid format, cannot be parsed\r\n        return fail;\r\n      }\r\n      case '/': {\r\n        // M/D/YY\r\n        if (match[1] > 12 || match[3] > 31 || (match[5] < 70 && match[5] > 38)) {\r\n          return fail;\r\n        }\r\n\r\n        year = match[5] >= 0 && match[5] <= 38 ? +match[5] + 2000 : match[5];\r\n        return new Date(year, parseInt(match[1], 10) - 1, match[3],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case ':': {\r\n        // HH:MM:SS\r\n        if (match[1] > 23 || match[3] > 59 || match[5] > 59) {\r\n          return fail;\r\n        }\r\n\r\n        today = new Date();\r\n        return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\r\n          match[1] || 0, match[3] || 0, match[5] || 0) / 1000;\r\n      }\r\n      }\r\n    }\r\n  }\r\n\r\n  // other formats and \"now\" should be parsed by Date.parse()\r\n  if (text === 'now') {\r\n    return now === null || isNaN(now) ? new Date()\r\n      .getTime() / 1000 | 0 : now | 0;\r\n  }\r\n  if (!isNaN(parsed = Date.parse(text))) {\r\n    return parsed / 1000 | 0;\r\n  }\r\n  // Browsers != Chrome have problems parsing ISO 8601 date strings, as they do\r\n  // not accept lower case characters, space, or shortened time zones.\r\n  // Therefore, fix these problems and try again.\r\n  // Examples:\r\n  //   2015-04-15 20:33:59+02\r\n  //   2015-04-15 20:33:59z\r\n  //   2015-04-15t20:33:59+02:00\r\n  if (match = text.match(\r\n      /^([0-9]{4}-[0-9]{2}-[0-9]{2})[ t]([0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?)([\\+-][0-9]{2}(:[0-9]{2})?|z)/)) {\r\n    // fix time zone information\r\n    if (match[4] == 'z') {\r\n      match[4] = 'Z';\r\n    } else if (match[4].match(/^([\\+-][0-9]{2})$/)) {\r\n      match[4] = match[4] + ':00';\r\n    }\r\n\r\n    if (!isNaN(parsed = Date.parse(match[1] + 'T' + match[2] + match[4]))) {\r\n      return parsed / 1000 | 0;\r\n    }\r\n  }\r\n\r\n  date = now ? new Date(now * 1000) : new Date();\r\n  days = {\r\n    'sun' : 0,\r\n    'mon' : 1,\r\n    'tue' : 2,\r\n    'wed' : 3,\r\n    'thu' : 4,\r\n    'fri' : 5,\r\n    'sat' : 6\r\n  };\r\n  ranges = {\r\n    'yea' : 'FullYear',\r\n    'mon' : 'Month',\r\n    'day' : 'Date',\r\n    'hou' : 'Hours',\r\n    'min' : 'Minutes',\r\n    'sec' : 'Seconds'\r\n  };\r\n\r\n  function lastNext(type, range, modifier) {\r\n    var diff, day = days[range];\r\n\r\n    if (typeof day !== 'undefined') {\r\n      diff = day - date.getDay();\r\n\r\n      if (diff === 0) {\r\n        diff = 7 * modifier;\r\n      } else if (diff > 0 && type === 'last') {\r\n        diff -= 7;\r\n      } else if (diff < 0 && type === 'next') {\r\n        diff += 7;\r\n      }\r\n\r\n      date.setDate(date.getDate() + diff);\r\n    }\r\n  }\r\n\r\n  function process(val) {\r\n    var splt = val.split(' '), // Todo: Reconcile this with regex using \\s, taking into account browser issues with split and regexes\r\n      type = splt[0],\r\n      range = splt[1].substring(0, 3),\r\n      typeIsNumber = /\\d+/.test(type),\r\n      ago = splt[2] === 'ago',\r\n      num = (type === 'last' ? -1 : 1) * (ago ? -1 : 1);\r\n\r\n    if (typeIsNumber) {\r\n      num *= parseInt(type, 10);\r\n    }\r\n\r\n    if (ranges.hasOwnProperty(range) && !splt[1].match(/^mon(day|\\.)?$/i)) {\r\n      return date['set' + ranges[range]](date['get' + ranges[range]]() + num);\r\n    }\r\n\r\n    if (range === 'wee') {\r\n      return date.setDate(date.getDate() + (num * 7));\r\n    }\r\n\r\n    if (type === 'next' || type === 'last') {\r\n      lastNext(type, range, num);\r\n    } else if (!typeIsNumber) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  times = '(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec' +\r\n    '|sunday|sun\\\\.?|monday|mon\\\\.?|tuesday|tue\\\\.?|wednesday|wed\\\\.?' +\r\n    '|thursday|thu\\\\.?|friday|fri\\\\.?|saturday|sat\\\\.?)';\r\n  regex = '([+-]?\\\\d+\\\\s' + times + '|' + '(last|next)\\\\s' + times + ')(\\\\sago)?';\r\n\r\n  match = text.match(new RegExp(regex, 'gi'));\r\n  if (!match) {\r\n    return fail;\r\n  }\r\n\r\n  for (i = 0, len = match.length; i < len; i++) {\r\n    if (!process(match[i])) {\r\n      return fail;\r\n    }\r\n  }\r\n\r\n  // ECMAScript 5 only\r\n  // if (!match.every(process))\r\n  //    return false;\r\n\r\n  return (date.getTime() / 1000);\r\n}","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2015\n * @version 1.3.1\n *\n * Date formatter utility library, that allows you to format date and \n * time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n * \n * Authors:\n *      [Kartik Visweswaran](https://github.com/kartik-v)\n *      [Enrica R](https://github.com/Erik-r)\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\nvar defaultConfig = {\n    dateSettings: {\n        days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        months: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        meridiem: ['AM', 'PM']\n    },\n    separators: /[ \\-+\\/\\.T:@]/g,\n    validParts: /[djDlwSFmMnyYaAgGhHisU]/g\n};\n\nvar DateFormatter = function (options) {\n    var config = $.extend(true, defaultConfig, options);\n    this.dateSettings = config.dateSettings;\n    this.separators = config.separators;\n    this.validParts = config.validParts;\n};\n\nDateFormatter.prototype = {\n    constructor: DateFormatter,\n    parseDate: function (vDate, vFormat) {\n        if (!vDate) {\n            return undefined;\n        }\n        if (vDate instanceof Date) {\n            return vDate;\n        }\n        if (typeof vDate == 'number') {\n            return new Date(vDate);\n        }\n        var self = this,\n            parsedDateTime = {\n                date: null,\n                year: null,\n                month: null,\n                day: null,\n                dayOfWeek: null,\n                hour: 0,\n                min: 0,\n                sec: 0\n            };\n\n        if (vDate instanceof Date) {\n            return vDate;\n        } else if (typeof vDate == 'string') {\n            var vFormatParts = vFormat.match(self.validParts);\n            if (!vFormatParts || vFormatParts.length === 0) {\n                throw new Error(\"Invalid date format definition.\");\n            }\n            var vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n            var i, vDateFlag = false , vTimeFlag = false;\n            for (i = 0; i < vDateParts.length; i++) {\n                switch (vFormatParts[i]) {\n                    case 'y':\n                    case 'Y':\n                        if (vDateParts[i].length == 2) {\n                            parsedDateTime.year = parseInt(((parseInt(vDateParts[i]) < 70) ? '20' : '19') + vDateParts[i]);\n                        } else if (vDateParts[i].length == 4) {\n                            parsedDateTime.year = parseInt(vDateParts[i]);\n                        }\n                        vDateFlag = true;\n                        break;\n                    case 'm':\n                    case 'n':\n                    case 'M':\n                    case 'F':\n                        var vMonth;\n                        if (isNaN(vDateParts[i])) {\n                            vMonth = self.dateSettings.monthsShort.indexOf(vDateParts[i]);\n                            if (vMonth > -1) {\n                                parsedDateTime.month = vMonth + 1;\n                            }\n                            vMonth = self.dateSettings.months.indexOf(vDateParts[i]);\n                            if (vMonth > -1) {\n                                parsedDateTime.month = vMonth + 1;\n                            }\n                        } else {\n                            if (parseInt(vDateParts[i]) >= 1 && parseInt(vDateParts[i]) <= 12) {\n                                parsedDateTime.month = parseInt(vDateParts[i]);\n                            }\n                        }\n                        vDateFlag = true;\n                        break;\n                    case 'd':\n                    case 'j':\n                        if (parseInt(vDateParts[i]) >= 1 && parseInt(vDateParts[i]) <= 31) {\n                            parsedDateTime.day = parseInt(vDateParts[i]);\n                        }\n                        vDateFlag = true;\n                        break;\n                    case 'g':\n                    case 'h':\n                        var vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n                            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n\n                        if (vMeriIndex > -1) {\n                            var vMeriOffset = (vDateParts[vMeriIndex].toLowerCase == self.dateSettings.meridiem[0].toLowerCase) ? 0 :\n                                (vDateParts[vMeriIndex].toLowerCase == self.dateSettings.meridiem[1].toLowerCase) ? 12 : -1;\n\n                            if (parseInt(vDateParts[i]) >= 1 && parseInt(vDateParts[i]) <= 12 && vMeriOffset > -1) {\n                                parsedDateTime.hour = parseInt(vDateParts[i]) + vMeriOffset - 1;\n                            } else if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 23) {\n                                parsedDateTime.hour = parseInt(vDateParts[i]);\n                            }\n                        } else if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 23) {\n                            parsedDateTime.hour = parseInt(vDateParts[i]);\n                        }\n                        vTimeFlag = true;\n                        break;\n                    case 'G':\n                    case 'H':\n                        if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 23) {\n                            parsedDateTime.hour = parseInt(vDateParts[i]);\n                        }\n                        vTimeFlag = true;\n                        break;\n                    case 'i':\n                        if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 59) {\n                            parsedDateTime.min = parseInt(vDateParts[i]);\n                        }\n                        vTimeFlag = true;\n                        break;\n                    case 's':\n                        if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 59) {\n                            parsedDateTime.sec = parseInt(vDateParts[i]);\n                        }\n                        vTimeFlag = true;\n                }\n            }\n            if (vDateFlag === true && parsedDateTime.year && parsedDateTime.month && parsedDateTime.day) {\n                parsedDateTime.date = new Date(parsedDateTime.year, parsedDateTime.month - 1, parsedDateTime.day, parsedDateTime.hour, parsedDateTime.min, parsedDateTime.sec, 0);\n                // parsedDateTime.dayOfWeek = parsedDateTime.date.getDay();\n                return parsedDateTime.date;\n            } else if (vTimeFlag === true) {\n                parsedDateTime.date = new Date(0, 0, 0, parsedDateTime.hour, parsedDateTime.min, parsedDateTime.sec, 0);\n                return parsedDateTime.date;\n            } else {\n                return false;\n            }\n        }\n    },\n    guessDate: function (vDateStr, vFormat) {\n        var self = this;\n        if (typeof vDateStr != 'string') {\n            return vDateStr;\n        }\n\n        var vParts = vDateStr.replace(self.separators, '\\0').split('\\0'),\n            vFormatParts = vFormat.match(self.validParts),\n            vPattern = /^[djmn]/g;\n\n        if (vPattern.test(vFormatParts[0])) {\n\n            var vDate = new Date(),\n                vDigit = 0, i;\n\n            for (i = 0; i < vParts.length; i++) {\n                vDigit = 2;\n                switch (i) {\n                    case 0:\n                        if (vFormatParts[0] == 'm' || vFormatParts[0] == 'n') {\n                            vDate.setMonth(parseInt(vParts[i].substr(0, 2)) - 1);\n                        } else {\n                            vDate.setDate(parseInt(vParts[i].substr(0, 2)));\n                        }\n                        break;\n                    case 1:\n                        if (vFormatParts[0] == 'm' || vFormatParts[0] == 'n') {\n                            vDate.setDate(parseInt(vParts[i].substr(0, 2)));\n\n                        } else {\n                            vDate.setMonth(parseInt(vParts[i].substr(0, 2)) - 1);\n                        }\n                        break;\n                    case 2:\n                        var year = vDate.getFullYear();\n                        if (vParts[i].length < 4) {\n                            vDate.setFullYear(parseInt(year.toString().substr(0, 4 - vParts[i].length) + vParts[i]));\n                            vDigit = vParts[i].length;\n                        } else {\n                            vDate.setFullYear = parseInt(vParts[i].substr(0, 4));\n                            vDigit = 4;\n                        }\n                        break;\n                    case 3:\n                        vDate.setHours(parseInt(vParts[i].substr(0, 2)));\n                        break;\n                    case 4:\n                        vDate.setMinutes(parseInt(vParts[i].substr(0, 2)));\n                        break;\n                    case 5:\n                        vDate.setSeconds(parseInt(vParts[i].substr(0, 2)));\n                }\n                if (vParts[i].substr(vDigit).length > 0) {\n                    vParts.splice(i + 1, 0, vParts[i].substr(vDigit));\n                }\n            }\n            return vDate;\n        }\n    },\n    formatDate: function (vDate, vFormat) {\n        var self = this;\n        if (typeof vDate == 'string') {\n            vDate = self.parseDate(vDate, vFormat);\n            if (vDate == false) {\n                return false;\n            }\n        }\n        if (vDate instanceof Date) {\n            var i, vChar, vDateStr = '', self = this;\n            var validParts = /[djDlwSFmMnyYaAgGhHisU]/;\n            for (i = 0; i < vFormat.length; i++) {\n                vChar = vFormat.charAt(i);\n                if (validParts.test(vChar) == true) {\n                    switch (vChar) {\n                        case 'j':\n                            vDateStr += vDate.getDate();\n                            break;\n                        case 'd':\n                            vDateStr += ((vDate.getDate() <= 9) ? '0' : '') + vDate.getDate();\n                            break;\n                        case 'D':\n                            vDateStr += self.dateSettings.daysShort[vDate.getDay()];\n                            break;\n                        case 'l':\n                            vDateStr += self.dateSettings.days[vDate.getDay()];\n                            break;\n                        case 'w':\n                            vDateStr += vDate.getDay();\n                            break;\n                        case 'S':\n                            var vDay = vDate.getDay();\n                            if (vDay == 1 || vDay == 21 || vDay == 31) {\n                                vDateStr += 'st';\n                            } else if (vDay == 2 || vDay == 22) {\n                                vDateStr += 'nd';\n                            } else if (vDay == 3 || vDay == 23) {\n                                vDateStr += 'rd';\n                            } else {\n                                vDateStr += 'th';\n                            }\n                            break;\n                        case 'n':\n                            vDateStr += vDate.getMonth() + 1;\n                            break;\n                        case 'm':\n                            vDateStr += ((vDate.getMonth() <= 8) ? '0' : '') + (vDate.getMonth() + 1);\n                            break;\n                        case 'F':\n                            vDateStr += self.dateSettings.months[vDate.getMonth()];\n                            break;\n                        case 'M':\n                            vDateStr += self.dateSettings.monthsShort[vDate.getMonth()];\n                            break;\n                        case 'Y':\n                            vDateStr += vDate.getFullYear();\n                            break;\n                        case 'y':\n                            vDateStr += vDate.getFullYear().toString().substr(2);\n                            break;\n                        case 'g':\n                            vDateStr += (vDate.getHours() % 12) + 1;\n                            break;\n                        case 'G':\n                            vDateStr += vDate.getHours();\n                            break;\n                        case 'h':\n                            vDateStr += ((vDate.getHours() % 12 <= 8) ? '0' : '') + ((vDate.getHours() % 12) + 1);\n                            break;\n                        case 'H':\n                            vDateStr += ((vDate.getHours() <= 9) ? '0' : '') + vDate.getHours();\n                            break;\n                        case 'a':\n                        case 'A':\n                            vDateStr += (vDate.getHours <= 12) ? self.dateSettings.meridiem[0] : self.dateSettings.meridiem[1];\n                            break;\n                        case 'i':\n                            vDateStr += ((vDate.getMinutes() <= 9) ? '0' : '') + vDate.getMinutes();\n                            break;\n                        case 's':\n                            vDateStr += ((vDate.getSeconds() <= 9) ? '0' : '') + vDate.getSeconds();\n                            break;\n                        case 'U':\n                            vDateStr += vDate.getTime() / 1000;\n                            break;\n                    }\n\n                } else {\n                    vDateStr += vChar;\n                }\n            }\n            return vDateStr;\n        }\n    }\n};\n","/*!\r\n * Laravel Javascript Validation\r\n *\r\n * https://github.com/proengsoft/laravel-jsvalidation\r\n *\r\n * Copyright (c) 2014 Proengsoft\r\n * Released under the MIT license\r\n */\r\n\r\nvar laravelValidation;\r\nlaravelValidation = {\r\n\r\n    implicitRules: ['Required','Confirmed'],\r\n\r\n    /**\r\n     * Initialize laravel validations\r\n     */\r\n    init: function () {\r\n\r\n        // Disable class rules and attribute rules\r\n        $.validator.classRuleSettings = {};\r\n        $.validator.normalizeAttributeRule = function(){};\r\n\r\n        // Register validations methods\r\n        this.setupValidations();\r\n        \r\n    },\r\n\r\n\r\n    setupValidations: function () {\r\n\r\n        /**\r\n         * Create JQueryValidation check to validate Laravel rules\r\n         */\r\n\r\n        $.validator.addMethod(\"laravelValidation\", function (value, element, params) {\r\n            var validator = this;\r\n            var validated = true;\r\n\r\n            // put Implicit rules in front\r\n            var rules=[];\r\n            $.each(params, function (i, param) {\r\n                if (param[3] || laravelValidation.implicitRules.indexOf(param[0])!== -1) {\r\n                    rules.unshift(param);\r\n                } else {\r\n                    rules.push(param);\r\n                }\r\n            });\r\n\r\n            $.each(rules, function (i, param) {\r\n                var implicit = param[3] || laravelValidation.implicitRules.indexOf(param[0])!== -1;\r\n                var rule = param[0];\r\n                var message = param[2];\r\n\r\n                if ( !implicit && validator.optional( element ) ) {\r\n                    validated=\"dependency-mismatch\";\r\n                    return false;\r\n                }\r\n\r\n\r\n                if (laravelValidation.methods[rule]!==undefined) {\r\n                    validated = laravelValidation.methods[rule].call(validator, value, element, param[1]);\r\n                    /*\r\n                } else if($.validator.methods[rule]!==undefined) {\r\n                    validated = $.validator.methods[rule].call(validator, value, element, param[1]);\r\n                    */\r\n                } else {\r\n                    validated=false;\r\n                }\r\n\r\n                if (validated !== true) {\r\n                    if (!validator.settings.messages[ element.name ] ) {\r\n                        validator.settings.messages[ element.name ] = {};\r\n                    }\r\n                    validator.settings.messages[element.name].laravelValidation= message;\r\n                    return false;\r\n                }\r\n\r\n            });\r\n            return validated;\r\n\r\n        }, \"\");\r\n\r\n\r\n        /**\r\n         * Create JQueryValidation check to validate Remote Laravel rules\r\n         */\r\n\r\n        $.validator.addMethod(\"laravelValidationRemote\", function (value, element, params) {\r\n\r\n            var implicit = false,\r\n                check = params[0][1],\r\n                attribute = check[0],\r\n                token = check[1];\r\n\r\n            $.each(params, function (i, parameters) {\r\n                implicit = implicit || parameters[3];\r\n            });\r\n\r\n\r\n            if ( !implicit && this.optional( element ) ) {\r\n                return \"dependency-mismatch\";\r\n            }\r\n\r\n            var previous = this.previousValue( element ),\r\n                validator, data;\r\n\r\n            if (!this.settings.messages[ element.name ] ) {\r\n                this.settings.messages[ element.name ] = {};\r\n            }\r\n            previous.originalMessage = this.settings.messages[ element.name ].laravelValidationRemote;\r\n            this.settings.messages[ element.name ].laravelValidationRemote = previous.message;\r\n\r\n            var param = typeof param === \"string\" && { url: param } || param;\r\n\r\n            if ( previous.old === value ) {\r\n                return previous.valid;\r\n            }\r\n\r\n            previous.old = value;\r\n            validator = this;\r\n            this.startRequest( element );\r\n            data = {};\r\n            data[ element.name ] = value;\r\n            data['_jsvalidation']= attribute;\r\n            var formMethod = $(validator.currentForm).attr('method');\r\n            if($(validator.currentForm).find('input[name=\"_method\"]').length) {\r\n                formMethod = $(validator.currentForm).find('input[name=\"_method\"]').val();\r\n            }\r\n\r\n            $.ajax( $.extend( true, {\r\n                mode: \"abort\",\r\n                port: \"validate\" + element.name,\r\n                dataType: \"json\",\r\n                data: data,\r\n                context: validator.currentForm,\r\n                url: $(validator.currentForm).attr('action'),\r\n                type: formMethod,\r\n\r\n                beforeSend: function (xhr) {\r\n                    if ($(validator.currentForm).attr('method').toLowerCase() !== 'get' && token) {\r\n                        return xhr.setRequestHeader('X-XSRF-TOKEN', token);\r\n                    }\r\n                }\r\n\r\n\r\n            }, param )\r\n            ).always(function( response, textStatus, errorThrown ) {\r\n                    var errors, message, submitted, valid;\r\n\r\n                    if (textStatus === 'error') {\r\n                        valid = false;\r\n                        if ('responseText' in response) {\r\n                            var errorMsg = response.responseText.match(/<h1\\s*>(.*)<\\/h1\\s*>/i);\r\n                            if ($.isArray(errorMsg)) {\r\n                                response = [errorMsg[1]];\r\n                            }\r\n                        } else {\r\n                            response = [\"Whoops, looks like something went wrong.\"];\r\n                        }\r\n                    } else if (textStatus === 'success') {\r\n                        valid = response === true || response === \"true\";\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n\r\n                    validator.settings.messages[ element.name ].laravelValidationRemote = previous.originalMessage;\r\n\r\n                    if ( valid ) {\r\n                        submitted = validator.formSubmitted;\r\n                        validator.prepareElement( element );\r\n                        validator.formSubmitted = submitted;\r\n                        validator.successList.push( element );\r\n                        delete validator.invalid[ element.name ];\r\n                        validator.showErrors();\r\n                    } else {\r\n                        errors = {};\r\n                        message = response || validator.defaultMessage( element, \"remote\" );\r\n                        errors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message[0];\r\n                        validator.invalid[ element.name ] = true;\r\n                        validator.showErrors( errors );\r\n                    }\r\n                    validator.showErrors(validator.errorMap);\r\n                    previous.valid = valid;\r\n                    validator.stopRequest( element, valid );\r\n                }\r\n            );\r\n            return \"pending\";\r\n\r\n\r\n        }, \"\");\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\n$(function() {\r\n    laravelValidation.init();\r\n});\r\n","/*!\r\n * Laravel Javascript Validation\r\n *\r\n * https://github.com/proengsoft/laravel-jsvalidation\r\n *\r\n * Helper functions used by validators\r\n *\r\n * Copyright (c) 2014 Proengsoft\r\n * Released under the MIT license\r\n */\r\n\r\n$.extend(true, laravelValidation, {\r\n\r\n    helpers: {\r\n\r\n        /**\r\n         * Numeric rules\r\n         */\r\n        numericRules: ['Integer', 'Numeric'],\r\n\r\n        /**\r\n         * Gets the file information from file input\r\n         *\r\n         * @param fieldObj\r\n         * @returns {{file: *, extension: string, size: number}}\r\n         */\r\n        fileinfo: function (fieldObj) {\r\n            var FileName = fieldObj.value;\r\n            return {\r\n                file: FileName,\r\n                extension: FileName.substr(FileName.lastIndexOf('.') + 1),\r\n                size: fieldObj.files[0].size / 1024\r\n            };\r\n        },\r\n\r\n\r\n        /**\r\n         *\r\n         * Gets the selectors for th specified field names\r\n         *\r\n         * @param names\r\n         * @returns {string}\r\n         */\r\n        selector: function (names) {\r\n            var selector = [];\r\n            if (!$.isArray(names))  {\r\n                names = [names];\r\n            }\r\n            for (var i = 0; i < names.length; i++) {\r\n                selector.push(\"[name='\" + names[i] + \"']\");\r\n            }\r\n            return selector.join();\r\n        },\r\n\r\n\r\n        /**\r\n         * Check if element has numeric rules\r\n         *\r\n         * @param element\r\n         * @returns {boolean}\r\n         */\r\n        hasNumericRules: function (element) {\r\n            return this.hasRules(element, this.numericRules);\r\n        },\r\n\r\n        /**\r\n         * Check if element has passed ruls rules\r\n         *\r\n         * @param element\r\n         * @param rules\r\n         * @returns {boolean}\r\n         */\r\n        hasRules: function (element, rules) {\r\n\r\n            var found = false;\r\n            if (typeof rules === 'string') {\r\n                rules = [rules];\r\n            }\r\n\r\n            var validator = $.data(element.form, \"validator\");\r\n            var objRules = validator.settings.rules[element.name];\r\n            if ('laravelValidation' in objRules) {\r\n                var _rules=objRules.laravelValidation;\r\n                for (var i = 0; i < _rules.length; i++) {\r\n                    if ($.inArray(_rules[i][0],rules) !== -1) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return found;\r\n        },\r\n\r\n        /**\r\n         * Return the string length using PHP function\r\n         * http://php.net/manual/en/function.strlen.php\r\n         * http://phpjs.org/functions/strlen/\r\n         *\r\n         * @param string\r\n         */\r\n        strlen: function (string) {\r\n            return strlen(string);\r\n        },\r\n\r\n\r\n        /**\r\n         * Get the size of the object depending of his type\r\n         *\r\n         * @param obj\r\n         * @param element\r\n         * @param value\r\n         * @returns int\r\n         */\r\n        getSize: function getSize(obj, element, value) {\r\n\r\n            if (this.hasNumericRules(element) && /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(value)) {\r\n                return parseFloat(value);\r\n            } else if ($.isArray(value)) {\r\n                return parseFloat(value.length);\r\n            } else if (element.type === 'file') {\r\n                return parseFloat(Math.ceil(this.fileinfo(element).size));\r\n            }\r\n\r\n            return parseFloat(this.strlen(value));\r\n        },\r\n\r\n\r\n        /**\r\n         * Return specified rule from element\r\n         *\r\n         * @param rule\r\n         * @param element\r\n         * @returns object\r\n         */\r\n        getLaravelValidation: function(rule, element) {\r\n\r\n            var found = undefined;\r\n            $.each($.validator.staticRules(element), function(key, rules) {\r\n                if (key===\"laravelValidation\") {\r\n                    $.each(rules, function (i, value) {\r\n                        if (value[0]===rule) {\r\n                            found=value;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            return found;\r\n        },\r\n\r\n\r\n        /**\r\n         * Return he timestamp of value passed using format or default format in element*\r\n         *\r\n         * @param value\r\n         * @param format\r\n         * @returns {boolean|int}\r\n         */\r\n        parseTime: function (value, format) {\r\n\r\n            var timeValue = false;\r\n            var fmt = new DateFormatter();\r\n\r\n            if ($.type(format) === 'object') {\r\n                var dateRule=this.getLaravelValidation('DateFormat', format);\r\n                if (dateRule !== undefined) {\r\n                    format = dateRule[1][0];\r\n                } else {\r\n                    format = null;\r\n                }\r\n            }\r\n\r\n            if (format == null) {\r\n                timeValue = this.strtotime(value);\r\n            } else {\r\n                timeValue = fmt.parseDate(value, format);\r\n                if (timeValue) {\r\n                    timeValue = Math.round((timeValue.getTime() / 1000));\r\n                }\r\n            }\r\n\r\n            return timeValue;\r\n        },\r\n\r\n        /**\r\n         * This method allows you to intelligently guess the date by closely matching the specific format.\r\n         * @param value\r\n         * @param format\r\n         * @returns {Date}\r\n         */\r\n        gessDate: function (value, format) {\r\n            var fmt = new DateFormatter();\r\n            return fmt.guessDate(value, format)\r\n        },\r\n\r\n        /**\r\n         * Returns Unix timestamp based on PHP function strototime\r\n         * http://php.net/manual/es/function.strtotime.php\r\n         * http://phpjs.org/functions/strtotime/\r\n         *\r\n         * @param text\r\n         * @param now\r\n         * @returns {*}\r\n         */\r\n        strtotime: function (text, now) {\r\n            return strtotime(text, now)\r\n        },\r\n\r\n\r\n        /**\r\n         * Returns Array diff based on PHP function array_diff\r\n         * http://php.net/manual/es/function.array_diff.php\r\n         * http://phpjs.org/functions/array_diff/\r\n         *\r\n         * @param arr1\r\n         * @param arr2\r\n         * @returns {*}\r\n         */\r\n        arrayDiff: function (arr1, arr2) {\r\n            return array_diff(arr1, arr2);\r\n        },\r\n\r\n\r\n        dependentElement: function(validator, element, name) {\r\n\r\n            var el=validator.findByName(name);\r\n\r\n            if ( el[0]!==undefined  && validator.settings.onfocusout ) {\r\n                var event = 'blur';\r\n                if (el[0].tagName === 'SELECT' ||\r\n                    el[0].tagName === 'OPTION' ||\r\n                    el[0].type === 'checkbox' ||\r\n                    el[0].type === 'radio'\r\n                ) {\r\n                    event = 'click';\r\n                }\r\n\r\n                var ruleName = '.validate-laravelValidation';\r\n                el.off( ruleName )\r\n                    .off(event + ruleName + '-' + element.name)\r\n                    .on( event + ruleName + '-' + element.name, function() {\r\n                        $( element ).valid();\r\n                    });\r\n            }\r\n\r\n            return el[0];\r\n        }\r\n\r\n\r\n\r\n    }\r\n});","/*!\r\n * Laravel Javascript Validation\r\n *\r\n * https://github.com/proengsoft/laravel-jsvalidation\r\n *\r\n * Timezone Helper functions used by validators\r\n *\r\n * Copyright (c) 2014 Proengsoft\r\n * Released under the MIT license\r\n */\r\n\r\n$.extend(true, laravelValidation, {\r\n\r\n    helpers: {\r\n\r\n        /**\r\n         * Check if the specified timezone is valid\r\n         *\r\n         * @param value\r\n         * @returns {boolean}\r\n         */\r\n        isTimezone: function (value) {\r\n\r\n            var timezones={\r\n                \"africa\": [\r\n                    \"abidjan\",\r\n                    \"accra\",\r\n                    \"addis_ababa\",\r\n                    \"algiers\",\r\n                    \"asmara\",\r\n                    \"bamako\",\r\n                    \"bangui\",\r\n                    \"banjul\",\r\n                    \"bissau\",\r\n                    \"blantyre\",\r\n                    \"brazzaville\",\r\n                    \"bujumbura\",\r\n                    \"cairo\",\r\n                    \"casablanca\",\r\n                    \"ceuta\",\r\n                    \"conakry\",\r\n                    \"dakar\",\r\n                    \"dar_es_salaam\",\r\n                    \"djibouti\",\r\n                    \"douala\",\r\n                    \"el_aaiun\",\r\n                    \"freetown\",\r\n                    \"gaborone\",\r\n                    \"harare\",\r\n                    \"johannesburg\",\r\n                    \"juba\",\r\n                    \"kampala\",\r\n                    \"khartoum\",\r\n                    \"kigali\",\r\n                    \"kinshasa\",\r\n                    \"lagos\",\r\n                    \"libreville\",\r\n                    \"lome\",\r\n                    \"luanda\",\r\n                    \"lubumbashi\",\r\n                    \"lusaka\",\r\n                    \"malabo\",\r\n                    \"maputo\",\r\n                    \"maseru\",\r\n                    \"mbabane\",\r\n                    \"mogadishu\",\r\n                    \"monrovia\",\r\n                    \"nairobi\",\r\n                    \"ndjamena\",\r\n                    \"niamey\",\r\n                    \"nouakchott\",\r\n                    \"ouagadougou\",\r\n                    \"porto-novo\",\r\n                    \"sao_tome\",\r\n                    \"tripoli\",\r\n                    \"tunis\",\r\n                    \"windhoek\"\r\n                ],\r\n                \"america\": [\r\n                    \"adak\",\r\n                    \"anchorage\",\r\n                    \"anguilla\",\r\n                    \"antigua\",\r\n                    \"araguaina\",\r\n                    \"argentina\\/buenos_aires\",\r\n                    \"argentina\\/catamarca\",\r\n                    \"argentina\\/cordoba\",\r\n                    \"argentina\\/jujuy\",\r\n                    \"argentina\\/la_rioja\",\r\n                    \"argentina\\/mendoza\",\r\n                    \"argentina\\/rio_gallegos\",\r\n                    \"argentina\\/salta\",\r\n                    \"argentina\\/san_juan\",\r\n                    \"argentina\\/san_luis\",\r\n                    \"argentina\\/tucuman\",\r\n                    \"argentina\\/ushuaia\",\r\n                    \"aruba\",\r\n                    \"asuncion\",\r\n                    \"atikokan\",\r\n                    \"bahia\",\r\n                    \"bahia_banderas\",\r\n                    \"barbados\",\r\n                    \"belem\",\r\n                    \"belize\",\r\n                    \"blanc-sablon\",\r\n                    \"boa_vista\",\r\n                    \"bogota\",\r\n                    \"boise\",\r\n                    \"cambridge_bay\",\r\n                    \"campo_grande\",\r\n                    \"cancun\",\r\n                    \"caracas\",\r\n                    \"cayenne\",\r\n                    \"cayman\",\r\n                    \"chicago\",\r\n                    \"chihuahua\",\r\n                    \"costa_rica\",\r\n                    \"creston\",\r\n                    \"cuiaba\",\r\n                    \"curacao\",\r\n                    \"danmarkshavn\",\r\n                    \"dawson\",\r\n                    \"dawson_creek\",\r\n                    \"denver\",\r\n                    \"detroit\",\r\n                    \"dominica\",\r\n                    \"edmonton\",\r\n                    \"eirunepe\",\r\n                    \"el_salvador\",\r\n                    \"fortaleza\",\r\n                    \"glace_bay\",\r\n                    \"godthab\",\r\n                    \"goose_bay\",\r\n                    \"grand_turk\",\r\n                    \"grenada\",\r\n                    \"guadeloupe\",\r\n                    \"guatemala\",\r\n                    \"guayaquil\",\r\n                    \"guyana\",\r\n                    \"halifax\",\r\n                    \"havana\",\r\n                    \"hermosillo\",\r\n                    \"indiana\\/indianapolis\",\r\n                    \"indiana\\/knox\",\r\n                    \"indiana\\/marengo\",\r\n                    \"indiana\\/petersburg\",\r\n                    \"indiana\\/tell_city\",\r\n                    \"indiana\\/vevay\",\r\n                    \"indiana\\/vincennes\",\r\n                    \"indiana\\/winamac\",\r\n                    \"inuvik\",\r\n                    \"iqaluit\",\r\n                    \"jamaica\",\r\n                    \"juneau\",\r\n                    \"kentucky\\/louisville\",\r\n                    \"kentucky\\/monticello\",\r\n                    \"kralendijk\",\r\n                    \"la_paz\",\r\n                    \"lima\",\r\n                    \"los_angeles\",\r\n                    \"lower_princes\",\r\n                    \"maceio\",\r\n                    \"managua\",\r\n                    \"manaus\",\r\n                    \"marigot\",\r\n                    \"martinique\",\r\n                    \"matamoros\",\r\n                    \"mazatlan\",\r\n                    \"menominee\",\r\n                    \"merida\",\r\n                    \"metlakatla\",\r\n                    \"mexico_city\",\r\n                    \"miquelon\",\r\n                    \"moncton\",\r\n                    \"monterrey\",\r\n                    \"montevideo\",\r\n                    \"montreal\",\r\n                    \"montserrat\",\r\n                    \"nassau\",\r\n                    \"new_york\",\r\n                    \"nipigon\",\r\n                    \"nome\",\r\n                    \"noronha\",\r\n                    \"north_dakota\\/beulah\",\r\n                    \"north_dakota\\/center\",\r\n                    \"north_dakota\\/new_salem\",\r\n                    \"ojinaga\",\r\n                    \"panama\",\r\n                    \"pangnirtung\",\r\n                    \"paramaribo\",\r\n                    \"phoenix\",\r\n                    \"port-au-prince\",\r\n                    \"port_of_spain\",\r\n                    \"porto_velho\",\r\n                    \"puerto_rico\",\r\n                    \"rainy_river\",\r\n                    \"rankin_inlet\",\r\n                    \"recife\",\r\n                    \"regina\",\r\n                    \"resolute\",\r\n                    \"rio_branco\",\r\n                    \"santa_isabel\",\r\n                    \"santarem\",\r\n                    \"santiago\",\r\n                    \"santo_domingo\",\r\n                    \"sao_paulo\",\r\n                    \"scoresbysund\",\r\n                    \"shiprock\",\r\n                    \"sitka\",\r\n                    \"st_barthelemy\",\r\n                    \"st_johns\",\r\n                    \"st_kitts\",\r\n                    \"st_lucia\",\r\n                    \"st_thomas\",\r\n                    \"st_vincent\",\r\n                    \"swift_current\",\r\n                    \"tegucigalpa\",\r\n                    \"thule\",\r\n                    \"thunder_bay\",\r\n                    \"tijuana\",\r\n                    \"toronto\",\r\n                    \"tortola\",\r\n                    \"vancouver\",\r\n                    \"whitehorse\",\r\n                    \"winnipeg\",\r\n                    \"yakutat\",\r\n                    \"yellowknife\"\r\n                ],\r\n                \"antarctica\": [\r\n                    \"casey\",\r\n                    \"davis\",\r\n                    \"dumontdurville\",\r\n                    \"macquarie\",\r\n                    \"mawson\",\r\n                    \"mcmurdo\",\r\n                    \"palmer\",\r\n                    \"rothera\",\r\n                    \"south_pole\",\r\n                    \"syowa\",\r\n                    \"vostok\"\r\n                ],\r\n                \"arctic\": [\r\n                    \"longyearbyen\"\r\n                ],\r\n                \"asia\": [\r\n                    \"aden\",\r\n                    \"almaty\",\r\n                    \"amman\",\r\n                    \"anadyr\",\r\n                    \"aqtau\",\r\n                    \"aqtobe\",\r\n                    \"ashgabat\",\r\n                    \"baghdad\",\r\n                    \"bahrain\",\r\n                    \"baku\",\r\n                    \"bangkok\",\r\n                    \"beirut\",\r\n                    \"bishkek\",\r\n                    \"brunei\",\r\n                    \"choibalsan\",\r\n                    \"chongqing\",\r\n                    \"colombo\",\r\n                    \"damascus\",\r\n                    \"dhaka\",\r\n                    \"dili\",\r\n                    \"dubai\",\r\n                    \"dushanbe\",\r\n                    \"gaza\",\r\n                    \"harbin\",\r\n                    \"hebron\",\r\n                    \"ho_chi_minh\",\r\n                    \"hong_kong\",\r\n                    \"hovd\",\r\n                    \"irkutsk\",\r\n                    \"jakarta\",\r\n                    \"jayapura\",\r\n                    \"jerusalem\",\r\n                    \"kabul\",\r\n                    \"kamchatka\",\r\n                    \"karachi\",\r\n                    \"kashgar\",\r\n                    \"kathmandu\",\r\n                    \"khandyga\",\r\n                    \"kolkata\",\r\n                    \"krasnoyarsk\",\r\n                    \"kuala_lumpur\",\r\n                    \"kuching\",\r\n                    \"kuwait\",\r\n                    \"macau\",\r\n                    \"magadan\",\r\n                    \"makassar\",\r\n                    \"manila\",\r\n                    \"muscat\",\r\n                    \"nicosia\",\r\n                    \"novokuznetsk\",\r\n                    \"novosibirsk\",\r\n                    \"omsk\",\r\n                    \"oral\",\r\n                    \"phnom_penh\",\r\n                    \"pontianak\",\r\n                    \"pyongyang\",\r\n                    \"qatar\",\r\n                    \"qyzylorda\",\r\n                    \"rangoon\",\r\n                    \"riyadh\",\r\n                    \"sakhalin\",\r\n                    \"samarkand\",\r\n                    \"seoul\",\r\n                    \"shanghai\",\r\n                    \"singapore\",\r\n                    \"taipei\",\r\n                    \"tashkent\",\r\n                    \"tbilisi\",\r\n                    \"tehran\",\r\n                    \"thimphu\",\r\n                    \"tokyo\",\r\n                    \"ulaanbaatar\",\r\n                    \"urumqi\",\r\n                    \"ust-nera\",\r\n                    \"vientiane\",\r\n                    \"vladivostok\",\r\n                    \"yakutsk\",\r\n                    \"yekaterinburg\",\r\n                    \"yerevan\"\r\n                ],\r\n                \"atlantic\": [\r\n                    \"azores\",\r\n                    \"bermuda\",\r\n                    \"canary\",\r\n                    \"cape_verde\",\r\n                    \"faroe\",\r\n                    \"madeira\",\r\n                    \"reykjavik\",\r\n                    \"south_georgia\",\r\n                    \"st_helena\",\r\n                    \"stanley\"\r\n                ],\r\n                \"australia\": [\r\n                    \"adelaide\",\r\n                    \"brisbane\",\r\n                    \"broken_hill\",\r\n                    \"currie\",\r\n                    \"darwin\",\r\n                    \"eucla\",\r\n                    \"hobart\",\r\n                    \"lindeman\",\r\n                    \"lord_howe\",\r\n                    \"melbourne\",\r\n                    \"perth\",\r\n                    \"sydney\"\r\n                ],\r\n                \"europe\": [\r\n                    \"amsterdam\",\r\n                    \"andorra\",\r\n                    \"athens\",\r\n                    \"belgrade\",\r\n                    \"berlin\",\r\n                    \"bratislava\",\r\n                    \"brussels\",\r\n                    \"bucharest\",\r\n                    \"budapest\",\r\n                    \"busingen\",\r\n                    \"chisinau\",\r\n                    \"copenhagen\",\r\n                    \"dublin\",\r\n                    \"gibraltar\",\r\n                    \"guernsey\",\r\n                    \"helsinki\",\r\n                    \"isle_of_man\",\r\n                    \"istanbul\",\r\n                    \"jersey\",\r\n                    \"kaliningrad\",\r\n                    \"kiev\",\r\n                    \"lisbon\",\r\n                    \"ljubljana\",\r\n                    \"london\",\r\n                    \"luxembourg\",\r\n                    \"madrid\",\r\n                    \"malta\",\r\n                    \"mariehamn\",\r\n                    \"minsk\",\r\n                    \"monaco\",\r\n                    \"moscow\",\r\n                    \"oslo\",\r\n                    \"paris\",\r\n                    \"podgorica\",\r\n                    \"prague\",\r\n                    \"riga\",\r\n                    \"rome\",\r\n                    \"samara\",\r\n                    \"san_marino\",\r\n                    \"sarajevo\",\r\n                    \"simferopol\",\r\n                    \"skopje\",\r\n                    \"sofia\",\r\n                    \"stockholm\",\r\n                    \"tallinn\",\r\n                    \"tirane\",\r\n                    \"uzhgorod\",\r\n                    \"vaduz\",\r\n                    \"vatican\",\r\n                    \"vienna\",\r\n                    \"vilnius\",\r\n                    \"volgograd\",\r\n                    \"warsaw\",\r\n                    \"zagreb\",\r\n                    \"zaporozhye\",\r\n                    \"zurich\"\r\n                ],\r\n                \"indian\": [\r\n                    \"antananarivo\",\r\n                    \"chagos\",\r\n                    \"christmas\",\r\n                    \"cocos\",\r\n                    \"comoro\",\r\n                    \"kerguelen\",\r\n                    \"mahe\",\r\n                    \"maldives\",\r\n                    \"mauritius\",\r\n                    \"mayotte\",\r\n                    \"reunion\"\r\n                ],\r\n                \"pacific\": [\r\n                    \"apia\",\r\n                    \"auckland\",\r\n                    \"chatham\",\r\n                    \"chuuk\",\r\n                    \"easter\",\r\n                    \"efate\",\r\n                    \"enderbury\",\r\n                    \"fakaofo\",\r\n                    \"fiji\",\r\n                    \"funafuti\",\r\n                    \"galapagos\",\r\n                    \"gambier\",\r\n                    \"guadalcanal\",\r\n                    \"guam\",\r\n                    \"honolulu\",\r\n                    \"johnston\",\r\n                    \"kiritimati\",\r\n                    \"kosrae\",\r\n                    \"kwajalein\",\r\n                    \"majuro\",\r\n                    \"marquesas\",\r\n                    \"midway\",\r\n                    \"nauru\",\r\n                    \"niue\",\r\n                    \"norfolk\",\r\n                    \"noumea\",\r\n                    \"pago_pago\",\r\n                    \"palau\",\r\n                    \"pitcairn\",\r\n                    \"pohnpei\",\r\n                    \"port_moresby\",\r\n                    \"rarotonga\",\r\n                    \"saipan\",\r\n                    \"tahiti\",\r\n                    \"tarawa\",\r\n                    \"tongatapu\",\r\n                    \"wake\",\r\n                    \"wallis\"\r\n                ],\r\n                \"utc\": [\r\n                    \"\"\r\n                ]\r\n            };\r\n\r\n            var tzparts= value.split('/',2);\r\n            var continent=tzparts[0].toLowerCase();\r\n            var city='';\r\n            if (tzparts[1]) {\r\n                city=tzparts[1].toLowerCase();\r\n            }\r\n\r\n            return (continent in timezones && ( timezones[continent].length===0 || timezones[continent].indexOf(city)!==-1))\r\n\r\n        }\r\n    }\r\n\r\n\r\n});","/*!\r\n * Laravel Javascript Validation\r\n *\r\n * https://github.com/proengsoft/laravel-jsvalidation\r\n *\r\n * Metjods that implement Laravel Validations\r\n *\r\n * Copyright (c) 2014 Proengsoft\r\n * Released under the MIT license\r\n */\r\n\r\n\r\n$.extend(true, laravelValidation, {\r\n\r\n    methods:{\r\n\r\n        helpers: laravelValidation.helpers,\r\n\r\n        jsRemoteTimer:0,\r\n\r\n\r\n        /**\r\n         * \"Validate\" optional attributes.\r\n         * Always returns true, just lets us put sometimes in rules.*\r\n         * @return {boolean}\r\n         */\r\n        Sometimes: function() {\r\n            return true;\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate the given attribute is filled if it is present.\r\n         */\r\n        Filled: function(value, element) {\r\n            return $.validator.methods.required.call(this, value, element, true);\r\n        },\r\n\r\n\r\n        /**\r\n         *Validate that a required attribute exists.\r\n         */\r\n        Required: function(value, element) {\r\n            return  $.validator.methods.required.call(this, value, element);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute exists when any other attribute exists.\r\n         * @return {boolean}\r\n         */\r\n        RequiredWith: function(value, element, params) {\r\n            var validator=this,\r\n                required=false;\r\n            var currentObject=this;\r\n\r\n            $.each(params,function(i,param) {\r\n                var target=laravelValidation.helpers.dependentElement(\r\n                    currentObject, element, param\r\n                );\r\n                required=required || (\r\n                    target!==undefined &&\r\n                    $.validator.methods.required.call(\r\n                        validator,\r\n                        currentObject.elementValue(target),\r\n                        target,true\r\n                    ));\r\n            });\r\n\r\n            if (required) {\r\n                return  $.validator.methods.required.call(this, value, element, true);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute exists when all other attribute exists.\r\n         * @return {boolean}\r\n         */\r\n        RequiredWithAll: function(value, element, params) {\r\n            var validator=this,\r\n                required=true;\r\n            var currentObject=this;\r\n\r\n            $.each(params,function(i,param) {\r\n                var target=laravelValidation.helpers.dependentElement(\r\n                    currentObject, element, param\r\n                );\r\n                required = required && (\r\n                      target!==undefined &&\r\n                      $.validator.methods.required.call(\r\n                          validator,\r\n                          currentObject.elementValue(target),\r\n                          target,true\r\n                      ));\r\n            });\r\n\r\n            if (required) {\r\n                return  $.validator.methods.required.call(this, value, element, true);\r\n            }\r\n            return true;\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute exists when any other attribute does not exists.\r\n         * @return {boolean}\r\n         */\r\n        RequiredWithout: function(value, element, params) {\r\n            var validator=this,\r\n                required=false;\r\n            var currentObject=this;\r\n\r\n            $.each(params,function(i,param) {\r\n                var target=laravelValidation.helpers.dependentElement(\r\n                    currentObject, element, param\r\n                );\r\n                required = required ||\r\n                    target===undefined||\r\n                    !$.validator.methods.required.call(\r\n                        validator,\r\n                        currentObject.elementValue(target),\r\n                        target,true\r\n                    );\r\n            });\r\n\r\n            if (required) {\r\n                return  $.validator.methods.required.call(this, value, element, true);\r\n            }\r\n            return true;\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute exists when all other attribute does not exists.\r\n         * @return {boolean}\r\n         */\r\n        RequiredWithoutAll: function(value, element, params) {\r\n            var validator=this,\r\n                required=true,\r\n                currentObject=this;\r\n\r\n            $.each(params,function(i, param) {\r\n                var target=laravelValidation.helpers.dependentElement(\r\n                    currentObject, element, param\r\n                );\r\n                required = required && (\r\n                    target===undefined ||\r\n                    !$.validator.methods.required.call(\r\n                        validator,\r\n                        currentObject.elementValue(target),\r\n                        target,true\r\n                    ));\r\n            });\r\n\r\n            if (required) {\r\n                return  $.validator.methods.required.call(this, value, element, true);\r\n            }\r\n            return true;\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute exists when another attribute has a given value.\r\n         * @return {boolean}\r\n         */\r\n        RequiredIf: function(value, element, params) {\r\n\r\n            var target=laravelValidation.helpers.dependentElement(\r\n                this, element, params[0]\r\n            );\r\n\r\n            if (target!==undefined) {\r\n                var val=String(this.elementValue(target));\r\n                var data=params.slice(1);\r\n                if ($.inArray(val,data)!== -1) {\r\n                    return $.validator.methods.required.call(\r\n                        this, value, element, true\r\n                    );\r\n                }\r\n            }\r\n\r\n            return true;\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute has a matching confirmation.\r\n         * @return {boolean}\r\n         */\r\n        Confirmed: function(value, element, params) {\r\n            return laravelValidation.methods.Same.call(this,value, element, params);\r\n        },\r\n\r\n        /**\r\n         * Validate that two attributes match.\r\n         * @return {boolean}\r\n         */\r\n        Same: function(value, element, params) {\r\n\r\n            var target=laravelValidation.helpers.dependentElement(\r\n                this, element, params[0]\r\n            );\r\n\r\n            if (target!==undefined) {\r\n                return String(value) === String(this.elementValue(target));\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is different from another attribute.\r\n         * @return {boolean}\r\n         */\r\n        Different: function(value, element, params) {\r\n            return ! laravelValidation.methods.Same.call(this,value, element, params);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute was \"accepted\".\r\n         * This validation rule implies the attribute is \"required\".\r\n         * @return {boolean}\r\n         */\r\n        Accepted: function(value) {\r\n            var regex = new RegExp(\"^(?:(yes|on|1|true))$\",'i');\r\n            return regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is an array.\r\n         */\r\n        Array: function(value) {\r\n            return $.isArray(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is a boolean.\r\n         * @return {boolean}\r\n         */\r\n        Boolean: function(value) {\r\n            var regex= new RegExp(\"^(?:(true|false|1|0))$\",'i');\r\n            return  regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is an integer.\r\n         * @return {boolean}\r\n         */\r\n        Integer: function(value) {\r\n            var regex= new RegExp(\"^(?:-?\\\\d+)$\",'i');\r\n            return  regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is numeric.\r\n         */\r\n        Numeric: function(value, element) {\r\n            return $.validator.methods.number.call(this, value, element, true);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is a string.\r\n         * @return {boolean}\r\n         */\r\n        String: function(value) {\r\n            return typeof value === 'string';\r\n        },\r\n\r\n        /**\r\n         * The field under validation must be numeric and must have an exact length of value.\r\n         */\r\n        Digits: function(value, element, params) {\r\n            return ($.validator.methods.number.call(this, value, element, true)\r\n                && value.length===parseInt(params));\r\n        },\r\n\r\n        /**\r\n         * The field under validation must have a length between the given min and max.\r\n         */\r\n        DigitsBetween: function(value, element, params) {\r\n            return ($.validator.methods.number.call(this, value, element, true)\r\n                && value.length>=parseFloat(params[0]) && value.length<=parseFloat(params[1]));\r\n        },\r\n\r\n        /**\r\n         * Validate the size of an attribute.\r\n         * @return {boolean}\r\n         */\r\n        Size: function(value, element, params) {\r\n            return laravelValidation.helpers.getSize(this, element,value) === parseFloat(params[0]);\r\n        },\r\n\r\n        /**\r\n         * Validate the size of an attribute is between a set of values.\r\n         * @return {boolean}\r\n         */\r\n        Between: function(value, element, params) {\r\n            return ( laravelValidation.helpers.getSize(this, element,value) >= parseFloat(params[0]) &&\r\n                laravelValidation.helpers.getSize(this,element,value) <= parseFloat(params[1]));\r\n        },\r\n\r\n        /**\r\n         * Validate the size of an attribute is greater than a minimum value.\r\n         * @return {boolean}\r\n         */\r\n        Min: function(value, element, params) {\r\n            return laravelValidation.helpers.getSize(this, element,value) >= parseFloat(params[0]);\r\n        },\r\n\r\n        /**\r\n         * Validate the size of an attribute is less than a maximum value.\r\n         * @return {boolean}\r\n         */\r\n        Max: function(value, element, params) {\r\n            return laravelValidation.helpers.getSize(this, element,value) <= parseFloat(params[0]);\r\n        },\r\n\r\n        /**\r\n         *  Validate an attribute is contained within a list of values.\r\n         * @return {boolean}\r\n         */\r\n        In: function(value, element, params) {\r\n            if ($.isArray(value) && laravelValidation.helpers.hasRules(element, \"Array\")) {\r\n                var diff = laravelValidation.helpers.arrayDiff(value, params);\r\n                return Object.keys(diff).length === 0;\r\n            }\r\n            return params.indexOf(value.toString()) !== -1;\r\n        },\r\n\r\n        /**\r\n         *  Validate an attribute is not contained within a list of values.\r\n         * @return {boolean}\r\n         */\r\n        NotIn: function(value, element, params) {\r\n            return params.indexOf(value.toString()) === -1;\r\n        },\r\n\r\n\r\n        /**\r\n         *  Validate that an attribute is a valid IP.\r\n         * @return {boolean}\r\n         */\r\n        Ip: function(value) {\r\n            return /^(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/i.test(value) ||\r\n                /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);\r\n        },\r\n\r\n        /**\r\n         *  Validate that an attribute is a valid e-mail address.\r\n         */\r\n        Email: function(value, element) {\r\n            return $.validator.methods.email.call(this, value, element, true);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is a valid URL.\r\n         */\r\n        Url: function(value, element) {\r\n            return $.validator.methods.url.call(this, value, element, true);\r\n        },\r\n\r\n        /**\r\n         * Validate the MIME type of a file upload attribute is in a set of MIME types.\r\n         * @return {boolean}\r\n         */\r\n        Mimes: function(value, element, params) {\r\n            var lowerParams = $.map(params, String.toLowerCase);\r\n            return (!window.File || !window.FileReader || !window.FileList || !window.Blob) ||\r\n                lowerParams.indexOf(laravelValidation.helpers.fileinfo(element).extension.toLowerCase())!==-1;\r\n        },\r\n\r\n        /**\r\n         * Validate the MIME type of a file upload attribute is in a set of MIME types.\r\n         */\r\n        Image: function(value, element) {\r\n            return laravelValidation.methods.Mimes.call(this, value, element, ['jpg', 'png', 'gif', 'bmp', 'svg']);\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute contains only alphabetic characters.\r\n         * @return {boolean}\r\n         */\r\n        Alpha: function(value) {\r\n            if (typeof  value !== 'string') {\r\n                return false;\r\n            }\r\n\r\n            var regex = new RegExp(\"^(?:^[a-z\\u00E0-\\u00FC]+$)$\",'i');\r\n            return  regex.test(value);\r\n\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute contains only alpha-numeric characters.\r\n         * @return {boolean}\r\n         */\r\n        AlphaNum: function(value) {\r\n            if (typeof  value !== 'string') {\r\n                return false;\r\n            }\r\n            var regex = new RegExp(\"^(?:^[a-z0-9\\u00E0-\\u00FC]+$)$\",'i');\r\n            return regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute contains only alphabetic characters.\r\n         * @return {boolean}\r\n         */\r\n        AlphaDash: function(value) {\r\n            if (typeof  value !== 'string') {\r\n                return false;\r\n            }\r\n            var regex = new RegExp(\"^(?:^[a-z0-9\\u00E0-\\u00FC_-]+$)$\",'i');\r\n            return regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute passes a regular expression check.\r\n         * @return {boolean}\r\n         */\r\n        Regex: function(value, element, params) {\r\n            var invalidModifiers=['x','s','u','X','U','A'];\r\n            // Converting php regular expression\r\n            var phpReg= new RegExp('^(?:\\/)(.*\\\\\\/?[^\\/]*|[^\\/]*)(?:\\/)([gmixXsuUAJ]*)?$');\r\n            var matches=params[0].match(phpReg);\r\n            if (matches==null) {\r\n                return false;\r\n            }\r\n            // checking modifiers\r\n            var php_modifiers=[];\r\n            if (matches[2]!==undefined) {\r\n                php_modifiers=matches[2].split('');\r\n                for (var i=0; i<php_modifiers.length<i ;i++) {\r\n                    if (invalidModifiers.indexOf(php_modifiers[i])!==-1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            var regex = new RegExp(\"^(?:\"+matches[1]+\")$\",php_modifiers.join());\r\n            return   regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is a valid date.\r\n         * @return {boolean}\r\n         */\r\n        Date: function(value) {\r\n            return (laravelValidation.helpers.strtotime(value)!==false);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute matches a date format.\r\n         * @return {boolean}\r\n         */\r\n        DateFormat: function(value, element, params) {\r\n            return laravelValidation.helpers.parseTime(value,params[0])!==false;\r\n        },\r\n\r\n        /**\r\n         * Validate the date is before a given date.\r\n         * @return {boolean}\r\n         */\r\n        Before: function(value, element, params) {\r\n\r\n            var timeCompare=parseFloat(params);\r\n            if (isNaN(timeCompare)) {\r\n                var target=laravelValidation.helpers.dependentElement(this, element, params);\r\n                if (target===undefined) {\r\n                    return false;\r\n                }\r\n                timeCompare= laravelValidation.helpers.parseTime(this.elementValue(target), target);\r\n            }\r\n\r\n            var timeValue=laravelValidation.helpers.parseTime(value, element);\r\n            return  (timeValue !==false && timeValue < timeCompare);\r\n\r\n        },\r\n\r\n        /**\r\n         * Validate the date is after a given date.\r\n         * @return {boolean}\r\n         */\r\n        After: function(value, element, params) {\r\n            var timeCompare=parseFloat(params);\r\n            if (isNaN(timeCompare)) {\r\n                var target=laravelValidation.helpers.dependentElement(this, element, params);\r\n                if (target===undefined) {\r\n                    return false;\r\n                }\r\n                timeCompare= laravelValidation.helpers.parseTime(this.elementValue(target), target);\r\n            }\r\n\r\n            var timeValue=laravelValidation.helpers.parseTime(value, element);\r\n            return  (timeValue !==false && timeValue > timeCompare);\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute is a valid date.\r\n         */\r\n        Timezone: function(value) {\r\n            return  laravelValidation.helpers.isTimezone(value);\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate the attribute is a valid JSON string.\r\n         *\r\n         * @param  value\r\n         * @return bool\r\n         */\r\n        Json: function(value) {\r\n            var result = true;\r\n            try {\r\n                JSON.parse(value);\r\n            } catch (e) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n    }\r\n    \r\n});\r\n\r\n"],"sourceRoot":"/source/"}
\ No newline at end of file
+{"version":3,"sources":["jquery.validate.js","strlen.js","array_diff.js","strtotime.js","is_numeric.js","php-date-formatter.js","jsvalidation.js","helpers.js","timezones.js","validations.js"],"names":[],"mappingsr3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjvmnPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChdfile":"jsvalidation.js","sourcesContent":["/*!\n * jQuery Validation Plugin v1.14.0\n *\n * http://jqueryvalidation.org/\n *\n * Copyright (c) 2015 Jörn Zaefferer\n * Released under the MIT license\n */\n(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine( [\"jquery\"], factory );\n\t} else {\n\t\tfactory( jQuery );\n\t}\n}(function( $ ) {\n\n$.extend($.fn, {\n\t// http://jqueryvalidation.org/validate/\n\tvalidate: function( options ) {\n\n\t\t// if nothing is selected, return nothing; can't chain anyway\n\t\tif ( !this.length ) {\n\t\t\tif ( options && options.debug && window.console ) {\n\t\t\t\tconsole.warn( \"Nothing selected, can't validate, returning nothing.\" );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// check if a validator for this form was already created\n\t\tvar validator = $.data( this[ 0 ], \"validator\" );\n\t\tif ( validator ) {\n\t\t\treturn validator;\n\t\t}\n\n\t\t// Add novalidate tag if HTML5.\n\t\tthis.attr( \"novalidate\", \"novalidate\" );\n\n\t\tvalidator = new $.validator( options, this[ 0 ] );\n\t\t$.data( this[ 0 ], \"validator\", validator );\n\n\t\tif ( validator.settings.onsubmit ) {\n\n\t\t\tthis.on( \"click.validate\", \":submit\", function( event ) {\n\t\t\t\tif ( validator.settings.submitHandler ) {\n\t\t\t\t\tvalidator.submitButton = event.target;\n\t\t\t\t}\n\n\t\t\t\t// allow suppressing validation by adding a cancel class to the submit button\n\t\t\t\tif ( $( this ).hasClass( \"cancel\" ) ) {\n\t\t\t\t\tvalidator.cancelSubmit = true;\n\t\t\t\t}\n\n\t\t\t\t// allow suppressing validation by adding the html5 formnovalidate attribute to the submit button\n\t\t\t\tif ( $( this ).attr( \"formnovalidate\" ) !== undefined ) {\n\t\t\t\t\tvalidator.cancelSubmit = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// validate the form on submit\n\t\t\tthis.on( \"submit.validate\", function( event ) {\n\t\t\t\tif ( validator.settings.debug ) {\n\t\t\t\t\t// prevent form submit to be able to see console output\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tfunction handle() {\n\t\t\t\t\tvar hidden, result;\n\t\t\t\t\tif ( validator.settings.submitHandler ) {\n\t\t\t\t\t\tif ( validator.submitButton ) {\n\t\t\t\t\t\t\t// insert a hidden input as a replacement for the missing submit button\n\t\t\t\t\t\t\thidden = $( \"<input type='hidden'/>\" )\n\t\t\t\t\t\t\t\t.attr( \"name\", validator.submitButton.name )\n\t\t\t\t\t\t\t\t.val( $( validator.submitButton ).val() )\n\t\t\t\t\t\t\t\t.appendTo( validator.currentForm );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = validator.settings.submitHandler.call( validator, validator.currentForm, event );\n\t\t\t\t\t\tif ( validator.submitButton ) {\n\t\t\t\t\t\t\t// and clean up afterwards; thanks to no-block-scope, hidden can be referenced\n\t\t\t\t\t\t\thidden.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( result !== undefined ) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// prevent submit for invalid forms or custom submit handlers\n\t\t\t\tif ( validator.cancelSubmit ) {\n\t\t\t\t\tvalidator.cancelSubmit = false;\n\t\t\t\t\treturn handle();\n\t\t\t\t}\n\t\t\t\tif ( validator.form() ) {\n\t\t\t\t\tif ( validator.pendingRequest ) {\n\t\t\t\t\t\tvalidator.formSubmitted = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn handle();\n\t\t\t\t} else {\n\t\t\t\t\tvalidator.focusInvalid();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn validator;\n\t},\n\t// http://jqueryvalidation.org/valid/\n\tvalid: function() {\n\t\tvar valid, validator, errorList;\n\n\t\tif ( $( this[ 0 ] ).is( \"form\" ) ) {\n\t\t\tvalid = this.validate().form();\n\t\t} else {\n\t\t\terrorList = [];\n\t\t\tvalid = true;\n\t\t\tvalidator = $( this[ 0 ].form ).validate();\n\t\t\tthis.each( function() {\n\t\t\t\tvalid = validator.element( this ) && valid;\n\t\t\t\terrorList = errorList.concat( validator.errorList );\n\t\t\t});\n\t\t\tvalidator.errorList = errorList;\n\t\t}\n\t\treturn valid;\n\t},\n\n\t// http://jqueryvalidation.org/rules/\n\trules: function( command, argument ) {\n\t\tvar element = this[ 0 ],\n\t\t\tsettings, staticRules, existingRules, data, param, filtered;\n\n\t\tif ( command ) {\n\t\t\tsettings = $.data( element.form, \"validator\" ).settings;\n\t\t\tstaticRules = settings.rules;\n\t\t\texistingRules = $.validator.staticRules( element );\n\t\t\tswitch ( command ) {\n\t\t\tcase \"add\":\n\t\t\t\t$.extend( existingRules, $.validator.normalizeRule( argument ) );\n\t\t\t\t// remove messages from rules, but allow them to be set separately\n\t\t\t\tdelete existingRules.messages;\n\t\t\t\tstaticRules[ element.name ] = existingRules;\n\t\t\t\tif ( argument.messages ) {\n\t\t\t\t\tsettings.messages[ element.name ] = $.extend( settings.messages[ element.name ], argument.messages );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"remove\":\n\t\t\t\tif ( !argument ) {\n\t\t\t\t\tdelete staticRules[ element.name ];\n\t\t\t\t\treturn existingRules;\n\t\t\t\t}\n\t\t\t\tfiltered = {};\n\t\t\t\t$.each( argument.split( /\\s/ ), function( index, method ) {\n\t\t\t\t\tfiltered[ method ] = existingRules[ method ];\n\t\t\t\t\tdelete existingRules[ method ];\n\t\t\t\t\tif ( method === \"required\" ) {\n\t\t\t\t\t\t$( element ).removeAttr( \"aria-required\" );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn filtered;\n\t\t\t}\n\t\t}\n\n\t\tdata = $.validator.normalizeRules(\n\t\t$.extend(\n\t\t\t{},\n\t\t\t$.validator.classRules( element ),\n\t\t\t$.validator.attributeRules( element ),\n\t\t\t$.validator.dataRules( element ),\n\t\t\t$.validator.staticRules( element )\n\t\t), element );\n\n\t\t// make sure required is at front\n\t\tif ( data.required ) {\n\t\t\tparam = data.required;\n\t\t\tdelete data.required;\n\t\t\tdata = $.extend( { required: param }, data );\n\t\t\t$( element ).attr( \"aria-required\", \"true\" );\n\t\t}\n\n\t\t// make sure remote is at back\n\t\tif ( data.remote ) {\n\t\t\tparam = data.remote;\n\t\t\tdelete data.remote;\n\t\t\tdata = $.extend( data, { remote: param });\n\t\t}\n\n\t\treturn data;\n\t}\n});\n\n// Custom selectors\n$.extend( $.expr[ \":\" ], {\n\t// http://jqueryvalidation.org/blank-selector/\n\tblank: function( a ) {\n\t\treturn !$.trim( \"\" + $( a ).val() );\n\t},\n\t// http://jqueryvalidation.org/filled-selector/\n\tfilled: function( a ) {\n\t\treturn !!$.trim( \"\" + $( a ).val() );\n\t},\n\t// http://jqueryvalidation.org/unchecked-selector/\n\tunchecked: function( a ) {\n\t\treturn !$( a ).prop( \"checked\" );\n\t}\n});\n\n// constructor for validator\n$.validator = function( options, form ) {\n\tthis.settings = $.extend( true, {}, $.validator.defaults, options );\n\tthis.currentForm = form;\n\tthis.init();\n};\n\n// http://jqueryvalidation.org/jQuery.validator.format/\n$.validator.format = function( source, params ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn function() {\n\t\t\tvar args = $.makeArray( arguments );\n\t\t\targs.unshift( source );\n\t\t\treturn $.validator.format.apply( this, args );\n\t\t};\n\t}\n\tif ( arguments.length > 2 && params.constructor !== Array  ) {\n\t\tparams = $.makeArray( arguments ).slice( 1 );\n\t}\n\tif ( params.constructor !== Array ) {\n\t\tparams = [ params ];\n\t}\n\t$.each( params, function( i, n ) {\n\t\tsource = source.replace( new RegExp( \"\\\\{\" + i + \"\\\\}\", \"g\" ), function() {\n\t\t\treturn n;\n\t\t});\n\t});\n\treturn source;\n};\n\n$.extend( $.validator, {\n\n\tdefaults: {\n\t\tmessages: {},\n\t\tgroups: {},\n\t\trules: {},\n\t\terrorClass: \"error\",\n\t\tvalidClass: \"valid\",\n\t\terrorElement: \"label\",\n\t\tfocusCleanup: false,\n\t\tfocusInvalid: true,\n\t\terrorContainer: $( [] ),\n\t\terrorLabelContainer: $( [] ),\n\t\tonsubmit: true,\n\t\tignore: \":hidden\",\n\t\tignoreTitle: false,\n\t\tonfocusin: function( element ) {\n\t\t\tthis.lastActive = element;\n\n\t\t\t// Hide error label and remove error class on focus if enabled\n\t\t\tif ( this.settings.focusCleanup ) {\n\t\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t\tthis.hideThese( this.errorsFor( element ) );\n\t\t\t}\n\t\t},\n\t\tonfocusout: function( element ) {\n\t\t\tif ( !this.checkable( element ) && ( element.name in this.submitted || !this.optional( element ) ) ) {\n\t\t\t\tthis.element( element );\n\t\t\t}\n\t\t},\n\t\tonkeyup: function( element, event ) {\n\t\t\t// Avoid revalidate the field when pressing one of the following keys\n\t\t\t// Shift       => 16\n\t\t\t// Ctrl        => 17\n\t\t\t// Alt         => 18\n\t\t\t// Caps lock   => 20\n\t\t\t// End         => 35\n\t\t\t// Home        => 36\n\t\t\t// Left arrow  => 37\n\t\t\t// Up arrow    => 38\n\t\t\t// Right arrow => 39\n\t\t\t// Down arrow  => 40\n\t\t\t// Insert      => 45\n\t\t\t// Num lock    => 144\n\t\t\t// AltGr key   => 225\n\t\t\tvar excludedKeys = [\n\t\t\t\t16, 17, 18, 20, 35, 36, 37,\n\t\t\t\t38, 39, 40, 45, 144, 225\n\t\t\t];\n\n\t\t\tif ( event.which === 9 && this.elementValue( element ) === \"\" || $.inArray( event.keyCode, excludedKeys ) !== -1 ) {\n\t\t\t\treturn;\n\t\t\t} else if ( element.name in this.submitted || element === this.lastElement ) {\n\t\t\t\tthis.element( element );\n\t\t\t}\n\t\t},\n\t\tonclick: function( element ) {\n\t\t\t// click on selects, radiobuttons and checkboxes\n\t\t\tif ( element.name in this.submitted ) {\n\t\t\t\tthis.element( element );\n\n\t\t\t// or option elements, check parent select in that case\n\t\t\t} else if ( element.parentNode.name in this.submitted ) {\n\t\t\t\tthis.element( element.parentNode );\n\t\t\t}\n\t\t},\n\t\thighlight: function( element, errorClass, validClass ) {\n\t\t\tif ( element.type === \"radio\" ) {\n\t\t\t\tthis.findByName( element.name ).addClass( errorClass ).removeClass( validClass );\n\t\t\t} else {\n\t\t\t\t$( element ).addClass( errorClass ).removeClass( validClass );\n\t\t\t}\n\t\t},\n\t\tunhighlight: function( element, errorClass, validClass ) {\n\t\t\tif ( element.type === \"radio\" ) {\n\t\t\t\tthis.findByName( element.name ).removeClass( errorClass ).addClass( validClass );\n\t\t\t} else {\n\t\t\t\t$( element ).removeClass( errorClass ).addClass( validClass );\n\t\t\t}\n\t\t}\n\t},\n\n\t// http://jqueryvalidation.org/jQuery.validator.setDefaults/\n\tsetDefaults: function( settings ) {\n\t\t$.extend( $.validator.defaults, settings );\n\t},\n\n\tmessages: {\n\t\trequired: \"This field is required.\",\n\t\tremote: \"Please fix this field.\",\n\t\temail: \"Please enter a valid email address.\",\n\t\turl: \"Please enter a valid URL.\",\n\t\tdate: \"Please enter a valid date.\",\n\t\tdateISO: \"Please enter a valid date ( ISO ).\",\n\t\tnumber: \"Please enter a valid number.\",\n\t\tdigits: \"Please enter only digits.\",\n\t\tcreditcard: \"Please enter a valid credit card number.\",\n\t\tequalTo: \"Please enter the same value again.\",\n\t\tmaxlength: $.validator.format( \"Please enter no more than {0} characters.\" ),\n\t\tminlength: $.validator.format( \"Please enter at least {0} characters.\" ),\n\t\trangelength: $.validator.format( \"Please enter a value between {0} and {1} characters long.\" ),\n\t\trange: $.validator.format( \"Please enter a value between {0} and {1}.\" ),\n\t\tmax: $.validator.format( \"Please enter a value less than or equal to {0}.\" ),\n\t\tmin: $.validator.format( \"Please enter a value greater than or equal to {0}.\" )\n\t},\n\n\tautoCreateRanges: false,\n\n\tprototype: {\n\n\t\tinit: function() {\n\t\t\tthis.labelContainer = $( this.settings.errorLabelContainer );\n\t\t\tthis.errorContext = this.labelContainer.length && this.labelContainer || $( this.currentForm );\n\t\t\tthis.containers = $( this.settings.errorContainer ).add( this.settings.errorLabelContainer );\n\t\t\tthis.submitted = {};\n\t\t\tthis.valueCache = {};\n\t\t\tthis.pendingRequest = 0;\n\t\t\tthis.pending = {};\n\t\t\tthis.invalid = {};\n\t\t\tthis.reset();\n\n\t\t\tvar groups = ( this.groups = {} ),\n\t\t\t\trules;\n\t\t\t$.each( this.settings.groups, function( key, value ) {\n\t\t\t\tif ( typeof value === \"string\" ) {\n\t\t\t\t\tvalue = value.split( /\\s/ );\n\t\t\t\t}\n\t\t\t\t$.each( value, function( index, name ) {\n\t\t\t\t\tgroups[ name ] = key;\n\t\t\t\t});\n\t\t\t});\n\t\t\trules = this.settings.rules;\n\t\t\t$.each( rules, function( key, value ) {\n\t\t\t\trules[ key ] = $.validator.normalizeRule( value );\n\t\t\t});\n\n\t\t\tfunction delegate( event ) {\n\t\t\t\tvar validator = $.data( this.form, \"validator\" ),\n\t\t\t\t\teventType = \"on\" + event.type.replace( /^validate/, \"\" ),\n\t\t\t\t\tsettings = validator.settings;\n\t\t\t\tif ( settings[ eventType ] && !$( this ).is( settings.ignore ) ) {\n\t\t\t\t\tsettings[ eventType ].call( validator, this, event );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$( this.currentForm )\n\t\t\t\t.on( \"focusin.validate focusout.validate keyup.validate\",\n\t\t\t\t\t\":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], \" +\n\t\t\t\t\t\"[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], \" +\n\t\t\t\t\t\"[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], \" +\n\t\t\t\t\t\"[type='radio'], [type='checkbox']\", delegate)\n\t\t\t\t// Support: Chrome, oldIE\n\t\t\t\t// \"select\" is provided as event.target when clicking a option\n\t\t\t\t.on(\"click.validate\", \"select, option, [type='radio'], [type='checkbox']\", delegate);\n\n\t\t\tif ( this.settings.invalidHandler ) {\n\t\t\t\t$( this.currentForm ).on( \"invalid-form.validate\", this.settings.invalidHandler );\n\t\t\t}\n\n\t\t\t// Add aria-required to any Static/Data/Class required fields before first validation\n\t\t\t// Screen readers require this attribute to be present before the initial submission http://www.w3.org/TR/WCAG-TECHS/ARIA2.html\n\t\t\t$( this.currentForm ).find( \"[required], [data-rule-required], .required\" ).attr( \"aria-required\", \"true\" );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.form/\n\t\tform: function() {\n\t\t\tthis.checkForm();\n\t\t\t$.extend( this.submitted, this.errorMap );\n\t\t\tthis.invalid = $.extend({}, this.errorMap );\n\t\t\tif ( !this.valid() ) {\n\t\t\t\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ]);\n\t\t\t}\n\t\t\tthis.showErrors();\n\t\t\treturn this.valid();\n\t\t},\n\n\t\tcheckForm: function() {\n\t\t\tthis.prepareForm();\n\t\t\tfor ( var i = 0, elements = ( this.currentElements = this.elements() ); elements[ i ]; i++ ) {\n\t\t\t\tthis.check( elements[ i ] );\n\t\t\t}\n\t\t\treturn this.valid();\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.element/\n\t\telement: function( element ) {\n\t\t\tvar cleanElement = this.clean( element ),\n\t\t\t\tcheckElement = this.validationTargetFor( cleanElement ),\n\t\t\t\tresult = true;\n\n\t\t\tthis.lastElement = checkElement;\n\n\t\t\tif ( checkElement === undefined ) {\n\t\t\t\tdelete this.invalid[ cleanElement.name ];\n\t\t\t} else {\n\t\t\t\tthis.prepareElement( checkElement );\n\t\t\t\tthis.currentElements = $( checkElement );\n\n\t\t\t\tresult = this.check( checkElement ) !== false;\n\t\t\t\tif ( result ) {\n\t\t\t\t\tdelete this.invalid[ checkElement.name ];\n\t\t\t\t} else {\n\t\t\t\t\tthis.invalid[ checkElement.name ] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add aria-invalid status for screen readers\n\t\t\t$( element ).attr( \"aria-invalid\", !result );\n\n\t\t\tif ( !this.numberOfInvalids() ) {\n\t\t\t\t// Hide error containers on last error\n\t\t\t\tthis.toHide = this.toHide.add( this.containers );\n\t\t\t}\n\t\t\tthis.showErrors();\n\t\t\treturn result;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.showErrors/\n\t\tshowErrors: function( errors ) {\n\t\t\tif ( errors ) {\n\t\t\t\t// add items to error list and map\n\t\t\t\t$.extend( this.errorMap, errors );\n\t\t\t\tthis.errorList = [];\n\t\t\t\tfor ( var name in errors ) {\n\t\t\t\t\tthis.errorList.push({\n\t\t\t\t\t\tmessage: errors[ name ],\n\t\t\t\t\t\telement: this.findByName( name )[ 0 ]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// remove items from success list\n\t\t\t\tthis.successList = $.grep( this.successList, function( element ) {\n\t\t\t\t\treturn !( element.name in errors );\n\t\t\t\t});\n\t\t\t}\n\t\t\tif ( this.settings.showErrors ) {\n\t\t\t\tthis.settings.showErrors.call( this, this.errorMap, this.errorList );\n\t\t\t} else {\n\t\t\t\tthis.defaultShowErrors();\n\t\t\t}\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.resetForm/\n\t\tresetForm: function() {\n\t\t\tif ( $.fn.resetForm ) {\n\t\t\t\t$( this.currentForm ).resetForm();\n\t\t\t}\n\t\t\tthis.submitted = {};\n\t\t\tthis.lastElement = null;\n\t\t\tthis.prepareForm();\n\t\t\tthis.hideErrors();\n\t\t\tvar i, elements = this.elements()\n\t\t\t\t.removeData( \"previousValue\" )\n\t\t\t\t.removeAttr( \"aria-invalid\" );\n\n\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\tfor ( i = 0; elements[ i ]; i++ ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, elements[ i ],\n\t\t\t\t\t\tthis.settings.errorClass, \"\" );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telements.removeClass( this.settings.errorClass );\n\t\t\t}\n\t\t},\n\n\t\tnumberOfInvalids: function() {\n\t\t\treturn this.objectLength( this.invalid );\n\t\t},\n\n\t\tobjectLength: function( obj ) {\n\t\t\t/* jshint unused: false */\n\t\t\tvar count = 0,\n\t\t\t\ti;\n\t\t\tfor ( i in obj ) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\thideErrors: function() {\n\t\t\tthis.hideThese( this.toHide );\n\t\t},\n\n\t\thideThese: function( errors ) {\n\t\t\terrors.not( this.containers ).text( \"\" );\n\t\t\tthis.addWrapper( errors ).hide();\n\t\t},\n\n\t\tvalid: function() {\n\t\t\treturn this.size() === 0;\n\t\t},\n\n\t\tsize: function() {\n\t\t\treturn this.errorList.length;\n\t\t},\n\n\t\tfocusInvalid: function() {\n\t\t\tif ( this.settings.focusInvalid ) {\n\t\t\t\ttry {\n\t\t\t\t\t$( this.findLastActive() || this.errorList.length && this.errorList[ 0 ].element || [])\n\t\t\t\t\t.filter( \":visible\" )\n\t\t\t\t\t.focus()\n\t\t\t\t\t// manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find\n\t\t\t\t\t.trigger( \"focusin\" );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// ignore IE throwing errors when focusing hidden elements\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tfindLastActive: function() {\n\t\t\tvar lastActive = this.lastActive;\n\t\t\treturn lastActive && $.grep( this.errorList, function( n ) {\n\t\t\t\treturn n.element.name === lastActive.name;\n\t\t\t}).length === 1 && lastActive;\n\t\t},\n\n\t\telements: function() {\n\t\t\tvar validator = this,\n\t\t\t\trulesCache = {};\n\n\t\t\t// select all valid inputs inside the form (no submit or reset buttons)\n\t\t\treturn $( this.currentForm )\n\t\t\t.find( \"input, select, textarea\" )\n\t\t\t.not( \":submit, :reset, :image, :disabled\" )\n\t\t\t.not( this.settings.ignore )\n\t\t\t.filter( function() {\n\t\t\t\tif ( !this.name && validator.settings.debug && window.console ) {\n\t\t\t\t\tconsole.error( \"%o has no name assigned\", this );\n\t\t\t\t}\n\n\t\t\t\t// select only the first element for each name, and only those with rules specified\n\t\t\t\tif ( this.name in rulesCache || !validator.objectLength( $( this ).rules() ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\trulesCache[ this.name ] = true;\n\t\t\t\treturn true;\n\t\t\t});\n\t\t},\n\n\t\tclean: function( selector ) {\n\t\t\treturn $( selector )[ 0 ];\n\t\t},\n\n\t\terrors: function() {\n\t\t\tvar errorClass = this.settings.errorClass.split( \" \" ).join( \".\" );\n\t\t\treturn $( this.settings.errorElement + \".\" + errorClass, this.errorContext );\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.successList = [];\n\t\t\tthis.errorList = [];\n\t\t\tthis.errorMap = {};\n\t\t\tthis.toShow = $( [] );\n\t\t\tthis.toHide = $( [] );\n\t\t\tthis.currentElements = $( [] );\n\t\t},\n\n\t\tprepareForm: function() {\n\t\t\tthis.reset();\n\t\t\tthis.toHide = this.errors().add( this.containers );\n\t\t},\n\n\t\tprepareElement: function( element ) {\n\t\t\tthis.reset();\n\t\t\tthis.toHide = this.errorsFor( element );\n\t\t},\n\n\t\telementValue: function( element ) {\n\t\t\tvar val,\n\t\t\t\t$element = $( element ),\n\t\t\t\ttype = element.type;\n\n\t\t\tif ( type === \"radio\" || type === \"checkbox\" ) {\n\t\t\t\treturn this.findByName( element.name ).filter(\":checked\").val();\n\t\t\t} else if ( type === \"number\" && typeof element.validity !== \"undefined\" ) {\n\t\t\t\treturn element.validity.badInput ? false : $element.val();\n\t\t\t}\n\n\t\t\tval = $element.val();\n\t\t\tif ( typeof val === \"string\" ) {\n\t\t\t\treturn val.replace(/\\r/g, \"\" );\n\t\t\t}\n\t\t\treturn val;\n\t\t},\n\n\t\tcheck: function( element ) {\n\t\t\telement = this.validationTargetFor( this.clean( element ) );\n\n\t\t\tvar rules = $( element ).rules(),\n\t\t\t\trulesCount = $.map( rules, function( n, i ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}).length,\n\t\t\t\tdependencyMismatch = false,\n\t\t\t\tval = this.elementValue( element ),\n\t\t\t\tresult, method, rule;\n\n\t\t\tfor ( method in rules ) {\n\t\t\t\trule = { method: method, parameters: rules[ method ] };\n\t\t\t\ttry {\n\n\t\t\t\t\tresult = $.validator.methods[ method ].call( this, val, element, rule.parameters );\n\n\t\t\t\t\t// if a method indicates that the field is optional and therefore valid,\n\t\t\t\t\t// don't mark it as valid when there are no other rules\n\t\t\t\t\tif ( result === \"dependency-mismatch\" && rulesCount === 1 ) {\n\t\t\t\t\t\tdependencyMismatch = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdependencyMismatch = false;\n\n\t\t\t\t\tif ( result === \"pending\" ) {\n\t\t\t\t\t\tthis.toHide = this.toHide.not( this.errorsFor( element ) );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !result ) {\n\t\t\t\t\t\tthis.formatAndAdd( element, rule );\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\tif ( this.settings.debug && window.console ) {\n\t\t\t\t\t\tconsole.log( \"Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\", e );\n\t\t\t\t\t}\n\t\t\t\t\tif ( e instanceof TypeError ) {\n\t\t\t\t\t\te.message += \".  Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( dependencyMismatch ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( this.objectLength( rules ) ) {\n\t\t\t\tthis.successList.push( element );\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t// return the custom message for the given element and validation method\n\t\t// specified in the element's HTML5 data attribute\n\t\t// return the generic message if present and no method specific message is present\n\t\tcustomDataMessage: function( element, method ) {\n\t\t\treturn $( element ).data( \"msg\" + method.charAt( 0 ).toUpperCase() +\n\t\t\t\tmethod.substring( 1 ).toLowerCase() ) || $( element ).data( \"msg\" );\n\t\t},\n\n\t\t// return the custom message for the given element name and validation method\n\t\tcustomMessage: function( name, method ) {\n\t\t\tvar m = this.settings.messages[ name ];\n\t\t\treturn m && ( m.constructor === String ? m : m[ method ]);\n\t\t},\n\n\t\t// return the first defined argument, allowing empty strings\n\t\tfindDefined: function() {\n\t\t\tfor ( var i = 0; i < arguments.length; i++) {\n\t\t\t\tif ( arguments[ i ] !== undefined ) {\n\t\t\t\t\treturn arguments[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\n\t\tdefaultMessage: function( element, method ) {\n\t\t\treturn this.findDefined(\n\t\t\t\tthis.customMessage( element.name, method ),\n\t\t\t\tthis.customDataMessage( element, method ),\n\t\t\t\t// title is never undefined, so handle empty string as undefined\n\t\t\t\t!this.settings.ignoreTitle && element.title || undefined,\n\t\t\t\t$.validator.messages[ method ],\n\t\t\t\t\"<strong>Warning: No message defined for \" + element.name + \"</strong>\"\n\t\t\t);\n\t\t},\n\n\t\tformatAndAdd: function( element, rule ) {\n\t\t\tvar message = this.defaultMessage( element, rule.method ),\n\t\t\t\ttheregex = /\\$?\\{(\\d+)\\}/g;\n\t\t\tif ( typeof message === \"function\" ) {\n\t\t\t\tmessage = message.call( this, rule.parameters, element );\n\t\t\t} else if ( theregex.test( message ) ) {\n\t\t\t\tmessage = $.validator.format( message.replace( theregex, \"{$1}\" ), rule.parameters );\n\t\t\t}\n\t\t\tthis.errorList.push({\n\t\t\t\tmessage: message,\n\t\t\t\telement: element,\n\t\t\t\tmethod: rule.method\n\t\t\t});\n\n\t\t\tthis.errorMap[ element.name ] = message;\n\t\t\tthis.submitted[ element.name ] = message;\n\t\t},\n\n\t\taddWrapper: function( toToggle ) {\n\t\t\tif ( this.settings.wrapper ) {\n\t\t\t\ttoToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );\n\t\t\t}\n\t\t\treturn toToggle;\n\t\t},\n\n\t\tdefaultShowErrors: function() {\n\t\t\tvar i, elements, error;\n\t\t\tfor ( i = 0; this.errorList[ i ]; i++ ) {\n\t\t\t\terror = this.errorList[ i ];\n\t\t\t\tif ( this.settings.highlight ) {\n\t\t\t\t\tthis.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t\tthis.showLabel( error.element, error.message );\n\t\t\t}\n\t\t\tif ( this.errorList.length ) {\n\t\t\t\tthis.toShow = this.toShow.add( this.containers );\n\t\t\t}\n\t\t\tif ( this.settings.success ) {\n\t\t\t\tfor ( i = 0; this.successList[ i ]; i++ ) {\n\t\t\t\t\tthis.showLabel( this.successList[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\tfor ( i = 0, elements = this.validElements(); elements[ i ]; i++ ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, elements[ i ], this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.toHide = this.toHide.not( this.toShow );\n\t\t\tthis.hideErrors();\n\t\t\tthis.addWrapper( this.toShow ).show();\n\t\t},\n\n\t\tvalidElements: function() {\n\t\t\treturn this.currentElements.not( this.invalidElements() );\n\t\t},\n\n\t\tinvalidElements: function() {\n\t\t\treturn $( this.errorList ).map(function() {\n\t\t\t\treturn this.element;\n\t\t\t});\n\t\t},\n\n\t\tshowLabel: function( element, message ) {\n\t\t\tvar place, group, errorID,\n\t\t\t\terror = this.errorsFor( element ),\n\t\t\t\telementID = this.idOrName( element ),\n\t\t\t\tdescribedBy = $( element ).attr( \"aria-describedby\" );\n\t\t\tif ( error.length ) {\n\t\t\t\t// refresh error/success class\n\t\t\t\terror.removeClass( this.settings.validClass ).addClass( this.settings.errorClass );\n\t\t\t\t// replace message on existing label\n\t\t\t\terror.html( message );\n\t\t\t} else {\n\t\t\t\t// create error element\n\t\t\t\terror = $( \"<\" + this.settings.errorElement + \">\" )\n\t\t\t\t\t.attr( \"id\", elementID + \"-error\" )\n\t\t\t\t\t.addClass( this.settings.errorClass )\n\t\t\t\t\t.html( message || \"\" );\n\n\t\t\t\t// Maintain reference to the element to be placed into the DOM\n\t\t\t\tplace = error;\n\t\t\t\tif ( this.settings.wrapper ) {\n\t\t\t\t\t// make sure the element is visible, even in IE\n\t\t\t\t\t// actually showing the wrapped element is handled elsewhere\n\t\t\t\t\tplace = error.hide().show().wrap( \"<\" + this.settings.wrapper + \"/>\" ).parent();\n\t\t\t\t}\n\t\t\t\tif ( this.labelContainer.length ) {\n\t\t\t\t\tthis.labelContainer.append( place );\n\t\t\t\t} else if ( this.settings.errorPlacement ) {\n\t\t\t\t\tthis.settings.errorPlacement( place, $( element ) );\n\t\t\t\t} else {\n\t\t\t\t\tplace.insertAfter( element );\n\t\t\t\t}\n\n\t\t\t\t// Link error back to the element\n\t\t\t\tif ( error.is( \"label\" ) ) {\n\t\t\t\t\t// If the error is a label, then associate using 'for'\n\t\t\t\t\terror.attr( \"for\", elementID );\n\t\t\t\t} else if ( error.parents( \"label[for='\" + elementID + \"']\" ).length === 0 ) {\n\t\t\t\t\t// If the element is not a child of an associated label, then it's necessary\n\t\t\t\t\t// to explicitly apply aria-describedby\n\n\t\t\t\t\terrorID = error.attr( \"id\" ).replace( /(:|\\.|\\[|\\]|\\$)/g, \"\\\\$1\");\n\t\t\t\t\t// Respect existing non-error aria-describedby\n\t\t\t\t\tif ( !describedBy ) {\n\t\t\t\t\t\tdescribedBy = errorID;\n\t\t\t\t\t} else if ( !describedBy.match( new RegExp( \"\\\\b\" + errorID + \"\\\\b\" ) ) ) {\n\t\t\t\t\t\t// Add to end of list if not already present\n\t\t\t\t\t\tdescribedBy += \" \" + errorID;\n\t\t\t\t\t}\n\t\t\t\t\t$( element ).attr( \"aria-describedby\", describedBy );\n\n\t\t\t\t\t// If this element is grouped, then assign to all elements in the same group\n\t\t\t\t\tgroup = this.groups[ element.name ];\n\t\t\t\t\tif ( group ) {\n\t\t\t\t\t\t$.each( this.groups, function( name, testgroup ) {\n\t\t\t\t\t\t\tif ( testgroup === group ) {\n\t\t\t\t\t\t\t\t$( \"[name='\" + name + \"']\", this.currentForm )\n\t\t\t\t\t\t\t\t\t.attr( \"aria-describedby\", error.attr( \"id\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( !message && this.settings.success ) {\n\t\t\t\terror.text( \"\" );\n\t\t\t\tif ( typeof this.settings.success === \"string\" ) {\n\t\t\t\t\terror.addClass( this.settings.success );\n\t\t\t\t} else {\n\t\t\t\t\tthis.settings.success( error, element );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.toShow = this.toShow.add( error );\n\t\t},\n\n\t\terrorsFor: function( element ) {\n\t\t\tvar name = this.idOrName( element ),\n\t\t\t\tdescriber = $( element ).attr( \"aria-describedby\" ),\n\t\t\t\tselector = \"label[for='\" + name + \"'], label[for='\" + name + \"'] *\";\n\n\t\t\t// aria-describedby should directly reference the error element\n\t\t\tif ( describer ) {\n\t\t\t\tselector = selector + \", #\" + describer.replace( /\\s+/g, \", #\" );\n\t\t\t}\n\t\t\treturn this\n\t\t\t\t.errors()\n\t\t\t\t.filter( selector );\n\t\t},\n\n\t\tidOrName: function( element ) {\n\t\t\treturn this.groups[ element.name ] || ( this.checkable( element ) ? element.name : element.id || element.name );\n\t\t},\n\n\t\tvalidationTargetFor: function( element ) {\n\n\t\t\t// If radio/checkbox, validate first element in group instead\n\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\telement = this.findByName( element.name );\n\t\t\t}\n\n\t\t\t// Always apply ignore filter\n\t\t\treturn $( element ).not( this.settings.ignore )[ 0 ];\n\t\t},\n\n\t\tcheckable: function( element ) {\n\t\t\treturn ( /radio|checkbox/i ).test( element.type );\n\t\t},\n\n\t\tfindByName: function( name ) {\n\t\t\treturn $( this.currentForm ).find( \"[name='\" + name + \"']\" );\n\t\t},\n\n\t\tgetLength: function( value, element ) {\n\t\t\tswitch ( element.nodeName.toLowerCase() ) {\n\t\t\tcase \"select\":\n\t\t\t\treturn $( \"option:selected\", element ).length;\n\t\t\tcase \"input\":\n\t\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\t\treturn this.findByName( element.name ).filter( \":checked\" ).length;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value.length;\n\t\t},\n\n\t\tdepend: function( param, element ) {\n\t\t\treturn this.dependTypes[typeof param] ? this.dependTypes[typeof param]( param, element ) : true;\n\t\t},\n\n\t\tdependTypes: {\n\t\t\t\"boolean\": function( param ) {\n\t\t\t\treturn param;\n\t\t\t},\n\t\t\t\"string\": function( param, element ) {\n\t\t\t\treturn !!$( param, element.form ).length;\n\t\t\t},\n\t\t\t\"function\": function( param, element ) {\n\t\t\t\treturn param( element );\n\t\t\t}\n\t\t},\n\n\t\toptional: function( element ) {\n\t\t\tvar val = this.elementValue( element );\n\t\t\treturn !$.validator.methods.required.call( this, val, element ) && \"dependency-mismatch\";\n\t\t},\n\n\t\tstartRequest: function( element ) {\n\t\t\tif ( !this.pending[ element.name ] ) {\n\t\t\t\tthis.pendingRequest++;\n\t\t\t\tthis.pending[ element.name ] = true;\n\t\t\t}\n\t\t},\n\n\t\tstopRequest: function( element, valid ) {\n\t\t\tthis.pendingRequest--;\n\t\t\t// sometimes synchronization fails, make sure pendingRequest is never < 0\n\t\t\tif ( this.pendingRequest < 0 ) {\n\t\t\t\tthis.pendingRequest = 0;\n\t\t\t}\n\t\t\tdelete this.pending[ element.name ];\n\t\t\tif ( valid && this.pendingRequest === 0 && this.formSubmitted && this.form() ) {\n\t\t\t\t$( this.currentForm ).submit();\n\t\t\t\tthis.formSubmitted = false;\n\t\t\t} else if (!valid && this.pendingRequest === 0 && this.formSubmitted ) {\n\t\t\t\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ]);\n\t\t\t\tthis.formSubmitted = false;\n\t\t\t}\n\t\t},\n\n\t\tpreviousValue: function( element ) {\n\t\t\treturn $.data( element, \"previousValue\" ) || $.data( element, \"previousValue\", {\n\t\t\t\told: null,\n\t\t\t\tvalid: true,\n\t\t\t\tmessage: this.defaultMessage( element, \"remote\" )\n\t\t\t});\n\t\t},\n\n\t\t// cleans up all forms and elements, removes validator-specific events\n\t\tdestroy: function() {\n\t\t\tthis.resetForm();\n\n\t\t\t$( this.currentForm )\n\t\t\t\t.off( \".validate\" )\n\t\t\t\t.removeData( \"validator\" );\n\t\t}\n\n\t},\n\n\tclassRuleSettings: {\n\t\trequired: { required: true },\n\t\temail: { email: true },\n\t\turl: { url: true },\n\t\tdate: { date: true },\n\t\tdateISO: { dateISO: true },\n\t\tnumber: { number: true },\n\t\tdigits: { digits: true },\n\t\tcreditcard: { creditcard: true }\n\t},\n\n\taddClassRules: function( className, rules ) {\n\t\tif ( className.constructor === String ) {\n\t\t\tthis.classRuleSettings[ className ] = rules;\n\t\t} else {\n\t\t\t$.extend( this.classRuleSettings, className );\n\t\t}\n\t},\n\n\tclassRules: function( element ) {\n\t\tvar rules = {},\n\t\t\tclasses = $( element ).attr( \"class\" );\n\n\t\tif ( classes ) {\n\t\t\t$.each( classes.split( \" \" ), function() {\n\t\t\t\tif ( this in $.validator.classRuleSettings ) {\n\t\t\t\t\t$.extend( rules, $.validator.classRuleSettings[ this ]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn rules;\n\t},\n\n\tnormalizeAttributeRule: function( rules, type, method, value ) {\n\n\t\t// convert the value to a number for number inputs, and for text for backwards compability\n\t\t// allows type=\"date\" and others to be compared as strings\n\t\tif ( /min|max/.test( method ) && ( type === null || /number|range|text/.test( type ) ) ) {\n\t\t\tvalue = Number( value );\n\n\t\t\t// Support Opera Mini, which returns NaN for undefined minlength\n\t\t\tif ( isNaN( value ) ) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\t\t}\n\n\t\tif ( value || value === 0 ) {\n\t\t\trules[ method ] = value;\n\t\t} else if ( type === method && type !== \"range\" ) {\n\n\t\t\t// exception: the jquery validate 'range' method\n\t\t\t// does not test for the html5 'range' type\n\t\t\trules[ method ] = true;\n\t\t}\n\t},\n\n\tattributeRules: function( element ) {\n\t\tvar rules = {},\n\t\t\t$element = $( element ),\n\t\t\ttype = element.getAttribute( \"type\" ),\n\t\t\tmethod, value;\n\n\t\tfor ( method in $.validator.methods ) {\n\n\t\t\t// support for <input required> in both html5 and older browsers\n\t\t\tif ( method === \"required\" ) {\n\t\t\t\tvalue = element.getAttribute( method );\n\n\t\t\t\t// Some browsers return an empty string for the required attribute\n\t\t\t\t// and non-HTML5 browsers might have required=\"\" markup\n\t\t\t\tif ( value === \"\" ) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t}\n\n\t\t\t\t// force non-HTML5 browsers to return bool\n\t\t\t\tvalue = !!value;\n\t\t\t} else {\n\t\t\t\tvalue = $element.attr( method );\n\t\t\t}\n\n\t\t\tthis.normalizeAttributeRule( rules, type, method, value );\n\t\t}\n\n\t\t// maxlength may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs\n\t\tif ( rules.maxlength && /-1|2147483647|524288/.test( rules.maxlength ) ) {\n\t\t\tdelete rules.maxlength;\n\t\t}\n\n\t\treturn rules;\n\t},\n\n\tdataRules: function( element ) {\n\t\tvar rules = {},\n\t\t\t$element = $( element ),\n\t\t\ttype = element.getAttribute( \"type\" ),\n\t\t\tmethod, value;\n\n\t\tfor ( method in $.validator.methods ) {\n\t\t\tvalue = $element.data( \"rule\" + method.charAt( 0 ).toUpperCase() + method.substring( 1 ).toLowerCase() );\n\t\t\tthis.normalizeAttributeRule( rules, type, method, value );\n\t\t}\n\t\treturn rules;\n\t},\n\n\tstaticRules: function( element ) {\n\t\tvar rules = {},\n\t\t\tvalidator = $.data( element.form, \"validator\" );\n\n\t\tif ( validator.settings.rules ) {\n\t\t\trules = $.validator.normalizeRule( validator.settings.rules[ element.name ] ) || {};\n\t\t}\n\t\treturn rules;\n\t},\n\n\tnormalizeRules: function( rules, element ) {\n\t\t// handle dependency check\n\t\t$.each( rules, function( prop, val ) {\n\t\t\t// ignore rule when param is explicitly false, eg. required:false\n\t\t\tif ( val === false ) {\n\t\t\t\tdelete rules[ prop ];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( val.param || val.depends ) {\n\t\t\t\tvar keepRule = true;\n\t\t\t\tswitch ( typeof val.depends ) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\tkeepRule = !!$( val.depends, element.form ).length;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\tkeepRule = val.depends.call( element, element );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( keepRule ) {\n\t\t\t\t\trules[ prop ] = val.param !== undefined ? val.param : true;\n\t\t\t\t} else {\n\t\t\t\t\tdelete rules[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// evaluate parameters\n\t\t$.each( rules, function( rule, parameter ) {\n\t\t\trules[ rule ] = $.isFunction( parameter ) ? parameter( element ) : parameter;\n\t\t});\n\n\t\t// clean number parameters\n\t\t$.each([ \"minlength\", \"maxlength\" ], function() {\n\t\t\tif ( rules[ this ] ) {\n\t\t\t\trules[ this ] = Number( rules[ this ] );\n\t\t\t}\n\t\t});\n\t\t$.each([ \"rangelength\", \"range\" ], function() {\n\t\t\tvar parts;\n\t\t\tif ( rules[ this ] ) {\n\t\t\t\tif ( $.isArray( rules[ this ] ) ) {\n\t\t\t\t\trules[ this ] = [ Number( rules[ this ][ 0 ]), Number( rules[ this ][ 1 ] ) ];\n\t\t\t\t} else if ( typeof rules[ this ] === \"string\" ) {\n\t\t\t\t\tparts = rules[ this ].replace(/[\\[\\]]/g, \"\" ).split( /[\\s,]+/ );\n\t\t\t\t\trules[ this ] = [ Number( parts[ 0 ]), Number( parts[ 1 ] ) ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif ( $.validator.autoCreateRanges ) {\n\t\t\t// auto-create ranges\n\t\t\tif ( rules.min != null && rules.max != null ) {\n\t\t\t\trules.range = [ rules.min, rules.max ];\n\t\t\t\tdelete rules.min;\n\t\t\t\tdelete rules.max;\n\t\t\t}\n\t\t\tif ( rules.minlength != null && rules.maxlength != null ) {\n\t\t\t\trules.rangelength = [ rules.minlength, rules.maxlength ];\n\t\t\t\tdelete rules.minlength;\n\t\t\t\tdelete rules.maxlength;\n\t\t\t}\n\t\t}\n\n\t\treturn rules;\n\t},\n\n\t// Converts a simple string to a {string: true} rule, e.g., \"required\" to {required:true}\n\tnormalizeRule: function( data ) {\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tvar transformed = {};\n\t\t\t$.each( data.split( /\\s/ ), function() {\n\t\t\t\ttransformed[ this ] = true;\n\t\t\t});\n\t\t\tdata = transformed;\n\t\t}\n\t\treturn data;\n\t},\n\n\t// http://jqueryvalidation.org/jQuery.validator.addMethod/\n\taddMethod: function( name, method, message ) {\n\t\t$.validator.methods[ name ] = method;\n\t\t$.validator.messages[ name ] = message !== undefined ? message : $.validator.messages[ name ];\n\t\tif ( method.length < 3 ) {\n\t\t\t$.validator.addClassRules( name, $.validator.normalizeRule( name ) );\n\t\t}\n\t},\n\n\tmethods: {\n\n\t\t// http://jqueryvalidation.org/required-method/\n\t\trequired: function( value, element, param ) {\n\t\t\t// check if dependency is met\n\t\t\tif ( !this.depend( param, element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\t\t\tif ( element.nodeName.toLowerCase() === \"select\" ) {\n\t\t\t\t// could be an array for select-multiple or a string, both are fine this way\n\t\t\t\tvar val = $( element ).val();\n\t\t\t\treturn val && val.length > 0;\n\t\t\t}\n\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\treturn this.getLength( value, element ) > 0;\n\t\t\t}\n\t\t\treturn value.length > 0;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/email-method/\n\t\temail: function( value, element ) {\n\t\t\t// From https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\n\t\t\t// Retrieved 2014-01-14\n\t\t\t// If you have a problem with this implementation, report a bug against the above spec\n\t\t\t// Or use custom methods to implement your own email validation\n\t\t\treturn this.optional( element ) || /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/url-method/\n\t\turl: function( value, element ) {\n\n\t\t\t// Copyright (c) 2010-2013 Diego Perini, MIT licensed\n\t\t\t// https://gist.github.com/dperini/729294\n\t\t\t// see also https://mathiasbynens.be/demo/url-regex\n\t\t\t// modified to allow protocol-relative URLs\n\t\t\treturn this.optional( element ) || /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/date-method/\n\t\tdate: function( value, element ) {\n\t\t\treturn this.optional( element ) || !/Invalid|NaN/.test( new Date( value ).toString() );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/dateISO-method/\n\t\tdateISO: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/number-method/\n\t\tnumber: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/digits-method/\n\t\tdigits: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^\\d+$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/creditcard-method/\n\t\t// based on http://en.wikipedia.org/wiki/Luhn_algorithm\n\t\tcreditcard: function( value, element ) {\n\t\t\tif ( this.optional( element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\t\t\t// accept only spaces, digits and dashes\n\t\t\tif ( /[^0-9 \\-]+/.test( value ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar nCheck = 0,\n\t\t\t\tnDigit = 0,\n\t\t\t\tbEven = false,\n\t\t\t\tn, cDigit;\n\n\t\t\tvalue = value.replace( /\\D/g, \"\" );\n\n\t\t\t// Basing min and max length on\n\t\t\t// http://developer.ean.com/general_info/Valid_Credit_Card_Types\n\t\t\tif ( value.length < 13 || value.length > 19 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor ( n = value.length - 1; n >= 0; n--) {\n\t\t\t\tcDigit = value.charAt( n );\n\t\t\t\tnDigit = parseInt( cDigit, 10 );\n\t\t\t\tif ( bEven ) {\n\t\t\t\t\tif ( ( nDigit *= 2 ) > 9 ) {\n\t\t\t\t\t\tnDigit -= 9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCheck += nDigit;\n\t\t\t\tbEven = !bEven;\n\t\t\t}\n\n\t\t\treturn ( nCheck % 10 ) === 0;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/minlength-method/\n\t\tminlength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || length >= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/maxlength-method/\n\t\tmaxlength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || length <= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/rangelength-method/\n\t\trangelength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || ( length >= param[ 0 ] && length <= param[ 1 ] );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/min-method/\n\t\tmin: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || value >= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/max-method/\n\t\tmax: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || value <= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/range-method/\n\t\trange: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || ( value >= param[ 0 ] && value <= param[ 1 ] );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/equalTo-method/\n\t\tequalTo: function( value, element, param ) {\n\t\t\t// bind to the blur event of the target in order to revalidate whenever the target field is updated\n\t\t\t// TODO find a way to bind the event just once, avoiding the unbind-rebind overhead\n\t\t\tvar target = $( param );\n\t\t\tif ( this.settings.onfocusout ) {\n\t\t\t\ttarget.off( \".validate-equalTo\" ).on( \"blur.validate-equalTo\", function() {\n\t\t\t\t\t$( element ).valid();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn value === target.val();\n\t\t},\n\n\t\t// http://jqueryvalidation.org/remote-method/\n\t\tremote: function( value, element, param ) {\n\t\t\tif ( this.optional( element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\n\t\t\tvar previous = this.previousValue( element ),\n\t\t\t\tvalidator, data;\n\n\t\t\tif (!this.settings.messages[ element.name ] ) {\n\t\t\t\tthis.settings.messages[ element.name ] = {};\n\t\t\t}\n\t\t\tprevious.originalMessage = this.settings.messages[ element.name ].remote;\n\t\t\tthis.settings.messages[ element.name ].remote = previous.message;\n\n\t\t\tparam = typeof param === \"string\" && { url: param } || param;\n\n\t\t\tif ( previous.old === value ) {\n\t\t\t\treturn previous.valid;\n\t\t\t}\n\n\t\t\tprevious.old = value;\n\t\t\tvalidator = this;\n\t\t\tthis.startRequest( element );\n\t\t\tdata = {};\n\t\t\tdata[ element.name ] = value;\n\t\t\t$.ajax( $.extend( true, {\n\t\t\t\tmode: \"abort\",\n\t\t\t\tport: \"validate\" + element.name,\n\t\t\t\tdataType: \"json\",\n\t\t\t\tdata: data,\n\t\t\t\tcontext: validator.currentForm,\n\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\tvar valid = response === true || response === \"true\",\n\t\t\t\t\t\terrors, message, submitted;\n\n\t\t\t\t\tvalidator.settings.messages[ element.name ].remote = previous.originalMessage;\n\t\t\t\t\tif ( valid ) {\n\t\t\t\t\t\tsubmitted = validator.formSubmitted;\n\t\t\t\t\t\tvalidator.prepareElement( element );\n\t\t\t\t\t\tvalidator.formSubmitted = submitted;\n\t\t\t\t\t\tvalidator.successList.push( element );\n\t\t\t\t\t\tdelete validator.invalid[ element.name ];\n\t\t\t\t\t\tvalidator.showErrors();\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors = {};\n\t\t\t\t\t\tmessage = response || validator.defaultMessage( element, \"remote\" );\n\t\t\t\t\t\terrors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message;\n\t\t\t\t\t\tvalidator.invalid[ element.name ] = true;\n\t\t\t\t\t\tvalidator.showErrors( errors );\n\t\t\t\t\t}\n\t\t\t\t\tprevious.valid = valid;\n\t\t\t\t\tvalidator.stopRequest( element, valid );\n\t\t\t\t}\n\t\t\t}, param ) );\n\t\t\treturn \"pending\";\n\t\t}\n\t}\n\n});\n\n// ajax mode: abort\n// usage: $.ajax({ mode: \"abort\"[, port: \"uniqueport\"]});\n// if mode:\"abort\" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()\n\nvar pendingRequests = {},\n\tajax;\n// Use a prefilter if available (1.5+)\nif ( $.ajaxPrefilter ) {\n\t$.ajaxPrefilter(function( settings, _, xhr ) {\n\t\tvar port = settings.port;\n\t\tif ( settings.mode === \"abort\" ) {\n\t\t\tif ( pendingRequests[port] ) {\n\t\t\t\tpendingRequests[port].abort();\n\t\t\t}\n\t\t\tpendingRequests[port] = xhr;\n\t\t}\n\t});\n} else {\n\t// Proxy ajax\n\tajax = $.ajax;\n\t$.ajax = function( settings ) {\n\t\tvar mode = ( \"mode\" in settings ? settings : $.ajaxSettings ).mode,\n\t\t\tport = ( \"port\" in settings ? settings : $.ajaxSettings ).port;\n\t\tif ( mode === \"abort\" ) {\n\t\t\tif ( pendingRequests[port] ) {\n\t\t\t\tpendingRequests[port].abort();\n\t\t\t}\n\t\t\tpendingRequests[port] = ajax.apply(this, arguments);\n\t\t\treturn pendingRequests[port];\n\t\t}\n\t\treturn ajax.apply(this, arguments);\n\t};\n}\n\n}));","function strlen (string) {\n  //  discuss at: http://phpjs.org/functions/strlen/\n  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: Sakimori\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //    input by: Kirk Strobeck\n  // bugfixed by: Onno Marsman\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //        note: May look like overkill, but in order to be truly faithful to handling all Unicode\n  //        note: characters and to this function in PHP which does not count the number of bytes\n  //        note: but counts the number of characters, something like this is really necessary.\n  //   example 1: strlen('Kevin van Zonneveld');\n  //   returns 1: 19\n  //   example 2: ini_set('unicode.semantics', 'on');\n  //   example 2: strlen('A\\ud87e\\udc04Z');\n  //   returns 2: 3\n\n  var str = string + ''\n  var i = 0,\n    chr = '',\n    lgth = 0\n\n  if (!this.php_js || !this.php_js.ini || !this.php_js.ini['unicode.semantics'] || this.php_js.ini[\n      'unicode.semantics'].local_value.toLowerCase() !== 'on') {\n    return string.length\n  }\n\n  var getWholeChar = function (str, i) {\n    var code = str.charCodeAt(i)\n    var next = '',\n      prev = ''\n    if (0xD800 <= code && code <= 0xDBFF) {\n      // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single characters)\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate'\n      }\n      next = str.charCodeAt(i + 1)\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate'\n      }\n      return str.charAt(i) + str.charAt(i + 1)\n    } else if (0xDC00 <= code && code <= 0xDFFF) {\n      // Low surrogate\n      if (i === 0) {\n        throw 'Low surrogate without preceding high surrogate'\n      }\n      prev = str.charCodeAt(i - 1)\n      if (0xD800 > prev || prev > 0xDBFF) {\n        // (could change last hex to 0xDB7F to treat high private surrogates as single characters)\n        throw 'Low surrogate without preceding high surrogate'\n      }\n      // We can pass over low surrogates now as the second component in a pair which we have already processed\n      return false\n    }\n    return str.charAt(i)\n  }\n\n  for (i = 0, lgth = 0; i < str.length; i++) {\n    if ((chr = getWholeChar(str, i)) === false) {\n      continue\n    } // Adapt this line at the top of any loop, passing in the whole string and the current iteration and returning a variable to represent the individual character; purpose is to treat the first part of a surrogate pair as the whole character and then ignore the second part\n    lgth++\n  }\n  return lgth\n}\n","function array_diff (arr1) {\n  //  discuss at: http://phpjs.org/functions/array_diff/\n  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: Sanjoy Roy\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_diff(['Kevin', 'van', 'Zonneveld'], ['van', 'Zonneveld']);\n  //   returns 1: {0:'Kevin'}\n\n  var retArr = {},\n    argl = arguments.length,\n    k1 = '',\n    i = 1,\n    k = '',\n    arr = {}\n\n  arr1keys: for (k1 in arr1) {\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1]) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","function strtotime (text, now) {\n  //  discuss at: http://phpjs.org/functions/strtotime/\n  //     version: 1109.2016\n  // original by: Caio Ariede (http://caioariede.com)\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: Caio Ariede (http://caioariede.com)\n  // improved by: A. Matías Quezada (http://amatiasq.com)\n  // improved by: preuter\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Mirko Faber\n  //    input by: David\n  // bugfixed by: Wagner B. Soares\n  // bugfixed by: Artur Tchernychev\n  // bugfixed by: Stephan Bösch-Plepelits (http://github.com/plepe)\n  //        note: Examples all have a fixed timestamp to prevent tests to fail because of variable time(zones)\n  //   example 1: strtotime('+1 day', 1129633200);\n  //   returns 1: 1129719600\n  //   example 2: strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200);\n  //   returns 2: 1130425202\n  //   example 3: strtotime('last month', 1129633200);\n  //   returns 3: 1127041200\n  //   example 4: strtotime('2009-05-04 08:30:00 GMT');\n  //   returns 4: 1241425800\n  //   example 5: strtotime('2009-05-04 08:30:00+00');\n  //   returns 5: 1241425800\n  //   example 6: strtotime('2009-05-04 08:30:00+02:00');\n  //   returns 6: 1241418600\n  //   example 7: strtotime('2009-05-04T08:30:00Z');\n  //   returns 7: 1241425800\n\n  var parsed, match, today, year, date, days, ranges, len, times, regex, i, fail = false\n\n  if (!text) {\n    return fail\n  }\n\n  // Unecessary spaces\n  text = text.replace(/^\\s+|\\s+$/g, '')\n    .replace(/\\s{2,}/g, ' ')\n    .replace(/[\\t\\r\\n]/g, '')\n    .toLowerCase()\n\n  // in contrast to php, js Date.parse function interprets:\n  // dates given as yyyy-mm-dd as in timezone: UTC,\n  // dates with \".\" or \"-\" as MDY instead of DMY\n  // dates with two-digit years differently\n  // etc...etc...\n  // ...therefore we manually parse lots of common date formats\n  match = text.match(\n    /^(\\d{1,4})([\\-\\.\\/\\:])(\\d{1,2})([\\-\\.\\/\\:])(\\d{1,4})(?:\\s(\\d{1,2}):(\\d{2})?:?(\\d{2})?)?(?:\\s([A-Z]+)?)?$/)\n\n  if (match && match[2] === match[4]) {\n    if (match[1] > 1901) {\n      switch (match[2]) {\n        case '-':\n          {\n          // YYYY-M-D\n            if (match[3] > 12 || match[5] > 31) {\n              return fail\n            }\n\n            return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n        case '.':\n          {\n          // YYYY.M.D is not parsed by strtotime()\n            return fail\n          }\n        case '/':\n          {\n          // YYYY/M/D\n            if (match[3] > 12 || match[5] > 31) {\n              return fail\n            }\n\n            return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n      }\n    } else if (match[5] > 1901) {\n      switch (match[2]) {\n        case '-':\n          {\n          // D-M-YYYY\n            if (match[3] > 12 || match[1] > 31) {\n              return fail\n            }\n\n            return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n        case '.':\n          {\n          // D.M.YYYY\n            if (match[3] > 12 || match[1] > 31) {\n              return fail\n            }\n\n            return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n        case '/':\n          {\n          // M/D/YYYY\n            if (match[1] > 12 || match[3] > 31) {\n              return fail\n            }\n\n            return new Date(match[5], parseInt(match[1], 10) - 1, match[3],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n      }\n    } else {\n      switch (match[2]) {\n        case '-':\n          {\n          // YY-M-D\n            if (match[3] > 12 || match[5] > 31 || (match[1] < 70 && match[1] > 38)) {\n              return fail\n            }\n\n            year = match[1] >= 0 && match[1] <= 38 ? +match[1] + 2000 : match[1]\n            return new Date(year, parseInt(match[3], 10) - 1, match[5],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n        case '.':\n          {\n          // D.M.YY or H.MM.SS\n            if (match[5] >= 70) {\n            // D.M.YY\n              if (match[3] > 12 || match[1] > 31) {\n                return fail\n              }\n\n              return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n              match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n            }\n            if (match[5] < 60 && !match[6]) {\n            // H.MM.SS\n              if (match[1] > 23 || match[3] > 59) {\n                return fail\n              }\n\n              today = new Date()\n              return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n              match[1] || 0, match[3] || 0, match[5] || 0, match[9] || 0) / 1000\n            }\n\n          // invalid format, cannot be parsed\n            return fail\n          }\n        case '/':\n          {\n          // M/D/YY\n            if (match[1] > 12 || match[3] > 31 || (match[5] < 70 && match[5] > 38)) {\n              return fail\n            }\n\n            year = match[5] >= 0 && match[5] <= 38 ? +match[5] + 2000 : match[5]\n            return new Date(year, parseInt(match[1], 10) - 1, match[3],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n        case ':':\n          {\n          // HH:MM:SS\n            if (match[1] > 23 || match[3] > 59 || match[5] > 59) {\n              return fail\n            }\n\n            today = new Date()\n            return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n            match[1] || 0, match[3] || 0, match[5] || 0) / 1000\n          }\n      }\n    }\n  }\n\n  // other formats and \"now\" should be parsed by Date.parse()\n  if (text === 'now') {\n    return now === null || isNaN(now) ? new Date()\n      .getTime() / 1000 | 0 : now | 0\n  }\n  if (!isNaN(parsed = Date.parse(text))) {\n    return parsed / 1000 | 0\n  }\n  // Browsers != Chrome have problems parsing ISO 8601 date strings, as they do\n  // not accept lower case characters, space, or shortened time zones.\n  // Therefore, fix these problems and try again.\n  // Examples:\n  //   2015-04-15 20:33:59+02\n  //   2015-04-15 20:33:59z\n  //   2015-04-15t20:33:59+02:00\n  if (match = text.match(\n      /^([0-9]{4}-[0-9]{2}-[0-9]{2})[ t]([0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?)([\\+-][0-9]{2}(:[0-9]{2})?|z)/)) {\n    // fix time zone information\n    if (match[4] == 'z') {\n      match[4] = 'Z'\n    } else if (match[4].match(/^([\\+-][0-9]{2})$/)) {\n      match[4] = match[4] + ':00'\n    }\n\n    if (!isNaN(parsed = Date.parse(match[1] + 'T' + match[2] + match[4]))) {\n      return parsed / 1000 | 0\n    }\n  }\n\n  date = now ? new Date(now * 1000) : new Date()\n  days = {\n    'sun': 0,\n    'mon': 1,\n    'tue': 2,\n    'wed': 3,\n    'thu': 4,\n    'fri': 5,\n    'sat': 6\n  }\n  ranges = {\n    'yea': 'FullYear',\n    'mon': 'Month',\n    'day': 'Date',\n    'hou': 'Hours',\n    'min': 'Minutes',\n    'sec': 'Seconds'\n  }\n\n  function lastNext (type, range, modifier) {\n    var diff, day = days[range]\n\n    if (typeof day !== 'undefined') {\n      diff = day - date.getDay()\n\n      if (diff === 0) {\n        diff = 7 * modifier\n      } else if (diff > 0 && type === 'last') {\n        diff -= 7\n      } else if (diff < 0 && type === 'next') {\n        diff += 7\n      }\n\n      date.setDate(date.getDate() + diff)\n    }\n  }\n\n  function process (val) {\n    var splt = val.split(' '), // Todo: Reconcile this with regex using \\s, taking into account browser issues with split and regexes\n      type = splt[0],\n      range = splt[1].substring(0, 3),\n      typeIsNumber = /\\d+/.test(type),\n      ago = splt[2] === 'ago',\n      num = (type === 'last' ? -1 : 1) * (ago ? -1 : 1)\n\n    if (typeIsNumber) {\n      num *= parseInt(type, 10)\n    }\n\n    if (ranges.hasOwnProperty(range) && !splt[1].match(/^mon(day|\\.)?$/i)) {\n      return date['set' + ranges[range]](date['get' + ranges[range]]() + num)\n    }\n\n    if (range === 'wee') {\n      return date.setDate(date.getDate() + (num * 7))\n    }\n\n    if (type === 'next' || type === 'last') {\n      lastNext(type, range, num)\n    } else if (!typeIsNumber) {\n      return false\n    }\n\n    return true\n  }\n\n  times = '(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec' +\n    '|sunday|sun\\\\.?|monday|mon\\\\.?|tuesday|tue\\\\.?|wednesday|wed\\\\.?' +\n    '|thursday|thu\\\\.?|friday|fri\\\\.?|saturday|sat\\\\.?)'\n  regex = '([+-]?\\\\d+\\\\s' + times + '|' + '(last|next)\\\\s' + times + ')(\\\\sago)?'\n\n  match = text.match(new RegExp(regex, 'gi'))\n  if (!match) {\n    return fail\n  }\n\n  for (i = 0, len = match.length; i < len; i++) {\n    if (!process(match[i])) {\n      return fail\n    }\n  }\n\n  // ECMAScript 5 only\n  // if (!match.every(process))\n  //    return false;\n\n  return (date.getTime() / 1000)\n}\n","function is_numeric (mixed_var) {\n  //  discuss at: http://phpjs.org/functions/is_numeric/\n  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // improved by: David\n  // improved by: taith\n  // bugfixed by: Tim de Koning\n  // bugfixed by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Denis Chenu (http://shnoulle.net)\n  //   example 1: is_numeric(186.31);\n  //   returns 1: true\n  //   example 2: is_numeric('Kevin van Zonneveld');\n  //   returns 2: false\n  //   example 3: is_numeric(' +186.31e2');\n  //   returns 3: true\n  //   example 4: is_numeric('');\n  //   returns 4: false\n  //   example 5: is_numeric([]);\n  //   returns 5: false\n  //   example 6: is_numeric('1 ');\n  //   returns 6: false\n\n  var whitespace =\n    ' \\n\\r\\t\\f\\x0b\\xa0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000'\n  return (typeof mixed_var === 'number' || (typeof mixed_var === 'string' && whitespace.indexOf(mixed_var.slice(-1)) ===\n    -1)) && mixed_var !== '' && !isNaN(mixed_var)\n}\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2017\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * This library is a standalone javascript library and does not depend on other libraries or plugins like jQuery.\n * \n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\nvar DateFormatter;\n(function () {\n    \"use strict\";\n\n    var _compare, _lpad, _extend, _indexOf, defaultSettings, DAY, HOUR;\n    DAY = 1000 * 60 * 60 * 24;\n    HOUR = 3600;\n\n    _compare = function (str1, str2) {\n        return typeof(str1) === 'string' && typeof(str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n    };\n    _lpad = function (value, length, chr) {\n        var val = value.toString();\n        chr = chr || '0';\n        return val.length < length ? _lpad(chr + val, length) : val;\n    };\n    _extend = function (out) {\n        var i, obj;\n        out = out || {};\n        for (i = 1; i < arguments.length; i++) {\n            obj = arguments[i];\n            if (!obj) {\n                continue;\n            }\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    if (typeof obj[key] === 'object') {\n                        _extend(out[key], obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n                }\n            }\n        }\n        return out;\n    };\n    _indexOf = function (val, arr) {\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i].toLowerCase() === val.toLowerCase()) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    defaultSettings = {\n        dateSettings: {\n            days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            months: [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July',\n                'August', 'September', 'October', 'November', 'December'\n            ],\n            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            meridiem: ['AM', 'PM'],\n            ordinal: function (number) {\n                var n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n                return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n            }\n        },\n        separators: /[ \\-+\\/\\.T:@]/g,\n        validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n        intParts: /[djwNzmnyYhHgGis]/g,\n        tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n        tzClip: /[^-+\\dA-Z]/g\n    };\n\n    DateFormatter = function (options) {\n        var self = this, config = _extend(defaultSettings, options);\n        self.dateSettings = config.dateSettings;\n        self.separators = config.separators;\n        self.validParts = config.validParts;\n        self.intParts = config.intParts;\n        self.tzParts = config.tzParts;\n        self.tzClip = config.tzClip;\n    };\n\n    DateFormatter.prototype = {\n        constructor: DateFormatter,\n        getMonth: function (val) {\n            var self = this, i;\n            i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n            if (i === 0) {\n                i = _indexOf(val, self.dateSettings.months) + 1;\n            }\n            return i;\n        },\n        parseDate: function (vDate, vFormat) {\n            var self = this, vFormatParts, vDateParts, i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n                vSettings = self.dateSettings, vMonth, vMeriIndex, vMeriOffset, len, mer,\n                out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0};\n            if (!vDate) {\n                return null;\n            }\n            if (vDate instanceof Date) {\n                return vDate;\n            }\n            if (vFormat === 'U') {\n                i = parseInt(vDate);\n                return i ? new Date(i * 1000) : vDate;\n            }\n            switch (typeof vDate) {\n                case 'number':\n                    return new Date(vDate);\n                case 'string':\n                    break;\n                default:\n                    return null;\n            }\n            vFormatParts = vFormat.match(self.validParts);\n            if (!vFormatParts || vFormatParts.length === 0) {\n                throw new Error(\"Invalid date format definition.\");\n            }\n            vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n            for (i = 0; i < vDateParts.length; i++) {\n                vDatePart = vDateParts[i];\n                iDatePart = parseInt(vDatePart);\n                switch (vFormatParts[i]) {\n                    case 'y':\n                    case 'Y':\n                        if (iDatePart) {\n                            len = vDatePart.length;\n                            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n                        } else {\n                            return null;\n                        }\n                        vDateFlag = true;\n                        break;\n                    case 'm':\n                    case 'n':\n                    case 'M':\n                    case 'F':\n                        if (isNaN(iDatePart)) {\n                            vMonth = self.getMonth(vDatePart);\n                            if (vMonth > 0) {\n                                out.month = vMonth;\n                            } else {\n                                return null;\n                            }\n                        } else {\n                            if (iDatePart >= 1 && iDatePart <= 12) {\n                                out.month = iDatePart;\n                            } else {\n                                return null;\n                            }\n                        }\n                        vDateFlag = true;\n                        break;\n                    case 'd':\n                    case 'j':\n                        if (iDatePart >= 1 && iDatePart <= 31) {\n                            out.day = iDatePart;\n                        } else {\n                            return null;\n                        }\n                        vDateFlag = true;\n                        break;\n                    case 'g':\n                    case 'h':\n                        vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n                            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n                        mer = vDateParts[vMeriIndex];\n                        if (vMeriIndex !== -1) {\n                            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n                                (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n                            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset !== -1) {\n                                out.hour = iDatePart % 12 === 0 ? vMeriOffset : iDatePart + vMeriOffset;\n                            } else {\n                                if (iDatePart >= 0 && iDatePart <= 23) {\n                                    out.hour = iDatePart;\n                                }\n                            }\n                        } else {\n                            if (iDatePart >= 0 && iDatePart <= 23) {\n                                out.hour = iDatePart;\n                            } else {\n                                return null;\n                            }\n                        }\n                        vTimeFlag = true;\n                        break;\n                    case 'G':\n                    case 'H':\n                        if (iDatePart >= 0 && iDatePart <= 23) {\n                            out.hour = iDatePart;\n                        } else {\n                            return null;\n                        }\n                        vTimeFlag = true;\n                        break;\n                    case 'i':\n                        if (iDatePart >= 0 && iDatePart <= 59) {\n                            out.min = iDatePart;\n                        } else {\n                            return null;\n                        }\n                        vTimeFlag = true;\n                        break;\n                    case 's':\n                        if (iDatePart >= 0 && iDatePart <= 59) {\n                            out.sec = iDatePart;\n                        } else {\n                            return null;\n                        }\n                        vTimeFlag = true;\n                        break;\n                }\n            }\n            if (vDateFlag === true && out.year && out.month && out.day) {\n                out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n            } else {\n                if (vTimeFlag !== true) {\n                    return null;\n                }\n                out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n            }\n            return out.date;\n        },\n        guessDate: function (vDateStr, vFormat) {\n            if (typeof vDateStr !== 'string') {\n                return vDateStr;\n            }\n            var self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, len,\n                vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0, vYear, i, n, iPart, iSec;\n\n            if (!vPattern.test(vFormatParts[0])) {\n                return vDateStr;\n            }\n\n            for (i = 0; i < vParts.length; i++) {\n                vDigit = 2;\n                iPart = vParts[i];\n                iSec = parseInt(iPart.substr(0, 2));\n                if (isNaN(iSec)) {\n                    return null;\n                }\n                switch (i) {\n                    case 0:\n                        if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n                            vDate.setMonth(iSec - 1);\n                        } else {\n                            vDate.setDate(iSec);\n                        }\n                        break;\n                    case 1:\n                        if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n                            vDate.setDate(iSec);\n                        } else {\n                            vDate.setMonth(iSec - 1);\n                        }\n                        break;\n                    case 2:\n                        vYear = vDate.getFullYear();\n                        len = iPart.length;\n                        vDigit = len < 4 ? len : 4;\n                        vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n                        if (!vYear) {\n                            return null;\n                        }\n                        vDate.setFullYear(vYear);\n                        break;\n                    case 3:\n                        vDate.setHours(iSec);\n                        break;\n                    case 4:\n                        vDate.setMinutes(iSec);\n                        break;\n                    case 5:\n                        vDate.setSeconds(iSec);\n                        break;\n                }\n                n = iPart.substr(vDigit);\n                if (n.length > 0) {\n                    vParts.splice(i + 1, 0, n);\n                }\n            }\n            return vDate;\n        },\n        parseFormat: function (vChar, vDate) {\n            var self = this, vSettings = self.dateSettings, fmt, backslash = /\\\\?(.?)/gi, doFormat = function (t, s) {\n                return fmt[t] ? fmt[t]() : s;\n            };\n            fmt = {\n                /////////\n                // DAY //\n                /////////\n                /**\n                 * Day of month with leading 0: `01..31`\n                 * @return {string}\n                 */\n                d: function () {\n                    return _lpad(fmt.j(), 2);\n                },\n                /**\n                 * Shorthand day name: `Mon...Sun`\n                 * @return {string}\n                 */\n                D: function () {\n                    return vSettings.daysShort[fmt.w()];\n                },\n                /**\n                 * Day of month: `1..31`\n                 * @return {number}\n                 */\n                j: function () {\n                    return vDate.getDate();\n                },\n                /**\n                 * Full day name: `Monday...Sunday`\n                 * @return {number}\n                 */\n                l: function () {\n                    return vSettings.days[fmt.w()];\n                },\n                /**\n                 * ISO-8601 day of week: `1[Mon]..7[Sun]`\n                 * @return {number}\n                 */\n                N: function () {\n                    return fmt.w() || 7;\n                },\n                /**\n                 * Day of week: `0[Sun]..6[Sat]`\n                 * @return {number}\n                 */\n                w: function () {\n                    return vDate.getDay();\n                },\n                /**\n                 * Day of year: `0..365`\n                 * @return {number}\n                 */\n                z: function () {\n                    var a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n                    return Math.round((a - b) / DAY);\n                },\n\n                //////////\n                // WEEK //\n                //////////\n                /**\n                 * ISO-8601 week number\n                 * @return {number}\n                 */\n                W: function () {\n                    var a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n                    return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n                },\n\n                ///////////\n                // MONTH //\n                ///////////\n                /**\n                 * Full month name: `January...December`\n                 * @return {string}\n                 */\n                F: function () {\n                    return vSettings.months[vDate.getMonth()];\n                },\n                /**\n                 * Month w/leading 0: `01..12`\n                 * @return {string}\n                 */\n                m: function () {\n                    return _lpad(fmt.n(), 2);\n                },\n                /**\n                 * Shorthand month name; `Jan...Dec`\n                 * @return {string}\n                 */\n                M: function () {\n                    return vSettings.monthsShort[vDate.getMonth()];\n                },\n                /**\n                 * Month: `1...12`\n                 * @return {number}\n                 */\n                n: function () {\n                    return vDate.getMonth() + 1;\n                },\n                /**\n                 * Days in month: `28...31`\n                 * @return {number}\n                 */\n                t: function () {\n                    return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n                },\n\n                //////////\n                // YEAR //\n                //////////\n                /**\n                 * Is leap year? `0 or 1`\n                 * @return {number}\n                 */\n                L: function () {\n                    var Y = fmt.Y();\n                    return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n                },\n                /**\n                 * ISO-8601 year\n                 * @return {number}\n                 */\n                o: function () {\n                    var n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n                    return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n                },\n                /**\n                 * Full year: `e.g. 1980...2010`\n                 * @return {number}\n                 */\n                Y: function () {\n                    return vDate.getFullYear();\n                },\n                /**\n                 * Last two digits of year: `00...99`\n                 * @return {string}\n                 */\n                y: function () {\n                    return fmt.Y().toString().slice(-2);\n                },\n\n                //////////\n                // TIME //\n                //////////\n                /**\n                 * Meridian lower: `am or pm`\n                 * @return {string}\n                 */\n                a: function () {\n                    return fmt.A().toLowerCase();\n                },\n                /**\n                 * Meridian upper: `AM or PM`\n                 * @return {string}\n                 */\n                A: function () {\n                    var n = fmt.G() < 12 ? 0 : 1;\n                    return vSettings.meridiem[n];\n                },\n                /**\n                 * Swatch Internet time: `000..999`\n                 * @return {string}\n                 */\n                B: function () {\n                    var H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n                    return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n                },\n                /**\n                 * 12-Hours: `1..12`\n                 * @return {number}\n                 */\n                g: function () {\n                    return fmt.G() % 12 || 12;\n                },\n                /**\n                 * 24-Hours: `0..23`\n                 * @return {number}\n                 */\n                G: function () {\n                    return vDate.getHours();\n                },\n                /**\n                 * 12-Hours with leading 0: `01..12`\n                 * @return {string}\n                 */\n                h: function () {\n                    return _lpad(fmt.g(), 2);\n                },\n                /**\n                 * 24-Hours w/leading 0: `00..23`\n                 * @return {string}\n                 */\n                H: function () {\n                    return _lpad(fmt.G(), 2);\n                },\n                /**\n                 * Minutes w/leading 0: `00..59`\n                 * @return {string}\n                 */\n                i: function () {\n                    return _lpad(vDate.getMinutes(), 2);\n                },\n                /**\n                 * Seconds w/leading 0: `00..59`\n                 * @return {string}\n                 */\n                s: function () {\n                    return _lpad(vDate.getSeconds(), 2);\n                },\n                /**\n                 * Microseconds: `000000-999000`\n                 * @return {string}\n                 */\n                u: function () {\n                    return _lpad(vDate.getMilliseconds() * 1000, 6);\n                },\n\n                //////////////\n                // TIMEZONE //\n                //////////////\n                /**\n                 * Timezone identifier: `e.g. Atlantic/Azores, ...`\n                 * @return {string}\n                 */\n                e: function () {\n                    var str = /\\((.*)\\)/.exec(String(vDate))[1];\n                    return str || 'Coordinated Universal Time';\n                },\n                /**\n                 * DST observed? `0 or 1`\n                 * @return {number}\n                 */\n                I: function () {\n                    var a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n                        b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n                    return ((a - c) !== (b - d)) ? 1 : 0;\n                },\n                /**\n                 * Difference to GMT in hour format: `e.g. +0200`\n                 * @return {string}\n                 */\n                O: function () {\n                    var tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n                    return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n                },\n                /**\n                 * Difference to GMT with colon: `e.g. +02:00`\n                 * @return {string}\n                 */\n                P: function () {\n                    var O = fmt.O();\n                    return (O.substr(0, 3) + ':' + O.substr(3, 2));\n                },\n                /**\n                 * Timezone abbreviation: `e.g. EST, MDT, ...`\n                 * @return {string}\n                 */\n                T: function () {\n                    var str = (String(vDate).match(self.tzParts) || [\"\"]).pop().replace(self.tzClip, \"\");\n                    return str || 'UTC';\n                },\n                /**\n                 * Timezone offset in seconds: `-43200...50400`\n                 * @return {number}\n                 */\n                Z: function () {\n                    return -vDate.getTimezoneOffset() * 60;\n                },\n\n                ////////////////////\n                // FULL DATE TIME //\n                ////////////////////\n                /**\n                 * ISO-8601 date\n                 * @return {string}\n                 */\n                c: function () {\n                    return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n                },\n                /**\n                 * RFC 2822 date\n                 * @return {string}\n                 */\n                r: function () {\n                    return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n                },\n                /**\n                 * Seconds since UNIX epoch\n                 * @return {number}\n                 */\n                U: function () {\n                    return vDate.getTime() / 1000 || 0;\n                }\n            };\n            return doFormat(vChar, vChar);\n        },\n        formatDate: function (vDate, vFormat) {\n            var self = this, i, n, len, str, vChar, vDateStr = '', BACKSLASH = '\\\\';\n            if (typeof vDate === 'string') {\n                vDate = self.parseDate(vDate, vFormat);\n                if (!vDate) {\n                    return null;\n                }\n            }\n            if (vDate instanceof Date) {\n                len = vFormat.length;\n                for (i = 0; i < len; i++) {\n                    vChar = vFormat.charAt(i);\n                    if (vChar === 'S' || vChar === BACKSLASH) {\n                        continue;\n                    }\n                    if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n                        vDateStr += vChar;\n                        continue;\n                    }\n                    str = self.parseFormat(vChar, vDate);\n                    if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n                        n = parseInt(str) || 0;\n                        str += self.dateSettings.ordinal(n);\n                    }\n                    vDateStr += str;\n                }\n                return vDateStr;\n            }\n            return '';\n        }\n    };\n})();","/*!\n * Laravel Javascript Validation\n *\n * https://github.com/proengsoft/laravel-jsvalidation\n *\n * Copyright (c) 2017 Proengsoft\n * Released under the MIT license\n */\n\nvar laravelValidation;\nlaravelValidation = {\n\n    implicitRules: ['Required','Confirmed'],\n\n    /**\n     * Initialize laravel validations.\n     */\n    init: function () {\n\n        // Disable class rules and attribute rules\n        $.validator.classRuleSettings = {};\n        $.validator.attributeRules = function () {\n            this.rules = {}\n        };\n\n        $.validator.dataRules = this.arrayRules;\n        $.validator.prototype.arrayRulesCache = {};\n        // Register validations methods\n        this.setupValidations();\n    },\n\n    arrayRules: function(element) {\n\n        var rules = {},\n            validator = $.data( element.form, \"validator\"),\n            cache = validator.arrayRulesCache;\n\n        // Is not an Array\n        if (element.name.indexOf('[') === -1 ) {\n            return rules;\n        }\n\n        if (! (element.name in cache) ) {\n            cache[element.name]={};\n        }\n\n        $.each(validator.settings.rules, function(name, tmpRules){\n            if (name in cache[element.name]) {\n                $.extend(rules, cache[element.name][name]);\n            } else {\n                cache[element.name][name]={};\n                var nameRegExp = laravelValidation.helpers.regexFromWildcard(name);\n                if (element.name.match(nameRegExp)) {\n                    var newRules = $.validator.normalizeRule( tmpRules ) || {};\n                    cache[element.name][name]=newRules;\n                    $.extend(rules, newRules);\n                }\n            }\n        });\n\n        return rules;\n    },\n\n    setupValidations: function () {\n\n        /**\n         * Create JQueryValidation check to validate Laravel rules.\n         */\n\n        $.validator.addMethod(\"laravelValidation\", function (value, element, params) {\n            var validator = this;\n            var validated = true;\n            var previous = this.previousValue( element );\n\n            // put Implicit rules in front\n            var rules=[];\n            $.each(params, function (i, param) {\n                if (param[3] || laravelValidation.implicitRules.indexOf(param[0])!== -1) {\n                    rules.unshift(param);\n                } else {\n                    rules.push(param);\n                }\n            });\n\n            $.each(rules, function (i, param) {\n                var implicit = param[3] || laravelValidation.implicitRules.indexOf(param[0])!== -1;\n                var rule = param[0];\n                var message = param[2];\n\n                if ( !implicit && validator.optional( element ) ) {\n                    validated=\"dependency-mismatch\";\n                    return false;\n                }\n\n                if (laravelValidation.methods[rule]!==undefined) {\n                    validated = laravelValidation.methods[rule].call(validator, value, element, param[1], function(valid) {\n                        validator.settings.messages[ element.name ].laravelValidationRemote = previous.originalMessage;\n                        if ( valid ) {\n                            var submitted = validator.formSubmitted;\n                            validator.prepareElement( element );\n                            validator.formSubmitted = submitted;\n                            validator.successList.push( element );\n                            delete validator.invalid[ element.name ];\n                            validator.showErrors();\n                        } else {\n                            var errors = {};\n                            errors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message;\n                            validator.invalid[ element.name ] = true;\n                            validator.showErrors( errors );\n                        }\n                        validator.showErrors(validator.errorMap);\n                        previous.valid = valid;\n                    });\n                } else {\n                    validated=false;\n                }\n\n                if (validated !== true) {\n                    if (!validator.settings.messages[ element.name ] ) {\n                        validator.settings.messages[ element.name ] = {};\n                    }\n                    validator.settings.messages[element.name].laravelValidation= message;\n                    return false;\n                }\n\n            });\n            return validated;\n\n        }, '');\n\n\n        /**\n         * Create JQueryValidation check to validate Remote Laravel rules.\n         */\n        $.validator.addMethod(\"laravelValidationRemote\", function (value, element, params) {\n\n            var implicit = false,\n                check = params[0][1],\n                attribute = element.name,\n                token = check[1],\n                validateAll = check[2];\n\n            $.each(params, function (i, parameters) {\n                implicit = implicit || parameters[3];\n            });\n\n\n            if ( !implicit && this.optional( element ) ) {\n                return \"dependency-mismatch\";\n            }\n\n            var previous = this.previousValue( element ),\n                validator, data;\n\n            if (!this.settings.messages[ element.name ] ) {\n                this.settings.messages[ element.name ] = {};\n            }\n            previous.originalMessage = this.settings.messages[ element.name ].laravelValidationRemote;\n            this.settings.messages[ element.name ].laravelValidationRemote = previous.message;\n\n            var param = typeof param === \"string\" && { url: param } || param;\n\n            if ( previous.old === value ) {\n                return previous.valid;\n            }\n\n            previous.old = value;\n            validator = this;\n            this.startRequest( element );\n\n            data = $(validator.currentForm).serializeArray();\n\n            data.push({\n                'name': '_jsvalidation',\n                'value': attribute\n            });\n\n            data.push({\n                'name': '_jsvalidation_validate_all',\n                'value': validateAll\n            });\n\n            var formMethod = $(validator.currentForm).attr('method');\n            if($(validator.currentForm).find('input[name=\"_method\"]').length) {\n                formMethod = $(validator.currentForm).find('input[name=\"_method\"]').val();\n            }\n\n            $.ajax( $.extend( true, {\n                mode: \"abort\",\n                port: \"validate\" + element.name,\n                dataType: \"json\",\n                data: data,\n                context: validator.currentForm,\n                url: $(validator.currentForm).attr('action'),\n                type: formMethod,\n\n                beforeSend: function (xhr) {\n                    if ($(validator.currentForm).attr('method').toLowerCase() !== 'get' && token) {\n                        return xhr.setRequestHeader('X-XSRF-TOKEN', token);\n                    }\n                }\n            }, param )\n            ).always(function( response, textStatus ) {\n                    var errors, message, submitted, valid;\n\n                    if (textStatus === 'error') {\n                        valid = false;\n                        response = laravelValidation.helpers.parseErrorResponse(response);\n                    } else if (textStatus === 'success') {\n                        valid = response === true || response === \"true\";\n                    } else {\n                        return;\n                    }\n\n                    validator.settings.messages[ element.name ].laravelValidationRemote = previous.originalMessage;\n\n                    if ( valid ) {\n                        submitted = validator.formSubmitted;\n                        validator.prepareElement( element );\n                        validator.formSubmitted = submitted;\n                        validator.successList.push( element );\n                        delete validator.invalid[ element.name ];\n                        validator.showErrors();\n                    } else {\n                        errors = {};\n                        message = response || validator.defaultMessage( element, \"remote\" );\n                        errors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message[0];\n                        validator.invalid[ element.name ] = true;\n                        validator.showErrors( errors );\n                    }\n                    validator.showErrors(validator.errorMap);\n                    previous.valid = valid;\n                    validator.stopRequest( element, valid );\n                }\n            );\n            return \"pending\";\n        }, '');\n    }\n};\n\n$(function() {\n    laravelValidation.init();\n});\n","/*!\n * Laravel Javascript Validation\n *\n * https://github.com/proengsoft/laravel-jsvalidation\n *\n * Helper functions used by validators\n *\n * Copyright (c) 2017 Proengsoft\n * Released under the MIT license\n */\n\n$.extend(true, laravelValidation, {\n\n    helpers: {\n\n        /**\n         * Numeric rules\n         */\n        numericRules: ['Integer', 'Numeric'],\n\n        /**\n         * Gets the file information from file input.\n         *\n         * @param fieldObj\n         * @param index\n         * @returns {{file: *, extension: string, size: number}}\n         */\n        fileinfo: function (fieldObj, index) {\n            var FileName = fieldObj.value;\n            index = typeof index !== 'undefined' ? index : 0;\n            if ( fieldObj.files !== null ) {\n                if (typeof fieldObj.files[index] !== 'undefined') {\n                    return {\n                        file: FileName,\n                        extension: FileName.substr(FileName.lastIndexOf('.') + 1),\n                        size: fieldObj.files[index].size / 1024,\n                        type: fieldObj.files[index].type\n                    };\n                }\n            }\n            return false;\n        },\n\n\n        /**\n         * Gets the selectors for th specified field names.\n         *\n         * @param names\n         * @returns {string}\n         */\n        selector: function (names) {\n            var selector = [];\n            if (!$.isArray(names))  {\n                names = [names];\n            }\n            for (var i = 0; i < names.length; i++) {\n                selector.push(\"[name='\" + names[i] + \"']\");\n            }\n            return selector.join();\n        },\n\n\n        /**\n         * Check if element has numeric rules.\n         *\n         * @param element\n         * @returns {boolean}\n         */\n        hasNumericRules: function (element) {\n            return this.hasRules(element, this.numericRules);\n        },\n\n        /**\n         * Check if element has passed rules.\n         *\n         * @param element\n         * @param rules\n         * @returns {boolean}\n         */\n        hasRules: function (element, rules) {\n\n            var found = false;\n            if (typeof rules === 'string') {\n                rules = [rules];\n            }\n\n            var validator = $.data(element.form, \"validator\");\n            var listRules = [];\n            var cache = validator.arrayRulesCache;\n            if (element.name in cache) {\n                $.each(cache[element.name], function (index, arrayRule) {\n                    listRules.push(arrayRule);\n                });\n            }\n            if (element.name in validator.settings.rules) {\n                listRules.push(validator.settings.rules[element.name]);\n            }\n            $.each(listRules, function(index,objRules){\n                if ('laravelValidation' in objRules) {\n                    var _rules=objRules.laravelValidation;\n                    for (var i = 0; i < _rules.length; i++) {\n                        if ($.inArray(_rules[i][0],rules) !== -1) {\n                            found = true;\n                            return false;\n                        }\n                    }\n                }\n            });\n\n            return found;\n        },\n\n        /**\n         * Return the string length using PHP function.\n         * http://php.net/manual/en/function.strlen.php\n         * http://phpjs.org/functions/strlen/\n         *\n         * @param string\n         */\n        strlen: function (string) {\n            return strlen(string);\n        },\n\n        /**\n         * Get the size of the object depending of his type.\n         *\n         * @param obj\n         * @param element\n         * @param value\n         * @returns int\n         */\n        getSize: function getSize(obj, element, value) {\n\n            if (this.hasNumericRules(element) && this.is_numeric(value)) {\n                return parseFloat(value);\n            } else if ($.isArray(value)) {\n                return parseFloat(value.length);\n            } else if (element.type === 'file') {\n                return parseFloat(Math.floor(this.fileinfo(element).size));\n            }\n\n            return parseFloat(this.strlen(value));\n        },\n\n\n        /**\n         * Return specified rule from element.\n         *\n         * @param rule\n         * @param element\n         * @returns object\n         */\n        getLaravelValidation: function(rule, element) {\n\n            var found = undefined;\n            $.each($.validator.staticRules(element), function(key, rules) {\n                if (key===\"laravelValidation\") {\n                    $.each(rules, function (i, value) {\n                        if (value[0]===rule) {\n                            found=value;\n                        }\n                    });\n                }\n            });\n\n            return found;\n        },\n\n        /**\n         * Return he timestamp of value passed using format or default format in element.\n         *\n         * @param value\n         * @param format\n         * @returns {boolean|int}\n         */\n        parseTime: function (value, format) {\n\n            var timeValue = false;\n            var fmt = new DateFormatter();\n\n            if ($.type(format) === 'object') {\n                var dateRule=this.getLaravelValidation('DateFormat', format);\n                if (dateRule !== undefined) {\n                    format = dateRule[1][0];\n                } else {\n                    format = null;\n                }\n            }\n\n            if (format == null) {\n                timeValue = this.strtotime(value);\n            } else {\n                timeValue = fmt.parseDate(value, format);\n                if (timeValue) {\n                    timeValue = Math.round((timeValue.getTime() / 1000));\n                }\n            }\n\n            return timeValue;\n        },\n\n        /**\n         * This method allows you to intelligently guess the date by closely matching the specific format.\n         *\n         * @param value\n         * @param format\n         * @returns {Date}\n         */\n        guessDate: function (value, format) {\n            var fmt = new DateFormatter();\n            return fmt.guessDate(value, format)\n        },\n\n        /**\n         * Returns Unix timestamp based on PHP function strototime.\n         * http://php.net/manual/es/function.strtotime.php\n         * http://phpjs.org/functions/strtotime/\n         *\n         * @param text\n         * @param now\n         * @returns {*}\n         */\n        strtotime: function (text, now) {\n            return strtotime(text, now)\n        },\n\n        /**\n         * Returns if value is numeric.\n         * http://php.net/manual/es/var.is_numeric.php\n         * http://phpjs.org/functions/is_numeric/\n         *\n         * @param mixed_var\n         * @returns {*}\n         */\n        is_numeric: function (mixed_var) {\n            return is_numeric(mixed_var)\n        },\n\n        /**\n         * Returns Array diff based on PHP function array_diff.\n         * http://php.net/manual/es/function.array_diff.php\n         * http://phpjs.org/functions/array_diff/\n         *\n         * @param arr1\n         * @param arr2\n         * @returns {*}\n         */\n        arrayDiff: function (arr1, arr2) {\n            return array_diff(arr1, arr2);\n        },\n\n        /**\n         * Makes element dependant from other.\n         *\n         * @param validator\n         * @param element\n         * @param name\n         * @returns {*}\n         */\n        dependentElement: function(validator, element, name) {\n\n            var el=validator.findByName(name);\n\n            if ( el[0]!==undefined  && validator.settings.onfocusout ) {\n                var event = 'blur';\n                if (el[0].tagName === 'SELECT' ||\n                    el[0].tagName === 'OPTION' ||\n                    el[0].type === 'checkbox' ||\n                    el[0].type === 'radio'\n                ) {\n                    event = 'click';\n                }\n\n                var ruleName = '.validate-laravelValidation';\n                el.off( ruleName )\n                    .off(event + ruleName + '-' + element.name)\n                    .on( event + ruleName + '-' + element.name, function() {\n                        $( element ).valid();\n                    });\n            }\n\n            return el[0];\n        },\n\n        /**\n         * Parses error Ajax response and gets the message.\n         *\n         * @param response\n         * @returns {string[]}\n         */\n        parseErrorResponse: function (response) {\n            var newResponse = ['Whoops, looks like something went wrong.'];\n            if ('responseText' in response) {\n                var errorMsg = response.responseText.match(/<h1\\s*>(.*)<\\/h1\\s*>/i);\n                if ($.isArray(errorMsg)) {\n                    newResponse = [errorMsg[1]];\n                }\n            }\n            return newResponse;\n        },\n\n        /**\n         * Escape string to use as Regular Expression.\n         *\n         * @param str\n         * @returns string\n         */\n        escapeRegExp: function (str) {\n            return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n        },\n\n        /**\n         * Generate RegExp from wildcard attributes.\n         *\n         * @param name\n         * @returns {RegExp}\n         */\n        regexFromWildcard: function(name) {\n            var nameParts = name.split(\"[*]\");\n            if (nameParts.length === 1) {\n                nameParts.push('');\n            }\n            var regexpParts = nameParts.map(function(currentValue, index) {\n                if (index % 2 === 0) {\n                    currentValue = currentValue + '[';\n                } else {\n                    currentValue = ']' +currentValue;\n                }\n\n                return laravelValidation.helpers.escapeRegExp(currentValue);\n            });\n\n            return new RegExp('^'+regexpParts.join('.*')+'$');\n        }\n    }\n});\n","/*!\n * Laravel Javascript Validation\n *\n * https://github.com/proengsoft/laravel-jsvalidation\n *\n * Timezone Helper functions used by validators\n *\n * Copyright (c) 2017 Proengsoft\n * Released under the MIT license\n */\n\n$.extend(true, laravelValidation, {\n\n    helpers: {\n\n        /**\n         * Check if the specified timezone is valid.\n         *\n         * @param value\n         * @returns {boolean}\n         */\n        isTimezone: function (value) {\n\n            var timezones={\n                \"africa\": [\n                    \"abidjan\",\n                    \"accra\",\n                    \"addis_ababa\",\n                    \"algiers\",\n                    \"asmara\",\n                    \"bamako\",\n                    \"bangui\",\n                    \"banjul\",\n                    \"bissau\",\n                    \"blantyre\",\n                    \"brazzaville\",\n                    \"bujumbura\",\n                    \"cairo\",\n                    \"casablanca\",\n                    \"ceuta\",\n                    \"conakry\",\n                    \"dakar\",\n                    \"dar_es_salaam\",\n                    \"djibouti\",\n                    \"douala\",\n                    \"el_aaiun\",\n                    \"freetown\",\n                    \"gaborone\",\n                    \"harare\",\n                    \"johannesburg\",\n                    \"juba\",\n                    \"kampala\",\n                    \"khartoum\",\n                    \"kigali\",\n                    \"kinshasa\",\n                    \"lagos\",\n                    \"libreville\",\n                    \"lome\",\n                    \"luanda\",\n                    \"lubumbashi\",\n                    \"lusaka\",\n                    \"malabo\",\n                    \"maputo\",\n                    \"maseru\",\n                    \"mbabane\",\n                    \"mogadishu\",\n                    \"monrovia\",\n                    \"nairobi\",\n                    \"ndjamena\",\n                    \"niamey\",\n                    \"nouakchott\",\n                    \"ouagadougou\",\n                    \"porto-novo\",\n                    \"sao_tome\",\n                    \"tripoli\",\n                    \"tunis\",\n                    \"windhoek\"\n                ],\n                \"america\": [\n                    \"adak\",\n                    \"anchorage\",\n                    \"anguilla\",\n                    \"antigua\",\n                    \"araguaina\",\n                    \"argentina\\/buenos_aires\",\n                    \"argentina\\/catamarca\",\n                    \"argentina\\/cordoba\",\n                    \"argentina\\/jujuy\",\n                    \"argentina\\/la_rioja\",\n                    \"argentina\\/mendoza\",\n                    \"argentina\\/rio_gallegos\",\n                    \"argentina\\/salta\",\n                    \"argentina\\/san_juan\",\n                    \"argentina\\/san_luis\",\n                    \"argentina\\/tucuman\",\n                    \"argentina\\/ushuaia\",\n                    \"aruba\",\n                    \"asuncion\",\n                    \"atikokan\",\n                    \"bahia\",\n                    \"bahia_banderas\",\n                    \"barbados\",\n                    \"belem\",\n                    \"belize\",\n                    \"blanc-sablon\",\n                    \"boa_vista\",\n                    \"bogota\",\n                    \"boise\",\n                    \"cambridge_bay\",\n                    \"campo_grande\",\n                    \"cancun\",\n                    \"caracas\",\n                    \"cayenne\",\n                    \"cayman\",\n                    \"chicago\",\n                    \"chihuahua\",\n                    \"costa_rica\",\n                    \"creston\",\n                    \"cuiaba\",\n                    \"curacao\",\n                    \"danmarkshavn\",\n                    \"dawson\",\n                    \"dawson_creek\",\n                    \"denver\",\n                    \"detroit\",\n                    \"dominica\",\n                    \"edmonton\",\n                    \"eirunepe\",\n                    \"el_salvador\",\n                    \"fortaleza\",\n                    \"glace_bay\",\n                    \"godthab\",\n                    \"goose_bay\",\n                    \"grand_turk\",\n                    \"grenada\",\n                    \"guadeloupe\",\n                    \"guatemala\",\n                    \"guayaquil\",\n                    \"guyana\",\n                    \"halifax\",\n                    \"havana\",\n                    \"hermosillo\",\n                    \"indiana\\/indianapolis\",\n                    \"indiana\\/knox\",\n                    \"indiana\\/marengo\",\n                    \"indiana\\/petersburg\",\n                    \"indiana\\/tell_city\",\n                    \"indiana\\/vevay\",\n                    \"indiana\\/vincennes\",\n                    \"indiana\\/winamac\",\n                    \"inuvik\",\n                    \"iqaluit\",\n                    \"jamaica\",\n                    \"juneau\",\n                    \"kentucky\\/louisville\",\n                    \"kentucky\\/monticello\",\n                    \"kralendijk\",\n                    \"la_paz\",\n                    \"lima\",\n                    \"los_angeles\",\n                    \"lower_princes\",\n                    \"maceio\",\n                    \"managua\",\n                    \"manaus\",\n                    \"marigot\",\n                    \"martinique\",\n                    \"matamoros\",\n                    \"mazatlan\",\n                    \"menominee\",\n                    \"merida\",\n                    \"metlakatla\",\n                    \"mexico_city\",\n                    \"miquelon\",\n                    \"moncton\",\n                    \"monterrey\",\n                    \"montevideo\",\n                    \"montreal\",\n                    \"montserrat\",\n                    \"nassau\",\n                    \"new_york\",\n                    \"nipigon\",\n                    \"nome\",\n                    \"noronha\",\n                    \"north_dakota\\/beulah\",\n                    \"north_dakota\\/center\",\n                    \"north_dakota\\/new_salem\",\n                    \"ojinaga\",\n                    \"panama\",\n                    \"pangnirtung\",\n                    \"paramaribo\",\n                    \"phoenix\",\n                    \"port-au-prince\",\n                    \"port_of_spain\",\n                    \"porto_velho\",\n                    \"puerto_rico\",\n                    \"rainy_river\",\n                    \"rankin_inlet\",\n                    \"recife\",\n                    \"regina\",\n                    \"resolute\",\n                    \"rio_branco\",\n                    \"santa_isabel\",\n                    \"santarem\",\n                    \"santiago\",\n                    \"santo_domingo\",\n                    \"sao_paulo\",\n                    \"scoresbysund\",\n                    \"shiprock\",\n                    \"sitka\",\n                    \"st_barthelemy\",\n                    \"st_johns\",\n                    \"st_kitts\",\n                    \"st_lucia\",\n                    \"st_thomas\",\n                    \"st_vincent\",\n                    \"swift_current\",\n                    \"tegucigalpa\",\n                    \"thule\",\n                    \"thunder_bay\",\n                    \"tijuana\",\n                    \"toronto\",\n                    \"tortola\",\n                    \"vancouver\",\n                    \"whitehorse\",\n                    \"winnipeg\",\n                    \"yakutat\",\n                    \"yellowknife\"\n                ],\n                \"antarctica\": [\n                    \"casey\",\n                    \"davis\",\n                    \"dumontdurville\",\n                    \"macquarie\",\n                    \"mawson\",\n                    \"mcmurdo\",\n                    \"palmer\",\n                    \"rothera\",\n                    \"south_pole\",\n                    \"syowa\",\n                    \"vostok\"\n                ],\n                \"arctic\": [\n                    \"longyearbyen\"\n                ],\n                \"asia\": [\n                    \"aden\",\n                    \"almaty\",\n                    \"amman\",\n                    \"anadyr\",\n                    \"aqtau\",\n                    \"aqtobe\",\n                    \"ashgabat\",\n                    \"baghdad\",\n                    \"bahrain\",\n                    \"baku\",\n                    \"bangkok\",\n                    \"beirut\",\n                    \"bishkek\",\n                    \"brunei\",\n                    \"choibalsan\",\n                    \"chongqing\",\n                    \"colombo\",\n                    \"damascus\",\n                    \"dhaka\",\n                    \"dili\",\n                    \"dubai\",\n                    \"dushanbe\",\n                    \"gaza\",\n                    \"harbin\",\n                    \"hebron\",\n                    \"ho_chi_minh\",\n                    \"hong_kong\",\n                    \"hovd\",\n                    \"irkutsk\",\n                    \"jakarta\",\n                    \"jayapura\",\n                    \"jerusalem\",\n                    \"kabul\",\n                    \"kamchatka\",\n                    \"karachi\",\n                    \"kashgar\",\n                    \"kathmandu\",\n                    \"khandyga\",\n                    \"kolkata\",\n                    \"krasnoyarsk\",\n                    \"kuala_lumpur\",\n                    \"kuching\",\n                    \"kuwait\",\n                    \"macau\",\n                    \"magadan\",\n                    \"makassar\",\n                    \"manila\",\n                    \"muscat\",\n                    \"nicosia\",\n                    \"novokuznetsk\",\n                    \"novosibirsk\",\n                    \"omsk\",\n                    \"oral\",\n                    \"phnom_penh\",\n                    \"pontianak\",\n                    \"pyongyang\",\n                    \"qatar\",\n                    \"qyzylorda\",\n                    \"rangoon\",\n                    \"riyadh\",\n                    \"sakhalin\",\n                    \"samarkand\",\n                    \"seoul\",\n                    \"shanghai\",\n                    \"singapore\",\n                    \"taipei\",\n                    \"tashkent\",\n                    \"tbilisi\",\n                    \"tehran\",\n                    \"thimphu\",\n                    \"tokyo\",\n                    \"ulaanbaatar\",\n                    \"urumqi\",\n                    \"ust-nera\",\n                    \"vientiane\",\n                    \"vladivostok\",\n                    \"yakutsk\",\n                    \"yekaterinburg\",\n                    \"yerevan\"\n                ],\n                \"atlantic\": [\n                    \"azores\",\n                    \"bermuda\",\n                    \"canary\",\n                    \"cape_verde\",\n                    \"faroe\",\n                    \"madeira\",\n                    \"reykjavik\",\n                    \"south_georgia\",\n                    \"st_helena\",\n                    \"stanley\"\n                ],\n                \"australia\": [\n                    \"adelaide\",\n                    \"brisbane\",\n                    \"broken_hill\",\n                    \"currie\",\n                    \"darwin\",\n                    \"eucla\",\n                    \"hobart\",\n                    \"lindeman\",\n                    \"lord_howe\",\n                    \"melbourne\",\n                    \"perth\",\n                    \"sydney\"\n                ],\n                \"europe\": [\n                    \"amsterdam\",\n                    \"andorra\",\n                    \"athens\",\n                    \"belgrade\",\n                    \"berlin\",\n                    \"bratislava\",\n                    \"brussels\",\n                    \"bucharest\",\n                    \"budapest\",\n                    \"busingen\",\n                    \"chisinau\",\n                    \"copenhagen\",\n                    \"dublin\",\n                    \"gibraltar\",\n                    \"guernsey\",\n                    \"helsinki\",\n                    \"isle_of_man\",\n                    \"istanbul\",\n                    \"jersey\",\n                    \"kaliningrad\",\n                    \"kiev\",\n                    \"lisbon\",\n                    \"ljubljana\",\n                    \"london\",\n                    \"luxembourg\",\n                    \"madrid\",\n                    \"malta\",\n                    \"mariehamn\",\n                    \"minsk\",\n                    \"monaco\",\n                    \"moscow\",\n                    \"oslo\",\n                    \"paris\",\n                    \"podgorica\",\n                    \"prague\",\n                    \"riga\",\n                    \"rome\",\n                    \"samara\",\n                    \"san_marino\",\n                    \"sarajevo\",\n                    \"simferopol\",\n                    \"skopje\",\n                    \"sofia\",\n                    \"stockholm\",\n                    \"tallinn\",\n                    \"tirane\",\n                    \"uzhgorod\",\n                    \"vaduz\",\n                    \"vatican\",\n                    \"vienna\",\n                    \"vilnius\",\n                    \"volgograd\",\n                    \"warsaw\",\n                    \"zagreb\",\n                    \"zaporozhye\",\n                    \"zurich\"\n                ],\n                \"indian\": [\n                    \"antananarivo\",\n                    \"chagos\",\n                    \"christmas\",\n                    \"cocos\",\n                    \"comoro\",\n                    \"kerguelen\",\n                    \"mahe\",\n                    \"maldives\",\n                    \"mauritius\",\n                    \"mayotte\",\n                    \"reunion\"\n                ],\n                \"pacific\": [\n                    \"apia\",\n                    \"auckland\",\n                    \"chatham\",\n                    \"chuuk\",\n                    \"easter\",\n                    \"efate\",\n                    \"enderbury\",\n                    \"fakaofo\",\n                    \"fiji\",\n                    \"funafuti\",\n                    \"galapagos\",\n                    \"gambier\",\n                    \"guadalcanal\",\n                    \"guam\",\n                    \"honolulu\",\n                    \"johnston\",\n                    \"kiritimati\",\n                    \"kosrae\",\n                    \"kwajalein\",\n                    \"majuro\",\n                    \"marquesas\",\n                    \"midway\",\n                    \"nauru\",\n                    \"niue\",\n                    \"norfolk\",\n                    \"noumea\",\n                    \"pago_pago\",\n                    \"palau\",\n                    \"pitcairn\",\n                    \"pohnpei\",\n                    \"port_moresby\",\n                    \"rarotonga\",\n                    \"saipan\",\n                    \"tahiti\",\n                    \"tarawa\",\n                    \"tongatapu\",\n                    \"wake\",\n                    \"wallis\"\n                ],\n                \"utc\": [\n                    \"\"\n                ]\n            };\n\n            var tzparts= value.split('/',2);\n            var continent=tzparts[0].toLowerCase();\n            var city='';\n            if (tzparts[1]) {\n                city=tzparts[1].toLowerCase();\n            }\n\n            return (continent in timezones && ( timezones[continent].length===0 || timezones[continent].indexOf(city)!==-1))\n        }\n    }\n});\n","/*!\n * Laravel Javascript Validation\n *\n * https://github.com/proengsoft/laravel-jsvalidation\n *\n * Methods that implement Laravel Validations\n *\n * Copyright (c) 2017 Proengsoft\n * Released under the MIT license\n */\n\n$.extend(true, laravelValidation, {\n\n    methods:{\n\n        helpers: laravelValidation.helpers,\n\n        jsRemoteTimer:0,\n\n        /**\n         * \"Validate\" optional attributes.\n         * Always returns true, just lets us put sometimes in rules.\n         *\n         * @return {boolean}\n         */\n        Sometimes: function() {\n            return true;\n        },\n\n        /**\n         * Bail This is the default behaivour os JSValidation.\n         * Always returns true, just lets us put sometimes in rules.\n         *\n         * @return {boolean}\n         */\n        Bail: function() {\n            return true;\n        },\n\n        /**\n         * \"Indicate\" validation should pass if value is null.\n         * Always returns true, just lets us put \"nullable\" in rules.\n         *\n         * @return {boolean}\n         */\n        Nullable: function() {\n            return true;\n        },\n\n        /**\n         * Validate the given attribute is filled if it is present.\n         */\n        Filled: function(value, element) {\n            return $.validator.methods.required.call(this, value, element, true);\n        },\n\n\n        /**\n         * Validate that a required attribute exists.\n         */\n        Required: function(value, element) {\n            return  $.validator.methods.required.call(this, value, element);\n        },\n\n        /**\n         * Validate that an attribute exists when any other attribute exists.\n         *\n         * @return {boolean}\n         */\n        RequiredWith: function(value, element, params) {\n            var validator=this,\n                required=false;\n            var currentObject=this;\n\n            $.each(params,function(i,param) {\n                var target=laravelValidation.helpers.dependentElement(\n                    currentObject, element, param\n                );\n                required=required || (\n                    target!==undefined &&\n                    $.validator.methods.required.call(\n                        validator,\n                        currentObject.elementValue(target),\n                        target,true\n                    ));\n            });\n\n            if (required) {\n                return  $.validator.methods.required.call(this, value, element, true);\n            }\n            return true;\n        },\n\n        /**\n         * Validate that an attribute exists when all other attribute exists.\n         *\n         * @return {boolean}\n         */\n        RequiredWithAll: function(value, element, params) {\n            var validator=this,\n                required=true;\n            var currentObject=this;\n\n            $.each(params,function(i,param) {\n                var target=laravelValidation.helpers.dependentElement(\n                    currentObject, element, param\n                );\n                required = required && (\n                      target!==undefined &&\n                      $.validator.methods.required.call(\n                          validator,\n                          currentObject.elementValue(target),\n                          target,true\n                      ));\n            });\n\n            if (required) {\n                return  $.validator.methods.required.call(this, value, element, true);\n            }\n            return true;\n        },\n\n        /**\n         * Validate that an attribute exists when any other attribute does not exists.\n         *\n         * @return {boolean}\n         */\n        RequiredWithout: function(value, element, params) {\n            var validator=this,\n                required=false;\n            var currentObject=this;\n\n            $.each(params,function(i,param) {\n                var target=laravelValidation.helpers.dependentElement(\n                    currentObject, element, param\n                );\n                required = required ||\n                    target===undefined||\n                    !$.validator.methods.required.call(\n                        validator,\n                        currentObject.elementValue(target),\n                        target,true\n                    );\n            });\n\n            if (required) {\n                return  $.validator.methods.required.call(this, value, element, true);\n            }\n            return true;\n        },\n\n        /**\n         * Validate that an attribute exists when all other attribute does not exists.\n         *\n         * @return {boolean}\n         */\n        RequiredWithoutAll: function(value, element, params) {\n            var validator=this,\n                required=true,\n                currentObject=this;\n\n            $.each(params,function(i, param) {\n                var target=laravelValidation.helpers.dependentElement(\n                    currentObject, element, param\n                );\n                required = required && (\n                    target===undefined ||\n                    !$.validator.methods.required.call(\n                        validator,\n                        currentObject.elementValue(target),\n                        target,true\n                    ));\n            });\n\n            if (required) {\n                return  $.validator.methods.required.call(this, value, element, true);\n            }\n            return true;\n        },\n\n        /**\n         * Validate that an attribute exists when another attribute has a given value.\n         *\n         * @return {boolean}\n         */\n        RequiredIf: function(value, element, params) {\n\n            var target=laravelValidation.helpers.dependentElement(\n                this, element, params[0]\n            );\n\n            if (target!==undefined) {\n                var val=String(this.elementValue(target));\n                if (typeof val !== 'undefined') {\n                    var data = params.slice(1);\n                    if ($.inArray(val, data) !== -1) {\n                        return $.validator.methods.required.call(\n                            this, value, element, true\n                        );\n                    }\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * Validate that an attribute exists when another\n         * attribute does not have a given value.\n         *\n         * @return {boolean}\n         */\n        RequiredUnless: function(value, element, params) {\n\n            var target=laravelValidation.helpers.dependentElement(\n                this, element, params[0]\n            );\n\n            if (target!==undefined) {\n                var val=String(this.elementValue(target));\n                if (typeof val !== 'undefined') {\n                    var data = params.slice(1);\n                    if ($.inArray(val, data) !== -1) {\n                        return true;\n                    }\n                }\n            }\n\n            return $.validator.methods.required.call(\n                this, value, element, true\n            );\n\n        },\n\n        /**\n         * Validate that an attribute has a matching confirmation.\n         *\n         * @return {boolean}\n         */\n        Confirmed: function(value, element, params) {\n            return laravelValidation.methods.Same.call(this,value, element, params);\n        },\n\n        /**\n         * Validate that two attributes match.\n         *\n         * @return {boolean}\n         */\n        Same: function(value, element, params) {\n\n            var target=laravelValidation.helpers.dependentElement(\n                this, element, params[0]\n            );\n\n            if (target!==undefined) {\n                return String(value) === String(this.elementValue(target));\n            }\n            return false;\n        },\n\n        /**\n         * Validate that the values of an attribute is in another attribute.\n         *\n         * @param value\n         * @param element\n         * @param params\n         * @returns {boolean}\n         * @constructor\n         */\n        InArray: function (value, element, params) {\n            if (typeof params[0] === 'undefined') {\n                return false;\n            }\n            var elements = this.elements();\n            var found = false;\n            var nameRegExp = laravelValidation.helpers.regexFromWildcard(params[0]);\n\n            for ( var i = 0; i < elements.length ; i++ ) {\n                var targetName = elements[i].name;\n                if (targetName.match(nameRegExp)) {\n                    var equals = laravelValidation.methods.Same.call(this,value, element, [targetName]);\n                    found = found || equals;\n                }\n            }\n\n            return found;\n        },\n\n        /**\n         * Validate an attribute is unique among other values.\n         *\n         * @param value\n         * @param element\n         * @param params\n         * @returns {boolean}\n         */\n        Distinct: function (value, element, params) {\n            if (typeof params[0] === 'undefined') {\n                return false;\n            }\n\n            var elements = this.elements();\n            var found = false;\n            var nameRegExp = laravelValidation.helpers.regexFromWildcard(params[0]);\n\n            for ( var i = 0; i < elements.length ; i++ ) {\n                var targetName = elements[i].name;\n                if (targetName !== element.name && targetName.match(nameRegExp)) {\n                    var equals = laravelValidation.methods.Same.call(this,value, element, [targetName]);\n                    found = found || equals;\n                }\n            }\n\n            return !found;\n        },\n\n\n        /**\n         * Validate that an attribute is different from another attribute.\n         *\n         * @return {boolean}\n         */\n        Different: function(value, element, params) {\n            return ! laravelValidation.methods.Same.call(this,value, element, params);\n        },\n\n        /**\n         * Validate that an attribute was \"accepted\".\n         * This validation rule implies the attribute is \"required\".\n         *\n         * @return {boolean}\n         */\n        Accepted: function(value) {\n            var regex = new RegExp(\"^(?:(yes|on|1|true))$\",'i');\n            return regex.test(value);\n        },\n\n        /**\n         * Validate that an attribute is an array.\n         */\n        Array: function(value) {\n            return $.isArray(value);\n        },\n\n        /**\n         * Validate that an attribute is a boolean.\n         *\n         * @return {boolean}\n         */\n        Boolean: function(value) {\n            var regex= new RegExp(\"^(?:(true|false|1|0))$\",'i');\n            return  regex.test(value);\n        },\n\n        /**\n         * Validate that an attribute is an integer.\n         *\n         * @return {boolean}\n         */\n        Integer: function(value) {\n            var regex= new RegExp(\"^(?:-?\\\\d+)$\",'i');\n            return  regex.test(value);\n        },\n\n        /**\n         * Validate that an attribute is numeric.\n         */\n        Numeric: function(value, element) {\n            return $.validator.methods.number.call(this, value, element, true);\n        },\n\n        /**\n         * Validate that an attribute is a string.\n         *\n         * @return {boolean}\n         */\n        String: function(value) {\n            return typeof value === 'string';\n        },\n\n        /**\n         * The field under validation must be numeric and must have an exact length of value.\n         */\n        Digits: function(value, element, params) {\n            return (\n                $.validator.methods.number.call(this, value, element, true) &&\n                value.length === parseInt(params, 10)\n            );\n        },\n\n        /**\n         * The field under validation must have a length between the given min and max.\n         */\n        DigitsBetween: function(value, element, params) {\n            return ($.validator.methods.number.call(this, value, element, true)\n                && value.length>=parseFloat(params[0]) && value.length<=parseFloat(params[1]));\n        },\n\n        /**\n         * Validate the size of an attribute.\n         *\n         * @return {boolean}\n         */\n        Size: function(value, element, params) {\n            return laravelValidation.helpers.getSize(this, element,value) === parseFloat(params[0]);\n        },\n\n        /**\n         * Validate the size of an attribute is between a set of values.\n         *\n         * @return {boolean}\n         */\n        Between: function(value, element, params) {\n            return ( laravelValidation.helpers.getSize(this, element,value) >= parseFloat(params[0]) &&\n                laravelValidation.helpers.getSize(this,element,value) <= parseFloat(params[1]));\n        },\n\n        /**\n         * Validate the size of an attribute is greater than a minimum value.\n         *\n         * @return {boolean}\n         */\n        Min: function(value, element, params) {\n            return laravelValidation.helpers.getSize(this, element,value) >= parseFloat(params[0]);\n        },\n\n        /**\n         * Validate the size of an attribute is less than a maximum value.\n         *\n         * @return {boolean}\n         */\n        Max: function(value, element, params) {\n            return laravelValidation.helpers.getSize(this, element,value) <= parseFloat(params[0]);\n        },\n\n        /**\n         * Validate an attribute is contained within a list of values.\n         *\n         * @return {boolean}\n         */\n        In: function(value, element, params) {\n            if ($.isArray(value) && laravelValidation.helpers.hasRules(element, \"Array\")) {\n                var diff = laravelValidation.helpers.arrayDiff(value, params);\n                return Object.keys(diff).length === 0;\n            }\n            return params.indexOf(value.toString()) !== -1;\n        },\n\n        /**\n         * Validate an attribute is not contained within a list of values.\n         *\n         * @return {boolean}\n         */\n        NotIn: function(value, element, params) {\n            return params.indexOf(value.toString()) === -1;\n        },\n\n        /**\n         * Validate that an attribute is a valid IP.\n         *\n         * @return {boolean}\n         */\n        Ip: function(value) {\n            return /^(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/i.test(value) ||\n                /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);\n        },\n\n        /**\n         * Validate that an attribute is a valid e-mail address.\n         */\n        Email: function(value, element) {\n            return $.validator.methods.email.call(this, value, element, true);\n        },\n\n        /**\n         * Validate that an attribute is a valid URL.\n         */\n        Url: function(value, element) {\n            return $.validator.methods.url.call(this, value, element, true);\n        },\n\n        /**\n         * The field under validation must be a successfully uploaded file.\n         *\n         * @return {boolean}\n         */\n        File: function(value, element) {\n            if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n                return true;\n            }\n            if ('files' in element ) {\n                return (element.files.length > 0);\n            }\n            return false;\n        },\n\n        /**\n         * Validate the MIME type of a file upload attribute is in a set of MIME types.\n         *\n         * @return {boolean}\n         */\n        Mimes: function(value, element, params) {\n            if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n                return true;\n            }\n            var lowerParams = $.map(params, function(item) {\n                return item.toLowerCase();\n            });\n\n            var fileinfo = laravelValidation.helpers.fileinfo(element);\n            return (fileinfo !== false && lowerParams.indexOf(fileinfo.extension.toLowerCase())!==-1);\n        },\n\n        /**\n         * The file under validation must match one of the given MIME types.\n         *\n         * @return {boolean}\n         */\n        Mimetypes: function(value, element, params) {\n            if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n                return true;\n            }\n            var lowerParams = $.map(params, function(item) {\n                return item.toLowerCase();\n            });\n\n            var fileinfo = laravelValidation.helpers.fileinfo(element);\n\n            if (fileinfo === false) {\n                return false;\n            }\n            return (lowerParams.indexOf(fileinfo.type.toLowerCase())!==-1);\n        },\n\n        /**\n         * Validate the MIME type of a file upload attribute is in a set of MIME types.\n         */\n        Image: function(value, element) {\n            return laravelValidation.methods.Mimes.call(this, value, element, [\n                'jpg', 'png', 'gif', 'bmp', 'svg', 'jpeg'\n            ]);\n        },\n\n        /**\n         * Validate dimensions of Image.\n         *\n         * @return {boolean|string}\n         */\n        Dimensions: function(value, element, params, callback) {\n            if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n                return true;\n            }\n            if (element.files === null || typeof element.files[0] === 'undefined') {\n                return false;\n            }\n\n            var fr = new FileReader;\n            fr.onload = function () {\n                var img = new Image();\n                img.onload = function () {\n                    var height = parseFloat(img.naturalHeight);\n                    var width = parseFloat(img.naturalWidth);\n                    var ratio = width / height;\n                    var notValid = ((params['width']) && parseFloat(params['width'] !== width)) ||\n                        ((params['min_width']) && parseFloat(params['min_width']) > width) ||\n                        ((params['max_width']) && parseFloat(params['max_width']) < width) ||\n                        ((params['height']) && parseFloat(params['height']) !== height) ||\n                        ((params['min_height']) && parseFloat(params['min_height']) > height) ||\n                        ((params['max_height']) && parseFloat(params['max_height']) < height) ||\n                        ((params['ratio']) && ratio !== parseFloat(eval(params['ratio']))\n                        );\n                    callback(! notValid);\n                };\n                img.onerror = function() {\n                    callback(false);\n                };\n                img.src = fr.result;\n            };\n            fr.readAsDataURL(element.files[0]);\n\n            return 'pending';\n        },\n\n        /**\n         * Validate that an attribute contains only alphabetic characters.\n         *\n         * @return {boolean}\n         */\n        Alpha: function(value) {\n            if (typeof  value !== 'string') {\n                return false;\n            }\n\n            var regex = new RegExp(\"^(?:^[a-z\\u00E0-\\u00FC]+$)$\",'i');\n            return  regex.test(value);\n\n        },\n\n        /**\n         * Validate that an attribute contains only alpha-numeric characters.\n         *\n         * @return {boolean}\n         */\n        AlphaNum: function(value) {\n            if (typeof  value !== 'string') {\n                return false;\n            }\n            var regex = new RegExp(\"^(?:^[a-z0-9\\u00E0-\\u00FC]+$)$\",'i');\n            return regex.test(value);\n        },\n\n        /**\n         * Validate that an attribute contains only alphabetic characters.\n         *\n         * @return {boolean}\n         */\n        AlphaDash: function(value) {\n            if (typeof  value !== 'string') {\n                return false;\n            }\n            var regex = new RegExp(\"^(?:^[a-z0-9\\u00E0-\\u00FC_-]+$)$\",'i');\n            return regex.test(value);\n        },\n\n        /**\n         * Validate that an attribute passes a regular expression check.\n         *\n         * @return {boolean}\n         */\n        Regex: function(value, element, params) {\n            var invalidModifiers=['x','s','u','X','U','A'];\n            // Converting php regular expression\n            var phpReg= new RegExp('^(?:\\/)(.*\\\\\\/?[^\\/]*|[^\\/]*)(?:\\/)([gmixXsuUAJ]*)?$');\n            var matches=params[0].match(phpReg);\n            if (matches === null) {\n                return false;\n            }\n            // checking modifiers\n            var php_modifiers=[];\n            if (matches[2]!==undefined) {\n                php_modifiers=matches[2].split('');\n                for (var i=0; i<php_modifiers.length<i ;i++) {\n                    if (invalidModifiers.indexOf(php_modifiers[i])!==-1) {\n                        return true;\n                    }\n                }\n            }\n            var regex = new RegExp(\"^(?:\"+matches[1]+\")$\",php_modifiers.join());\n            return   regex.test(value);\n        },\n\n        /**\n         * Validate that an attribute is a valid date.\n         *\n         * @return {boolean}\n         */\n        Date: function(value) {\n            return (laravelValidation.helpers.strtotime(value)!==false);\n        },\n\n        /**\n         * Validate that an attribute matches a date format.\n         *\n         * @return {boolean}\n         */\n        DateFormat: function(value, element, params) {\n            return laravelValidation.helpers.parseTime(value,params[0])!==false;\n        },\n\n        /**\n         * Validate the date is before a given date.\n         *\n         * @return {boolean}\n         */\n        Before: function(value, element, params) {\n\n            var timeCompare=parseFloat(params);\n            if (isNaN(timeCompare)) {\n                var target=laravelValidation.helpers.dependentElement(this, element, params);\n                if (target===undefined) {\n                    return false;\n                }\n                timeCompare= laravelValidation.helpers.parseTime(this.elementValue(target), target);\n            }\n\n            var timeValue=laravelValidation.helpers.parseTime(value, element);\n            return  (timeValue !==false && timeValue < timeCompare);\n\n        },\n\n        /**\n         * Validate the date is after a given date.\n         *\n         * @return {boolean}\n         */\n        After: function(value, element, params) {\n            var timeCompare=parseFloat(params);\n            if (isNaN(timeCompare)) {\n                var target=laravelValidation.helpers.dependentElement(this, element, params);\n                if (target===undefined) {\n                    return false;\n                }\n                timeCompare= laravelValidation.helpers.parseTime(this.elementValue(target), target);\n            }\n\n            var timeValue=laravelValidation.helpers.parseTime(value, element);\n            return  (timeValue !==false && timeValue > timeCompare);\n\n        },\n\n\n        /**\n         * Validate that an attribute is a valid date.\n         */\n        Timezone: function(value) {\n            return  laravelValidation.helpers.isTimezone(value);\n        },\n\n\n        /**\n         * Validate the attribute is a valid JSON string.\n         *\n         * @param  value\n         * @return bool\n         */\n        Json: function(value) {\n            var result = true;\n            try {\n                JSON.parse(value);\n            } catch (e) {\n                result = false;\n            }\n            return result;\n        }\n    }\n});\n"]}
\ No newline at end of file
diff --git a/public/vendor/jsvalidation/js/jsvalidation.min.js b/public/vendor/jsvalidation/js/jsvalidation.min.js
index 175a9eb..e749c63 100644
--- a/public/vendor/jsvalidation/js/jsvalidation.min.js
+++ b/public/vendor/jsvalidation/js/jsvalidation.min.js
@@ -1,2 +1,2 @@
-function strlen(e){var t=e+"",a=0,r="",n=0;if(!this.php_js||!this.php_js.ini||!this.php_js.ini["unicode.semantics"]||"on"!==this.php_js.ini["unicode.semantics"].local_value.toLowerCase())return e.length;var i=function(e,t){var a=e.charCodeAt(t),r="",n="";if(a>=55296&&56319>=a){if(e.length<=t+1)throw"High surrogate without following low surrogate";if(r=e.charCodeAt(t+1),56320>r||r>57343)throw"High surrogate without following low surrogate";return e.charAt(t)+e.charAt(t+1)}if(a>=56320&&57343>=a){if(0===t)throw"Low surrogate without preceding high surrogate";if(n=e.charCodeAt(t-1),55296>n||n>56319)throw"Low surrogate without preceding high surrogate";return!1}return e.charAt(t)};for(a=0,n=0;a<t.length;a++)(r=i(t,a))!==!1&&n++;return n}function array_diff(e){var t={},a=arguments.length,r="",n=1,i="",s={};e:for(r in e)for(n=1;a>n;n++){s=arguments[n];for(i in s)if(s[i]===e[r])continue e;t[r]=e[r]}return t}function strtotime(e,t){function a(e,t,a){var r,n=u[t];"undefined"!=typeof n&&(r=n-l.getDay(),0===r?r=7*a:r>0&&"last"===e?r-=7:0>r&&"next"===e&&(r+=7),l.setDate(l.getDate()+r))}function r(e){var t=e.split(" "),r=t[0],n=t[1].substring(0,3),i=/\d+/.test(r),s="ago"===t[2],o=("last"===r?-1:1)*(s?-1:1);if(i&&(o*=parseInt(r,10)),d.hasOwnProperty(n)&&!t[1].match(/^mon(day|\.)?$/i))return l["set"+d[n]](l["get"+d[n]]()+o);if("wee"===n)return l.setDate(l.getDate()+7*o);if("next"===r||"last"===r)a(r,n,o);else if(!i)return!1;return!0}var n,i,s,o,l,u,d,h,c,m,g,f=!1;if(!e)return f;if(e=e.replace(/^\s+|\s+$/g,"").replace(/\s{2,}/g," ").replace(/[\t\r\n]/g,"").toLowerCase(),i=e.match(/^(\d{1,4})([\-\.\/\:])(\d{1,2})([\-\.\/\:])(\d{1,4})(?:\s(\d{1,2}):(\d{2})?:?(\d{2})?)?(?:\s([A-Z]+)?)?$/),i&&i[2]===i[4])if(i[1]>1901)switch(i[2]){case"-":return i[3]>12||i[5]>31?f:new Date(i[1],parseInt(i[3],10)-1,i[5],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3;case".":return f;case"/":return i[3]>12||i[5]>31?f:new Date(i[1],parseInt(i[3],10)-1,i[5],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3}else if(i[5]>1901)switch(i[2]){case"-":return i[3]>12||i[1]>31?f:new Date(i[5],parseInt(i[3],10)-1,i[1],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3;case".":return i[3]>12||i[1]>31?f:new Date(i[5],parseInt(i[3],10)-1,i[1],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3;case"/":return i[1]>12||i[3]>31?f:new Date(i[5],parseInt(i[1],10)-1,i[3],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3}else switch(i[2]){case"-":return i[3]>12||i[5]>31||i[1]<70&&i[1]>38?f:(o=i[1]>=0&&i[1]<=38?+i[1]+2e3:i[1],new Date(o,parseInt(i[3],10)-1,i[5],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3);case".":return i[5]>=70?i[3]>12||i[1]>31?f:new Date(i[5],parseInt(i[3],10)-1,i[1],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3:i[5]<60&&!i[6]?i[1]>23||i[3]>59?f:(s=new Date,new Date(s.getFullYear(),s.getMonth(),s.getDate(),i[1]||0,i[3]||0,i[5]||0,i[9]||0)/1e3):f;case"/":return i[1]>12||i[3]>31||i[5]<70&&i[5]>38?f:(o=i[5]>=0&&i[5]<=38?+i[5]+2e3:i[5],new Date(o,parseInt(i[1],10)-1,i[3],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3);case":":return i[1]>23||i[3]>59||i[5]>59?f:(s=new Date,new Date(s.getFullYear(),s.getMonth(),s.getDate(),i[1]||0,i[3]||0,i[5]||0)/1e3)}if("now"===e)return null===t||isNaN(t)?(new Date).getTime()/1e3|0:0|t;if(!isNaN(n=Date.parse(e)))return n/1e3|0;if((i=e.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2})[ t]([0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?)([\+-][0-9]{2}(:[0-9]{2})?|z)/))&&("z"==i[4]?i[4]="Z":i[4].match(/^([\+-][0-9]{2})$/)&&(i[4]=i[4]+":00"),!isNaN(n=Date.parse(i[1]+"T"+i[2]+i[4]))))return n/1e3|0;if(l=t?new Date(1e3*t):new Date,u={sun:0,mon:1,tue:2,wed:3,thu:4,fri:5,sat:6},d={yea:"FullYear",mon:"Month",day:"Date",hou:"Hours",min:"Minutes",sec:"Seconds"},c="(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec|sunday|sun\\.?|monday|mon\\.?|tuesday|tue\\.?|wednesday|wed\\.?|thursday|thu\\.?|friday|fri\\.?|saturday|sat\\.?)",m="([+-]?\\d+\\s"+c+"|(last|next)\\s"+c+")(\\sago)?",i=e.match(new RegExp(m,"gi")),!i)return f;for(g=0,h=i.length;h>g;g++)if(!r(i[g]))return f;return l.getTime()/1e3}!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)}(function(e){e.extend(e.fn,{validate:function(t){if(!this.length)return void(t&&t.debug&&window.console&&console.warn("Nothing selected, can't validate, returning nothing."));var a=e.data(this[0],"validator");return a?a:(this.attr("novalidate","novalidate"),a=new e.validator(t,this[0]),e.data(this[0],"validator",a),a.settings.onsubmit&&(this.on("click.validate",":submit",function(t){a.settings.submitHandler&&(a.submitButton=t.target),e(this).hasClass("cancel")&&(a.cancelSubmit=!0),void 0!==e(this).attr("formnovalidate")&&(a.cancelSubmit=!0)}),this.on("submit.validate",function(t){function r(){var r,n;return a.settings.submitHandler?(a.submitButton&&(r=e("<input type='hidden'/>").attr("name",a.submitButton.name).val(e(a.submitButton).val()).appendTo(a.currentForm)),n=a.settings.submitHandler.call(a,a.currentForm,t),a.submitButton&&r.remove(),void 0!==n?n:!1):!0}return a.settings.debug&&t.preventDefault(),a.cancelSubmit?(a.cancelSubmit=!1,r()):a.form()?a.pendingRequest?(a.formSubmitted=!0,!1):r():(a.focusInvalid(),!1)})),a)},valid:function(){var t,a,r;return e(this[0]).is("form")?t=this.validate().form():(r=[],t=!0,a=e(this[0].form).validate(),this.each(function(){t=a.element(this)&&t,r=r.concat(a.errorList)}),a.errorList=r),t},rules:function(t,a){var r,n,i,s,o,l,u=this[0];if(t)switch(r=e.data(u.form,"validator").settings,n=r.rules,i=e.validator.staticRules(u),t){case"add":e.extend(i,e.validator.normalizeRule(a)),delete i.messages,n[u.name]=i,a.messages&&(r.messages[u.name]=e.extend(r.messages[u.name],a.messages));break;case"remove":return a?(l={},e.each(a.split(/\s/),function(t,a){l[a]=i[a],delete i[a],"required"===a&&e(u).removeAttr("aria-required")}),l):(delete n[u.name],i)}return s=e.validator.normalizeRules(e.extend({},e.validator.classRules(u),e.validator.attributeRules(u),e.validator.dataRules(u),e.validator.staticRules(u)),u),s.required&&(o=s.required,delete s.required,s=e.extend({required:o},s),e(u).attr("aria-required","true")),s.remote&&(o=s.remote,delete s.remote,s=e.extend(s,{remote:o})),s}}),e.extend(e.expr[":"],{blank:function(t){return!e.trim(""+e(t).val())},filled:function(t){return!!e.trim(""+e(t).val())},unchecked:function(t){return!e(t).prop("checked")}}),e.validator=function(t,a){this.settings=e.extend(!0,{},e.validator.defaults,t),this.currentForm=a,this.init()},e.validator.format=function(t,a){return 1===arguments.length?function(){var a=e.makeArray(arguments);return a.unshift(t),e.validator.format.apply(this,a)}:(arguments.length>2&&a.constructor!==Array&&(a=e.makeArray(arguments).slice(1)),a.constructor!==Array&&(a=[a]),e.each(a,function(e,a){t=t.replace(new RegExp("\\{"+e+"\\}","g"),function(){return a})}),t)},e.extend(e.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:e([]),errorLabelContainer:e([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(e){this.lastActive=e,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,e,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(e)))},onfocusout:function(e){this.checkable(e)||!(e.name in this.submitted)&&this.optional(e)||this.element(e)},onkeyup:function(t,a){var r=[16,17,18,20,35,36,37,38,39,40,45,144,225];9===a.which&&""===this.elementValue(t)||-1!==e.inArray(a.keyCode,r)||(t.name in this.submitted||t===this.lastElement)&&this.element(t)},onclick:function(e){e.name in this.submitted?this.element(e):e.parentNode.name in this.submitted&&this.element(e.parentNode)},highlight:function(t,a,r){"radio"===t.type?this.findByName(t.name).addClass(a).removeClass(r):e(t).addClass(a).removeClass(r)},unhighlight:function(t,a,r){"radio"===t.type?this.findByName(t.name).removeClass(a).addClass(r):e(t).removeClass(a).addClass(r)}},setDefaults:function(t){e.extend(e.validator.defaults,t)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date ( ISO ).",number:"Please enter a valid number.",digits:"Please enter only digits.",creditcard:"Please enter a valid credit card number.",equalTo:"Please enter the same value again.",maxlength:e.validator.format("Please enter no more than {0} characters."),minlength:e.validator.format("Please enter at least {0} characters."),rangelength:e.validator.format("Please enter a value between {0} and {1} characters long."),range:e.validator.format("Please enter a value between {0} and {1}."),max:e.validator.format("Please enter a value less than or equal to {0}."),min:e.validator.format("Please enter a value greater than or equal to {0}.")},autoCreateRanges:!1,prototype:{init:function(){function t(t){var a=e.data(this.form,"validator"),r="on"+t.type.replace(/^validate/,""),n=a.settings;n[r]&&!e(this).is(n.ignore)&&n[r].call(a,this,t)}this.labelContainer=e(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||e(this.currentForm),this.containers=e(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var a,r=this.groups={};e.each(this.settings.groups,function(t,a){"string"==typeof a&&(a=a.split(/\s/)),e.each(a,function(e,a){r[a]=t})}),a=this.settings.rules,e.each(a,function(t,r){a[t]=e.validator.normalizeRule(r)}),e(this.currentForm).on("focusin.validate focusout.validate keyup.validate",":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox']",t).on("click.validate","select, option, [type='radio'], [type='checkbox']",t),this.settings.invalidHandler&&e(this.currentForm).on("invalid-form.validate",this.settings.invalidHandler),e(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required","true")},form:function(){return this.checkForm(),e.extend(this.submitted,this.errorMap),this.invalid=e.extend({},this.errorMap),this.valid()||e(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var e=0,t=this.currentElements=this.elements();t[e];e++)this.check(t[e]);return this.valid()},element:function(t){var a=this.clean(t),r=this.validationTargetFor(a),n=!0;return this.lastElement=r,void 0===r?delete this.invalid[a.name]:(this.prepareElement(r),this.currentElements=e(r),n=this.check(r)!==!1,n?delete this.invalid[r.name]:this.invalid[r.name]=!0),e(t).attr("aria-invalid",!n),this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),n},showErrors:function(t){if(t){e.extend(this.errorMap,t),this.errorList=[];for(var a in t)this.errorList.push({message:t[a],element:this.findByName(a)[0]});this.successList=e.grep(this.successList,function(e){return!(e.name in t)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){e.fn.resetForm&&e(this.currentForm).resetForm(),this.submitted={},this.lastElement=null,this.prepareForm(),this.hideErrors();var t,a=this.elements().removeData("previousValue").removeAttr("aria-invalid");if(this.settings.unhighlight)for(t=0;a[t];t++)this.settings.unhighlight.call(this,a[t],this.settings.errorClass,"");else a.removeClass(this.settings.errorClass)},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(e){var t,a=0;for(t in e)a++;return a},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(e){e.not(this.containers).text(""),this.addWrapper(e).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{e(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").focus().trigger("focusin")}catch(t){}},findLastActive:function(){var t=this.lastActive;return t&&1===e.grep(this.errorList,function(e){return e.element.name===t.name}).length&&t},elements:function(){var t=this,a={};return e(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function(){return!this.name&&t.settings.debug&&window.console&&console.error("%o has no name assigned",this),this.name in a||!t.objectLength(e(this).rules())?!1:(a[this.name]=!0,!0)})},clean:function(t){return e(t)[0]},errors:function(){var t=this.settings.errorClass.split(" ").join(".");return e(this.settings.errorElement+"."+t,this.errorContext)},reset:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=e([]),this.toHide=e([]),this.currentElements=e([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(e){this.reset(),this.toHide=this.errorsFor(e)},elementValue:function(t){var a,r=e(t),n=t.type;return"radio"===n||"checkbox"===n?this.findByName(t.name).filter(":checked").val():"number"===n&&"undefined"!=typeof t.validity?t.validity.badInput?!1:r.val():(a=r.val(),"string"==typeof a?a.replace(/\r/g,""):a)},check:function(t){t=this.validationTargetFor(this.clean(t));var a,r,n,i=e(t).rules(),s=e.map(i,function(e,t){return t}).length,o=!1,l=this.elementValue(t);for(r in i){n={method:r,parameters:i[r]};try{if(a=e.validator.methods[r].call(this,l,t,n.parameters),"dependency-mismatch"===a&&1===s){o=!0;continue}if(o=!1,"pending"===a)return void(this.toHide=this.toHide.not(this.errorsFor(t)));if(!a)return this.formatAndAdd(t,n),!1}catch(u){throw this.settings.debug&&window.console&&console.log("Exception occurred when checking element "+t.id+", check the '"+n.method+"' method.",u),u instanceof TypeError&&(u.message+=".  Exception occurred when checking element "+t.id+", check the '"+n.method+"' method."),u}}if(!o)return this.objectLength(i)&&this.successList.push(t),!0},customDataMessage:function(t,a){return e(t).data("msg"+a.charAt(0).toUpperCase()+a.substring(1).toLowerCase())||e(t).data("msg")},customMessage:function(e,t){var a=this.settings.messages[e];return a&&(a.constructor===String?a:a[t])},findDefined:function(){for(var e=0;e<arguments.length;e++)if(void 0!==arguments[e])return arguments[e];return void 0},defaultMessage:function(t,a){return this.findDefined(this.customMessage(t.name,a),this.customDataMessage(t,a),!this.settings.ignoreTitle&&t.title||void 0,e.validator.messages[a],"<strong>Warning: No message defined for "+t.name+"</strong>")},formatAndAdd:function(t,a){var r=this.defaultMessage(t,a.method),n=/\$?\{(\d+)\}/g;"function"==typeof r?r=r.call(this,a.parameters,t):n.test(r)&&(r=e.validator.format(r.replace(n,"{$1}"),a.parameters)),this.errorList.push({message:r,element:t,method:a.method}),this.errorMap[t.name]=r,this.submitted[t.name]=r},addWrapper:function(e){return this.settings.wrapper&&(e=e.add(e.parent(this.settings.wrapper))),e},defaultShowErrors:function(){var e,t,a;for(e=0;this.errorList[e];e++)a=this.errorList[e],this.settings.highlight&&this.settings.highlight.call(this,a.element,this.settings.errorClass,this.settings.validClass),this.showLabel(a.element,a.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(e=0;this.successList[e];e++)this.showLabel(this.successList[e]);if(this.settings.unhighlight)for(e=0,t=this.validElements();t[e];e++)this.settings.unhighlight.call(this,t[e],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return e(this.errorList).map(function(){return this.element})},showLabel:function(t,a){var r,n,i,s=this.errorsFor(t),o=this.idOrName(t),l=e(t).attr("aria-describedby");s.length?(s.removeClass(this.settings.validClass).addClass(this.settings.errorClass),s.html(a)):(s=e("<"+this.settings.errorElement+">").attr("id",o+"-error").addClass(this.settings.errorClass).html(a||""),r=s,this.settings.wrapper&&(r=s.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(r):this.settings.errorPlacement?this.settings.errorPlacement(r,e(t)):r.insertAfter(t),s.is("label")?s.attr("for",o):0===s.parents("label[for='"+o+"']").length&&(i=s.attr("id").replace(/(:|\.|\[|\]|\$)/g,"\\$1"),l?l.match(new RegExp("\\b"+i+"\\b"))||(l+=" "+i):l=i,e(t).attr("aria-describedby",l),n=this.groups[t.name],n&&e.each(this.groups,function(t,a){a===n&&e("[name='"+t+"']",this.currentForm).attr("aria-describedby",s.attr("id"))}))),!a&&this.settings.success&&(s.text(""),"string"==typeof this.settings.success?s.addClass(this.settings.success):this.settings.success(s,t)),this.toShow=this.toShow.add(s)},errorsFor:function(t){var a=this.idOrName(t),r=e(t).attr("aria-describedby"),n="label[for='"+a+"'], label[for='"+a+"'] *";return r&&(n=n+", #"+r.replace(/\s+/g,", #")),this.errors().filter(n)},idOrName:function(e){return this.groups[e.name]||(this.checkable(e)?e.name:e.id||e.name)},validationTargetFor:function(t){return this.checkable(t)&&(t=this.findByName(t.name)),e(t).not(this.settings.ignore)[0]},checkable:function(e){return/radio|checkbox/i.test(e.type)},findByName:function(t){return e(this.currentForm).find("[name='"+t+"']")},getLength:function(t,a){switch(a.nodeName.toLowerCase()){case"select":return e("option:selected",a).length;case"input":if(this.checkable(a))return this.findByName(a.name).filter(":checked").length}return t.length},depend:function(e,t){return this.dependTypes[typeof e]?this.dependTypes[typeof e](e,t):!0},dependTypes:{"boolean":function(e){return e},string:function(t,a){return!!e(t,a.form).length},"function":function(e,t){return e(t)}},optional:function(t){var a=this.elementValue(t);return!e.validator.methods.required.call(this,a,t)&&"dependency-mismatch"},startRequest:function(e){this.pending[e.name]||(this.pendingRequest++,this.pending[e.name]=!0)},stopRequest:function(t,a){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[t.name],a&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(e(this.currentForm).submit(),this.formSubmitted=!1):!a&&0===this.pendingRequest&&this.formSubmitted&&(e(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(t){return e.data(t,"previousValue")||e.data(t,"previousValue",{old:null,valid:!0,message:this.defaultMessage(t,"remote")})},destroy:function(){this.resetForm(),e(this.currentForm).off(".validate").removeData("validator")}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(t,a){t.constructor===String?this.classRuleSettings[t]=a:e.extend(this.classRuleSettings,t)},classRules:function(t){var a={},r=e(t).attr("class");return r&&e.each(r.split(" "),function(){this in e.validator.classRuleSettings&&e.extend(a,e.validator.classRuleSettings[this])}),a},normalizeAttributeRule:function(e,t,a,r){/min|max/.test(a)&&(null===t||/number|range|text/.test(t))&&(r=Number(r),isNaN(r)&&(r=void 0)),r||0===r?e[a]=r:t===a&&"range"!==t&&(e[a]=!0)},attributeRules:function(t){var a,r,n={},i=e(t),s=t.getAttribute("type");for(a in e.validator.methods)"required"===a?(r=t.getAttribute(a),""===r&&(r=!0),r=!!r):r=i.attr(a),this.normalizeAttributeRule(n,s,a,r);return n.maxlength&&/-1|2147483647|524288/.test(n.maxlength)&&delete n.maxlength,n},dataRules:function(t){var a,r,n={},i=e(t),s=t.getAttribute("type");for(a in e.validator.methods)r=i.data("rule"+a.charAt(0).toUpperCase()+a.substring(1).toLowerCase()),this.normalizeAttributeRule(n,s,a,r);return n},staticRules:function(t){var a={},r=e.data(t.form,"validator");return r.settings.rules&&(a=e.validator.normalizeRule(r.settings.rules[t.name])||{}),a},normalizeRules:function(t,a){return e.each(t,function(r,n){if(n===!1)return void delete t[r];if(n.param||n.depends){var i=!0;switch(typeof n.depends){case"string":i=!!e(n.depends,a.form).length;break;case"function":i=n.depends.call(a,a)}i?t[r]=void 0!==n.param?n.param:!0:delete t[r]}}),e.each(t,function(r,n){t[r]=e.isFunction(n)?n(a):n}),e.each(["minlength","maxlength"],function(){t[this]&&(t[this]=Number(t[this]))}),e.each(["rangelength","range"],function(){var a;t[this]&&(e.isArray(t[this])?t[this]=[Number(t[this][0]),Number(t[this][1])]:"string"==typeof t[this]&&(a=t[this].replace(/[\[\]]/g,"").split(/[\s,]+/),t[this]=[Number(a[0]),Number(a[1])]))}),e.validator.autoCreateRanges&&(null!=t.min&&null!=t.max&&(t.range=[t.min,t.max],delete t.min,delete t.max),null!=t.minlength&&null!=t.maxlength&&(t.rangelength=[t.minlength,t.maxlength],delete t.minlength,delete t.maxlength)),t},normalizeRule:function(t){if("string"==typeof t){var a={};e.each(t.split(/\s/),function(){a[this]=!0}),t=a}return t},addMethod:function(t,a,r){e.validator.methods[t]=a,e.validator.messages[t]=void 0!==r?r:e.validator.messages[t],a.length<3&&e.validator.addClassRules(t,e.validator.normalizeRule(t))},methods:{required:function(t,a,r){if(!this.depend(r,a))return"dependency-mismatch";if("select"===a.nodeName.toLowerCase()){var n=e(a).val();return n&&n.length>0}return this.checkable(a)?this.getLength(t,a)>0:t.length>0},email:function(e,t){return this.optional(t)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(e)},url:function(e,t){return this.optional(t)||/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(e)},date:function(e,t){return this.optional(t)||!/Invalid|NaN/.test(new Date(e).toString())},dateISO:function(e,t){return this.optional(t)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(e)},number:function(e,t){return this.optional(t)||/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(e)},digits:function(e,t){return this.optional(t)||/^\d+$/.test(e)},creditcard:function(e,t){if(this.optional(t))return"dependency-mismatch";if(/[^0-9 \-]+/.test(e))return!1;var a,r,n=0,i=0,s=!1;if(e=e.replace(/\D/g,""),e.length<13||e.length>19)return!1;for(a=e.length-1;a>=0;a--)r=e.charAt(a),i=parseInt(r,10),s&&(i*=2)>9&&(i-=9),n+=i,s=!s;return n%10===0},minlength:function(t,a,r){var n=e.isArray(t)?t.length:this.getLength(t,a);return this.optional(a)||n>=r},maxlength:function(t,a,r){var n=e.isArray(t)?t.length:this.getLength(t,a);return this.optional(a)||r>=n},rangelength:function(t,a,r){var n=e.isArray(t)?t.length:this.getLength(t,a);return this.optional(a)||n>=r[0]&&n<=r[1]},min:function(e,t,a){return this.optional(t)||e>=a},max:function(e,t,a){return this.optional(t)||a>=e},range:function(e,t,a){return this.optional(t)||e>=a[0]&&e<=a[1]},equalTo:function(t,a,r){var n=e(r);return this.settings.onfocusout&&n.off(".validate-equalTo").on("blur.validate-equalTo",function(){e(a).valid()}),t===n.val()},remote:function(t,a,r){if(this.optional(a))return"dependency-mismatch";var n,i,s=this.previousValue(a);return this.settings.messages[a.name]||(this.settings.messages[a.name]={}),s.originalMessage=this.settings.messages[a.name].remote,this.settings.messages[a.name].remote=s.message,r="string"==typeof r&&{url:r}||r,s.old===t?s.valid:(s.old=t,n=this,this.startRequest(a),i={},i[a.name]=t,e.ajax(e.extend(!0,{mode:"abort",port:"validate"+a.name,dataType:"json",data:i,context:n.currentForm,success:function(r){var i,o,l,u=r===!0||"true"===r;n.settings.messages[a.name].remote=s.originalMessage,u?(l=n.formSubmitted,n.prepareElement(a),n.formSubmitted=l,n.successList.push(a),delete n.invalid[a.name],n.showErrors()):(i={},o=r||n.defaultMessage(a,"remote"),i[a.name]=s.message=e.isFunction(o)?o(t):o,n.invalid[a.name]=!0,n.showErrors(i)),s.valid=u,n.stopRequest(a,u)}},r)),"pending")}}});var t,a={};e.ajaxPrefilter?e.ajaxPrefilter(function(e,t,r){var n=e.port;"abort"===e.mode&&(a[n]&&a[n].abort(),a[n]=r)}):(t=e.ajax,e.ajax=function(r){var n=("mode"in r?r:e.ajaxSettings).mode,i=("port"in r?r:e.ajaxSettings).port;return"abort"===n?(a[i]&&a[i].abort(),a[i]=t.apply(this,arguments),a[i]):t.apply(this,arguments)})});var defaultConfig={dateSettings:{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],meridiem:["AM","PM"]},separators:/[ \-+\/\.T:@]/g,validParts:/[djDlwSFmMnyYaAgGhHisU]/g},DateFormatter=function(e){var t=$.extend(!0,defaultConfig,e);this.dateSettings=t.dateSettings,this.separators=t.separators,this.validParts=t.validParts};DateFormatter.prototype={constructor:DateFormatter,parseDate:function(e,t){if(!e)return void 0;if(e instanceof Date)return e;if("number"==typeof e)return new Date(e);var a=this,r={date:null,year:null,month:null,day:null,dayOfWeek:null,hour:0,min:0,sec:0};if(e instanceof Date)return e;if("string"==typeof e){var n=t.match(a.validParts);if(!n||0===n.length)throw new Error("Invalid date format definition.");var i,s=e.replace(a.separators,"\x00").split("\x00"),o=!1,l=!1;for(i=0;i<s.length;i++)switch(n[i]){case"y":case"Y":2==s[i].length?r.year=parseInt((parseInt(s[i])<70?"20":"19")+s[i]):4==s[i].length&&(r.year=parseInt(s[i])),o=!0;break;case"m":case"n":case"M":case"F":var u;isNaN(s[i])?(u=a.dateSettings.monthsShort.indexOf(s[i]),u>-1&&(r.month=u+1),u=a.dateSettings.months.indexOf(s[i]),u>-1&&(r.month=u+1)):parseInt(s[i])>=1&&parseInt(s[i])<=12&&(r.month=parseInt(s[i])),o=!0;break;case"d":case"j":parseInt(s[i])>=1&&parseInt(s[i])<=31&&(r.day=parseInt(s[i])),o=!0;break;case"g":case"h":var d=n.indexOf("a")>-1?n.indexOf("a"):n.indexOf("A")>-1?n.indexOf("A"):-1;if(d>-1){var h=s[d].toLowerCase==a.dateSettings.meridiem[0].toLowerCase?0:s[d].toLowerCase==a.dateSettings.meridiem[1].toLowerCase?12:-1;parseInt(s[i])>=1&&parseInt(s[i])<=12&&h>-1?r.hour=parseInt(s[i])+h-1:parseInt(s[i])>=0&&parseInt(s[i])<=23&&(r.hour=parseInt(s[i]))}else parseInt(s[i])>=0&&parseInt(s[i])<=23&&(r.hour=parseInt(s[i]));l=!0;break;case"G":case"H":parseInt(s[i])>=0&&parseInt(s[i])<=23&&(r.hour=parseInt(s[i])),l=!0;break;case"i":parseInt(s[i])>=0&&parseInt(s[i])<=59&&(r.min=parseInt(s[i])),l=!0;break;case"s":parseInt(s[i])>=0&&parseInt(s[i])<=59&&(r.sec=parseInt(s[i])),l=!0}return o===!0&&r.year&&r.month&&r.day?(r.date=new Date(r.year,r.month-1,r.day,r.hour,r.min,r.sec,0),r.date):l===!0?(r.date=new Date(0,0,0,r.hour,r.min,r.sec,0),r.date):!1}},guessDate:function(e,t){var a=this;if("string"!=typeof e)return e;var r=e.replace(a.separators,"\x00").split("\x00"),n=t.match(a.validParts),i=/^[djmn]/g;if(i.test(n[0])){var s,o=new Date,l=0;for(s=0;s<r.length;s++){switch(l=2,s){case 0:"m"==n[0]||"n"==n[0]?o.setMonth(parseInt(r[s].substr(0,2))-1):o.setDate(parseInt(r[s].substr(0,2)));break;case 1:"m"==n[0]||"n"==n[0]?o.setDate(parseInt(r[s].substr(0,2))):o.setMonth(parseInt(r[s].substr(0,2))-1);break;case 2:var u=o.getFullYear();r[s].length<4?(o.setFullYear(parseInt(u.toString().substr(0,4-r[s].length)+r[s])),l=r[s].length):(o.setFullYear=parseInt(r[s].substr(0,4)),l=4);break;case 3:o.setHours(parseInt(r[s].substr(0,2)));break;case 4:o.setMinutes(parseInt(r[s].substr(0,2)));break;case 5:o.setSeconds(parseInt(r[s].substr(0,2)))}r[s].substr(l).length>0&&r.splice(s+1,0,r[s].substr(l))}return o}},formatDate:function(e,t){var a=this;if("string"==typeof e&&(e=a.parseDate(e,t),0==e))return!1;if(e instanceof Date){var r,n,i="",a=this,s=/[djDlwSFmMnyYaAgGhHisU]/;for(r=0;r<t.length;r++)if(n=t.charAt(r),1==s.test(n))switch(n){case"j":i+=e.getDate();break;case"d":i+=(e.getDate()<=9?"0":"")+e.getDate();break;case"D":i+=a.dateSettings.daysShort[e.getDay()];break;case"l":i+=a.dateSettings.days[e.getDay()];break;case"w":i+=e.getDay();break;case"S":var o=e.getDay();i+=1==o||21==o||31==o?"st":2==o||22==o?"nd":3==o||23==o?"rd":"th";break;case"n":i+=e.getMonth()+1;break;case"m":i+=(e.getMonth()<=8?"0":"")+(e.getMonth()+1);break;case"F":i+=a.dateSettings.months[e.getMonth()];break;case"M":i+=a.dateSettings.monthsShort[e.getMonth()];break;case"Y":i+=e.getFullYear();break;case"y":i+=e.getFullYear().toString().substr(2);break;case"g":i+=e.getHours()%12+1;break;case"G":i+=e.getHours();break;case"h":i+=(e.getHours()%12<=8?"0":"")+(e.getHours()%12+1);break;case"H":i+=(e.getHours()<=9?"0":"")+e.getHours();break;case"a":case"A":i+=e.getHours<=12?a.dateSettings.meridiem[0]:a.dateSettings.meridiem[1];break;case"i":i+=(e.getMinutes()<=9?"0":"")+e.getMinutes();break;case"s":i+=(e.getSeconds()<=9?"0":"")+e.getSeconds();break;case"U":i+=e.getTime()/1e3}else i+=n;return i}}};var laravelValidation;laravelValidation={implicitRules:["Required","Confirmed"],init:function(){$.validator.classRuleSettings={},$.validator.normalizeAttributeRule=function(){},this.setupValidations()},setupValidations:function(){$.validator.addMethod("laravelValidation",function(e,t,a){var r=this,n=!0,i=[];return $.each(a,function(e,t){t[3]||-1!==laravelValidation.implicitRules.indexOf(t[0])?i.unshift(t):i.push(t)}),$.each(i,function(a,i){var s=i[3]||-1!==laravelValidation.implicitRules.indexOf(i[0]),o=i[0],l=i[2];return!s&&r.optional(t)?(n="dependency-mismatch",!1):(n=void 0!==laravelValidation.methods[o]?laravelValidation.methods[o].call(r,e,t,i[1]):!1,n!==!0?(r.settings.messages[t.name]||(r.settings.messages[t.name]={}),r.settings.messages[t.name].laravelValidation=l,!1):void 0)}),n},""),$.validator.addMethod("laravelValidationRemote",function(e,t,a){var r=!1,n=a[0][1],i=n[0],s=n[1];if($.each(a,function(e,t){r=r||t[3]}),!r&&this.optional(t))return"dependency-mismatch";var o,l,u=this.previousValue(t);this.settings.messages[t.name]||(this.settings.messages[t.name]={}),u.originalMessage=this.settings.messages[t.name].laravelValidationRemote,this.settings.messages[t.name].laravelValidationRemote=u.message;var d="string"==typeof d&&{url:d}||d;if(u.old===e)return u.valid;u.old=e,o=this,this.startRequest(t),l={},l[t.name]=e,l._jsvalidation=i;var h=$(o.currentForm).attr("method");return $(o.currentForm).find('input[name="_method"]').length&&(h=$(o.currentForm).find('input[name="_method"]').val()),$.ajax($.extend(!0,{mode:"abort",port:"validate"+t.name,dataType:"json",data:l,context:o.currentForm,url:$(o.currentForm).attr("action"),type:h,beforeSend:function(e){return"get"!==$(o.currentForm).attr("method").toLowerCase()&&s?e.setRequestHeader("X-XSRF-TOKEN",s):void 0}},d)).always(function(a,r){var n,i,s,l;if("error"===r)if(l=!1,"responseText"in a){var d=a.responseText.match(/<h1\s*>(.*)<\/h1\s*>/i);$.isArray(d)&&(a=[d[1]])}else a=["Whoops, looks like something went wrong."];else{if("success"!==r)return;l=a===!0||"true"===a}o.settings.messages[t.name].laravelValidationRemote=u.originalMessage,l?(s=o.formSubmitted,o.prepareElement(t),o.formSubmitted=s,o.successList.push(t),delete o.invalid[t.name],o.showErrors()):(n={},i=a||o.defaultMessage(t,"remote"),n[t.name]=u.message=$.isFunction(i)?i(e):i[0],o.invalid[t.name]=!0,o.showErrors(n)),o.showErrors(o.errorMap),u.valid=l,o.stopRequest(t,l)}),"pending"},"")}},$(function(){laravelValidation.init()}),$.extend(!0,laravelValidation,{helpers:{numericRules:["Integer","Numeric"],fileinfo:function(e){var t=e.value;
-return{file:t,extension:t.substr(t.lastIndexOf(".")+1),size:e.files[0].size/1024}},selector:function(e){var t=[];$.isArray(e)||(e=[e]);for(var a=0;a<e.length;a++)t.push("[name='"+e[a]+"']");return t.join()},hasNumericRules:function(e){return this.hasRules(e,this.numericRules)},hasRules:function(e,t){var a=!1;"string"==typeof t&&(t=[t]);var r=$.data(e.form,"validator"),n=r.settings.rules[e.name];if("laravelValidation"in n)for(var i=n.laravelValidation,s=0;s<i.length;s++)if(-1!==$.inArray(i[s][0],t)){a=!0;break}return a},strlen:function(e){return strlen(e)},getSize:function(e,t,a){return parseFloat(this.hasNumericRules(t)&&/^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)?a:$.isArray(a)?a.length:"file"===t.type?Math.ceil(this.fileinfo(t).size):this.strlen(a))},getLaravelValidation:function(e,t){var a=void 0;return $.each($.validator.staticRules(t),function(t,r){"laravelValidation"===t&&$.each(r,function(t,r){r[0]===e&&(a=r)})}),a},parseTime:function(e,t){var a=!1,r=new DateFormatter;if("object"===$.type(t)){var n=this.getLaravelValidation("DateFormat",t);t=void 0!==n?n[1][0]:null}return null==t?a=this.strtotime(e):(a=r.parseDate(e,t),a&&(a=Math.round(a.getTime()/1e3))),a},gessDate:function(e,t){var a=new DateFormatter;return a.guessDate(e,t)},strtotime:function(e,t){return strtotime(e,t)},arrayDiff:function(e,t){return array_diff(e,t)},dependentElement:function(e,t,a){var r=e.findByName(a);if(void 0!==r[0]&&e.settings.onfocusout){var n="blur";("SELECT"===r[0].tagName||"OPTION"===r[0].tagName||"checkbox"===r[0].type||"radio"===r[0].type)&&(n="click");var i=".validate-laravelValidation";r.off(i).off(n+i+"-"+t.name).on(n+i+"-"+t.name,function(){$(t).valid()})}return r[0]}}}),$.extend(!0,laravelValidation,{helpers:{isTimezone:function(e){var t={africa:["abidjan","accra","addis_ababa","algiers","asmara","bamako","bangui","banjul","bissau","blantyre","brazzaville","bujumbura","cairo","casablanca","ceuta","conakry","dakar","dar_es_salaam","djibouti","douala","el_aaiun","freetown","gaborone","harare","johannesburg","juba","kampala","khartoum","kigali","kinshasa","lagos","libreville","lome","luanda","lubumbashi","lusaka","malabo","maputo","maseru","mbabane","mogadishu","monrovia","nairobi","ndjamena","niamey","nouakchott","ouagadougou","porto-novo","sao_tome","tripoli","tunis","windhoek"],america:["adak","anchorage","anguilla","antigua","araguaina","argentina/buenos_aires","argentina/catamarca","argentina/cordoba","argentina/jujuy","argentina/la_rioja","argentina/mendoza","argentina/rio_gallegos","argentina/salta","argentina/san_juan","argentina/san_luis","argentina/tucuman","argentina/ushuaia","aruba","asuncion","atikokan","bahia","bahia_banderas","barbados","belem","belize","blanc-sablon","boa_vista","bogota","boise","cambridge_bay","campo_grande","cancun","caracas","cayenne","cayman","chicago","chihuahua","costa_rica","creston","cuiaba","curacao","danmarkshavn","dawson","dawson_creek","denver","detroit","dominica","edmonton","eirunepe","el_salvador","fortaleza","glace_bay","godthab","goose_bay","grand_turk","grenada","guadeloupe","guatemala","guayaquil","guyana","halifax","havana","hermosillo","indiana/indianapolis","indiana/knox","indiana/marengo","indiana/petersburg","indiana/tell_city","indiana/vevay","indiana/vincennes","indiana/winamac","inuvik","iqaluit","jamaica","juneau","kentucky/louisville","kentucky/monticello","kralendijk","la_paz","lima","los_angeles","lower_princes","maceio","managua","manaus","marigot","martinique","matamoros","mazatlan","menominee","merida","metlakatla","mexico_city","miquelon","moncton","monterrey","montevideo","montreal","montserrat","nassau","new_york","nipigon","nome","noronha","north_dakota/beulah","north_dakota/center","north_dakota/new_salem","ojinaga","panama","pangnirtung","paramaribo","phoenix","port-au-prince","port_of_spain","porto_velho","puerto_rico","rainy_river","rankin_inlet","recife","regina","resolute","rio_branco","santa_isabel","santarem","santiago","santo_domingo","sao_paulo","scoresbysund","shiprock","sitka","st_barthelemy","st_johns","st_kitts","st_lucia","st_thomas","st_vincent","swift_current","tegucigalpa","thule","thunder_bay","tijuana","toronto","tortola","vancouver","whitehorse","winnipeg","yakutat","yellowknife"],antarctica:["casey","davis","dumontdurville","macquarie","mawson","mcmurdo","palmer","rothera","south_pole","syowa","vostok"],arctic:["longyearbyen"],asia:["aden","almaty","amman","anadyr","aqtau","aqtobe","ashgabat","baghdad","bahrain","baku","bangkok","beirut","bishkek","brunei","choibalsan","chongqing","colombo","damascus","dhaka","dili","dubai","dushanbe","gaza","harbin","hebron","ho_chi_minh","hong_kong","hovd","irkutsk","jakarta","jayapura","jerusalem","kabul","kamchatka","karachi","kashgar","kathmandu","khandyga","kolkata","krasnoyarsk","kuala_lumpur","kuching","kuwait","macau","magadan","makassar","manila","muscat","nicosia","novokuznetsk","novosibirsk","omsk","oral","phnom_penh","pontianak","pyongyang","qatar","qyzylorda","rangoon","riyadh","sakhalin","samarkand","seoul","shanghai","singapore","taipei","tashkent","tbilisi","tehran","thimphu","tokyo","ulaanbaatar","urumqi","ust-nera","vientiane","vladivostok","yakutsk","yekaterinburg","yerevan"],atlantic:["azores","bermuda","canary","cape_verde","faroe","madeira","reykjavik","south_georgia","st_helena","stanley"],australia:["adelaide","brisbane","broken_hill","currie","darwin","eucla","hobart","lindeman","lord_howe","melbourne","perth","sydney"],europe:["amsterdam","andorra","athens","belgrade","berlin","bratislava","brussels","bucharest","budapest","busingen","chisinau","copenhagen","dublin","gibraltar","guernsey","helsinki","isle_of_man","istanbul","jersey","kaliningrad","kiev","lisbon","ljubljana","london","luxembourg","madrid","malta","mariehamn","minsk","monaco","moscow","oslo","paris","podgorica","prague","riga","rome","samara","san_marino","sarajevo","simferopol","skopje","sofia","stockholm","tallinn","tirane","uzhgorod","vaduz","vatican","vienna","vilnius","volgograd","warsaw","zagreb","zaporozhye","zurich"],indian:["antananarivo","chagos","christmas","cocos","comoro","kerguelen","mahe","maldives","mauritius","mayotte","reunion"],pacific:["apia","auckland","chatham","chuuk","easter","efate","enderbury","fakaofo","fiji","funafuti","galapagos","gambier","guadalcanal","guam","honolulu","johnston","kiritimati","kosrae","kwajalein","majuro","marquesas","midway","nauru","niue","norfolk","noumea","pago_pago","palau","pitcairn","pohnpei","port_moresby","rarotonga","saipan","tahiti","tarawa","tongatapu","wake","wallis"],utc:[""]},a=e.split("/",2),r=a[0].toLowerCase(),n="";return a[1]&&(n=a[1].toLowerCase()),r in t&&(0===t[r].length||-1!==t[r].indexOf(n))}}}),$.extend(!0,laravelValidation,{methods:{helpers:laravelValidation.helpers,jsRemoteTimer:0,Sometimes:function(){return!0},Filled:function(e,t){return $.validator.methods.required.call(this,e,t,!0)},Required:function(e,t){return $.validator.methods.required.call(this,e,t)},RequiredWith:function(e,t,a){var r=this,n=!1,i=this;return $.each(a,function(e,a){var s=laravelValidation.helpers.dependentElement(i,t,a);n=n||void 0!==s&&$.validator.methods.required.call(r,i.elementValue(s),s,!0)}),n?$.validator.methods.required.call(this,e,t,!0):!0},RequiredWithAll:function(e,t,a){var r=this,n=!0,i=this;return $.each(a,function(e,a){var s=laravelValidation.helpers.dependentElement(i,t,a);n=n&&void 0!==s&&$.validator.methods.required.call(r,i.elementValue(s),s,!0)}),n?$.validator.methods.required.call(this,e,t,!0):!0},RequiredWithout:function(e,t,a){var r=this,n=!1,i=this;return $.each(a,function(e,a){var s=laravelValidation.helpers.dependentElement(i,t,a);n=n||void 0===s||!$.validator.methods.required.call(r,i.elementValue(s),s,!0)}),n?$.validator.methods.required.call(this,e,t,!0):!0},RequiredWithoutAll:function(e,t,a){var r=this,n=!0,i=this;return $.each(a,function(e,a){var s=laravelValidation.helpers.dependentElement(i,t,a);n=n&&(void 0===s||!$.validator.methods.required.call(r,i.elementValue(s),s,!0))}),n?$.validator.methods.required.call(this,e,t,!0):!0},RequiredIf:function(e,t,a){var r=laravelValidation.helpers.dependentElement(this,t,a[0]);if(void 0!==r){var n=String(this.elementValue(r)),i=a.slice(1);if(-1!==$.inArray(n,i))return $.validator.methods.required.call(this,e,t,!0)}return!0},Confirmed:function(e,t,a){return laravelValidation.methods.Same.call(this,e,t,a)},Same:function(e,t,a){var r=laravelValidation.helpers.dependentElement(this,t,a[0]);return void 0!==r?String(e)===String(this.elementValue(r)):!1},Different:function(e,t,a){return!laravelValidation.methods.Same.call(this,e,t,a)},Accepted:function(e){var t=new RegExp("^(?:(yes|on|1|true))$","i");return t.test(e)},Array:function(e){return $.isArray(e)},Boolean:function(e){var t=new RegExp("^(?:(true|false|1|0))$","i");return t.test(e)},Integer:function(e){var t=new RegExp("^(?:-?\\d+)$","i");return t.test(e)},Numeric:function(e,t){return $.validator.methods.number.call(this,e,t,!0)},String:function(e){return"string"==typeof e},Digits:function(e,t,a){return $.validator.methods.number.call(this,e,t,!0)&&e.length===parseInt(a)},DigitsBetween:function(e,t,a){return $.validator.methods.number.call(this,e,t,!0)&&e.length>=parseFloat(a[0])&&e.length<=parseFloat(a[1])},Size:function(e,t,a){return laravelValidation.helpers.getSize(this,t,e)===parseFloat(a[0])},Between:function(e,t,a){return laravelValidation.helpers.getSize(this,t,e)>=parseFloat(a[0])&&laravelValidation.helpers.getSize(this,t,e)<=parseFloat(a[1])},Min:function(e,t,a){return laravelValidation.helpers.getSize(this,t,e)>=parseFloat(a[0])},Max:function(e,t,a){return laravelValidation.helpers.getSize(this,t,e)<=parseFloat(a[0])},In:function(e,t,a){if($.isArray(e)&&laravelValidation.helpers.hasRules(t,"Array")){var r=laravelValidation.helpers.arrayDiff(e,a);return 0===Object.keys(r).length}return-1!==a.indexOf(e.toString())},NotIn:function(e,t,a){return-1===a.indexOf(e.toString())},Ip:function(e){return/^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(e)||/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(e)},Email:function(e,t){return $.validator.methods.email.call(this,e,t,!0)},Url:function(e,t){return $.validator.methods.url.call(this,e,t,!0)},Mimes:function(e,t,a){var r=$.map(a,String.toLowerCase);return!(window.File&&window.FileReader&&window.FileList&&window.Blob&&-1===r.indexOf(laravelValidation.helpers.fileinfo(t).extension.toLowerCase()))},Image:function(e,t){return laravelValidation.methods.Mimes.call(this,e,t,["jpg","png","gif","bmp","svg"])},Alpha:function(e){if("string"!=typeof e)return!1;var t=new RegExp("^(?:^[a-zà-ü]+$)$","i");return t.test(e)},AlphaNum:function(e){if("string"!=typeof e)return!1;var t=new RegExp("^(?:^[a-z0-9à-ü]+$)$","i");return t.test(e)},AlphaDash:function(e){if("string"!=typeof e)return!1;var t=new RegExp("^(?:^[a-z0-9à-ü_-]+$)$","i");return t.test(e)},Regex:function(e,t,a){var r=["x","s","u","X","U","A"],n=new RegExp("^(?:/)(.*\\/?[^/]*|[^/]*)(?:/)([gmixXsuUAJ]*)?$"),i=a[0].match(n);if(null==i)return!1;var s=[];if(void 0!==i[2]){s=i[2].split("");for(var o=0;o<s.length<o;o++)if(-1!==r.indexOf(s[o]))return!0}var l=new RegExp("^(?:"+i[1]+")$",s.join());return l.test(e)},Date:function(e){return laravelValidation.helpers.strtotime(e)!==!1},DateFormat:function(e,t,a){return laravelValidation.helpers.parseTime(e,a[0])!==!1},Before:function(e,t,a){var r=parseFloat(a);if(isNaN(r)){var n=laravelValidation.helpers.dependentElement(this,t,a);if(void 0===n)return!1;r=laravelValidation.helpers.parseTime(this.elementValue(n),n)}var i=laravelValidation.helpers.parseTime(e,t);return i!==!1&&r>i},After:function(e,t,a){var r=parseFloat(a);if(isNaN(r)){var n=laravelValidation.helpers.dependentElement(this,t,a);if(void 0===n)return!1;r=laravelValidation.helpers.parseTime(this.elementValue(n),n)}var i=laravelValidation.helpers.parseTime(e,t);return i!==!1&&i>r},Timezone:function(e){return laravelValidation.helpers.isTimezone(e)},Json:function(e){var t=!0;try{JSON.parse(e)}catch(a){t=!1}return t}}});
\ No newline at end of file
+function strlen(e){var t=e+"",a=0,r="",n=0;if(!this.php_js||!this.php_js.ini||!this.php_js.ini["unicode.semantics"]||"on"!==this.php_js.ini["unicode.semantics"].local_value.toLowerCase())return e.length;var i=function(e,t){var a=e.charCodeAt(t),r="",n="";if(55296<=a&&a<=56319){if(e.length<=t+1)throw"High surrogate without following low surrogate";if(r=e.charCodeAt(t+1),56320>r||r>57343)throw"High surrogate without following low surrogate";return e.charAt(t)+e.charAt(t+1)}if(56320<=a&&a<=57343){if(0===t)throw"Low surrogate without preceding high surrogate";if(n=e.charCodeAt(t-1),55296>n||n>56319)throw"Low surrogate without preceding high surrogate";return!1}return e.charAt(t)};for(a=0,n=0;a<t.length;a++)(r=i(t,a))!==!1&&n++;return n}function array_diff(e){var t={},a=arguments.length,r="",n=1,i="",s={};e:for(r in e)for(n=1;n<a;n++){s=arguments[n];for(i in s)if(s[i]===e[r])continue e;t[r]=e[r]}return t}function strtotime(e,t){function a(e,t,a){var r,n=u[t];"undefined"!=typeof n&&(r=n-l.getDay(),0===r?r=7*a:r>0&&"last"===e?r-=7:r<0&&"next"===e&&(r+=7),l.setDate(l.getDate()+r))}function r(e){var t=e.split(" "),r=t[0],n=t[1].substring(0,3),i=/\d+/.test(r),s="ago"===t[2],o=("last"===r?-1:1)*(s?-1:1);if(i&&(o*=parseInt(r,10)),d.hasOwnProperty(n)&&!t[1].match(/^mon(day|\.)?$/i))return l["set"+d[n]](l["get"+d[n]]()+o);if("wee"===n)return l.setDate(l.getDate()+7*o);if("next"===r||"last"===r)a(r,n,o);else if(!i)return!1;return!0}var n,i,s,o,l,u,d,h,c,m,f,g=!1;if(!e)return g;if(e=e.replace(/^\s+|\s+$/g,"").replace(/\s{2,}/g," ").replace(/[\t\r\n]/g,"").toLowerCase(),i=e.match(/^(\d{1,4})([\-\.\/\:])(\d{1,2})([\-\.\/\:])(\d{1,4})(?:\s(\d{1,2}):(\d{2})?:?(\d{2})?)?(?:\s([A-Z]+)?)?$/),i&&i[2]===i[4])if(i[1]>1901)switch(i[2]){case"-":return i[3]>12||i[5]>31?g:new Date(i[1],parseInt(i[3],10)-1,i[5],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3;case".":return g;case"/":return i[3]>12||i[5]>31?g:new Date(i[1],parseInt(i[3],10)-1,i[5],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3}else if(i[5]>1901)switch(i[2]){case"-":return i[3]>12||i[1]>31?g:new Date(i[5],parseInt(i[3],10)-1,i[1],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3;case".":return i[3]>12||i[1]>31?g:new Date(i[5],parseInt(i[3],10)-1,i[1],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3;case"/":return i[1]>12||i[3]>31?g:new Date(i[5],parseInt(i[1],10)-1,i[3],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3}else switch(i[2]){case"-":return i[3]>12||i[5]>31||i[1]<70&&i[1]>38?g:(o=i[1]>=0&&i[1]<=38?+i[1]+2e3:i[1],new Date(o,parseInt(i[3],10)-1,i[5],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3);case".":return i[5]>=70?i[3]>12||i[1]>31?g:new Date(i[5],parseInt(i[3],10)-1,i[1],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3:i[5]<60&&!i[6]?i[1]>23||i[3]>59?g:(s=new Date,new Date(s.getFullYear(),s.getMonth(),s.getDate(),i[1]||0,i[3]||0,i[5]||0,i[9]||0)/1e3):g;case"/":return i[1]>12||i[3]>31||i[5]<70&&i[5]>38?g:(o=i[5]>=0&&i[5]<=38?+i[5]+2e3:i[5],new Date(o,parseInt(i[1],10)-1,i[3],i[6]||0,i[7]||0,i[8]||0,i[9]||0)/1e3);case":":return i[1]>23||i[3]>59||i[5]>59?g:(s=new Date,new Date(s.getFullYear(),s.getMonth(),s.getDate(),i[1]||0,i[3]||0,i[5]||0)/1e3)}if("now"===e)return null===t||isNaN(t)?(new Date).getTime()/1e3|0:0|t;if(!isNaN(n=Date.parse(e)))return n/1e3|0;if((i=e.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2})[ t]([0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?)([\+-][0-9]{2}(:[0-9]{2})?|z)/))&&("z"==i[4]?i[4]="Z":i[4].match(/^([\+-][0-9]{2})$/)&&(i[4]=i[4]+":00"),!isNaN(n=Date.parse(i[1]+"T"+i[2]+i[4]))))return n/1e3|0;if(l=t?new Date(1e3*t):new Date,u={sun:0,mon:1,tue:2,wed:3,thu:4,fri:5,sat:6},d={yea:"FullYear",mon:"Month",day:"Date",hou:"Hours",min:"Minutes",sec:"Seconds"},c="(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec|sunday|sun\\.?|monday|mon\\.?|tuesday|tue\\.?|wednesday|wed\\.?|thursday|thu\\.?|friday|fri\\.?|saturday|sat\\.?)",m="([+-]?\\d+\\s"+c+"|(last|next)\\s"+c+")(\\sago)?",i=e.match(new RegExp(m,"gi")),!i)return g;for(f=0,h=i.length;f<h;f++)if(!r(i[f]))return g;return l.getTime()/1e3}function is_numeric(e){var t=" \n\r\t\f\x0B            ​\u2028\u2029　";return("number"==typeof e||"string"==typeof e&&t.indexOf(e.slice(-1))===-1)&&""!==e&&!isNaN(e)}!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)}(function(e){e.extend(e.fn,{validate:function(t){if(!this.length)return void(t&&t.debug&&window.console);var a=e.data(this[0],"validator");return a?a:(this.attr("novalidate","novalidate"),a=new e.validator(t,this[0]),e.data(this[0],"validator",a),a.settings.onsubmit&&(this.on("click.validate",":submit",function(t){a.settings.submitHandler&&(a.submitButton=t.target),e(this).hasClass("cancel")&&(a.cancelSubmit=!0),void 0!==e(this).attr("formnovalidate")&&(a.cancelSubmit=!0)}),this.on("submit.validate",function(t){function r(){var r,n;return!a.settings.submitHandler||(a.submitButton&&(r=e("<input type='hidden'/>").attr("name",a.submitButton.name).val(e(a.submitButton).val()).appendTo(a.currentForm)),n=a.settings.submitHandler.call(a,a.currentForm,t),a.submitButton&&r.remove(),void 0!==n&&n)}return a.settings.debug&&t.preventDefault(),a.cancelSubmit?(a.cancelSubmit=!1,r()):a.form()?a.pendingRequest?(a.formSubmitted=!0,!1):r():(a.focusInvalid(),!1)})),a)},valid:function(){var t,a,r;return e(this[0]).is("form")?t=this.validate().form():(r=[],t=!0,a=e(this[0].form).validate(),this.each(function(){t=a.element(this)&&t,r=r.concat(a.errorList)}),a.errorList=r),t},rules:function(t,a){var r,n,i,s,o,l,u=this[0];if(t)switch(r=e.data(u.form,"validator").settings,n=r.rules,i=e.validator.staticRules(u),t){case"add":e.extend(i,e.validator.normalizeRule(a)),delete i.messages,n[u.name]=i,a.messages&&(r.messages[u.name]=e.extend(r.messages[u.name],a.messages));break;case"remove":return a?(l={},e.each(a.split(/\s/),function(t,a){l[a]=i[a],delete i[a],"required"===a&&e(u).removeAttr("aria-required")}),l):(delete n[u.name],i)}return s=e.validator.normalizeRules(e.extend({},e.validator.classRules(u),e.validator.attributeRules(u),e.validator.dataRules(u),e.validator.staticRules(u)),u),s.required&&(o=s.required,delete s.required,s=e.extend({required:o},s),e(u).attr("aria-required","true")),s.remote&&(o=s.remote,delete s.remote,s=e.extend(s,{remote:o})),s}}),e.extend(e.expr[":"],{blank:function(t){return!e.trim(""+e(t).val())},filled:function(t){return!!e.trim(""+e(t).val())},unchecked:function(t){return!e(t).prop("checked")}}),e.validator=function(t,a){this.settings=e.extend(!0,{},e.validator.defaults,t),this.currentForm=a,this.init()},e.validator.format=function(t,a){return 1===arguments.length?function(){var a=e.makeArray(arguments);return a.unshift(t),e.validator.format.apply(this,a)}:(arguments.length>2&&a.constructor!==Array&&(a=e.makeArray(arguments).slice(1)),a.constructor!==Array&&(a=[a]),e.each(a,function(e,a){t=t.replace(new RegExp("\\{"+e+"\\}","g"),function(){return a})}),t)},e.extend(e.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:e([]),errorLabelContainer:e([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(e){this.lastActive=e,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,e,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(e)))},onfocusout:function(e){this.checkable(e)||!(e.name in this.submitted)&&this.optional(e)||this.element(e)},onkeyup:function(t,a){var r=[16,17,18,20,35,36,37,38,39,40,45,144,225];9===a.which&&""===this.elementValue(t)||e.inArray(a.keyCode,r)!==-1||(t.name in this.submitted||t===this.lastElement)&&this.element(t)},onclick:function(e){e.name in this.submitted?this.element(e):e.parentNode.name in this.submitted&&this.element(e.parentNode)},highlight:function(t,a,r){"radio"===t.type?this.findByName(t.name).addClass(a).removeClass(r):e(t).addClass(a).removeClass(r)},unhighlight:function(t,a,r){"radio"===t.type?this.findByName(t.name).removeClass(a).addClass(r):e(t).removeClass(a).addClass(r)}},setDefaults:function(t){e.extend(e.validator.defaults,t)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date ( ISO ).",number:"Please enter a valid number.",digits:"Please enter only digits.",creditcard:"Please enter a valid credit card number.",equalTo:"Please enter the same value again.",maxlength:e.validator.format("Please enter no more than {0} characters."),minlength:e.validator.format("Please enter at least {0} characters."),rangelength:e.validator.format("Please enter a value between {0} and {1} characters long."),range:e.validator.format("Please enter a value between {0} and {1}."),max:e.validator.format("Please enter a value less than or equal to {0}."),min:e.validator.format("Please enter a value greater than or equal to {0}.")},autoCreateRanges:!1,prototype:{init:function(){function t(t){var a=e.data(this.form,"validator"),r="on"+t.type.replace(/^validate/,""),n=a.settings;n[r]&&!e(this).is(n.ignore)&&n[r].call(a,this,t)}this.labelContainer=e(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||e(this.currentForm),this.containers=e(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var a,r=this.groups={};e.each(this.settings.groups,function(t,a){"string"==typeof a&&(a=a.split(/\s/)),e.each(a,function(e,a){r[a]=t})}),a=this.settings.rules,e.each(a,function(t,r){a[t]=e.validator.normalizeRule(r)}),e(this.currentForm).on("focusin.validate focusout.validate keyup.validate",":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox']",t).on("click.validate","select, option, [type='radio'], [type='checkbox']",t),this.settings.invalidHandler&&e(this.currentForm).on("invalid-form.validate",this.settings.invalidHandler),e(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required","true")},form:function(){return this.checkForm(),e.extend(this.submitted,this.errorMap),this.invalid=e.extend({},this.errorMap),this.valid()||e(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var e=0,t=this.currentElements=this.elements();t[e];e++)this.check(t[e]);return this.valid()},element:function(t){var a=this.clean(t),r=this.validationTargetFor(a),n=!0;return this.lastElement=r,void 0===r?delete this.invalid[a.name]:(this.prepareElement(r),this.currentElements=e(r),n=this.check(r)!==!1,n?delete this.invalid[r.name]:this.invalid[r.name]=!0),e(t).attr("aria-invalid",!n),this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),n},showErrors:function(t){if(t){e.extend(this.errorMap,t),this.errorList=[];for(var a in t)this.errorList.push({message:t[a],element:this.findByName(a)[0]});this.successList=e.grep(this.successList,function(e){return!(e.name in t)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){e.fn.resetForm&&e(this.currentForm).resetForm(),this.submitted={},this.lastElement=null,this.prepareForm(),this.hideErrors();var t,a=this.elements().removeData("previousValue").removeAttr("aria-invalid");if(this.settings.unhighlight)for(t=0;a[t];t++)this.settings.unhighlight.call(this,a[t],this.settings.errorClass,"");else a.removeClass(this.settings.errorClass)},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(e){var t,a=0;for(t in e)a++;return a},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(e){e.not(this.containers).text(""),this.addWrapper(e).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{e(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").focus().trigger("focusin")}catch(t){}},findLastActive:function(){var t=this.lastActive;return t&&1===e.grep(this.errorList,function(e){return e.element.name===t.name}).length&&t},elements:function(){var t=this,a={};return e(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function(){return!this.name&&t.settings.debug&&window.console,!(this.name in a||!t.objectLength(e(this).rules()))&&(a[this.name]=!0,!0)})},clean:function(t){return e(t)[0]},errors:function(){var t=this.settings.errorClass.split(" ").join(".");return e(this.settings.errorElement+"."+t,this.errorContext)},reset:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=e([]),this.toHide=e([]),this.currentElements=e([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(e){this.reset(),this.toHide=this.errorsFor(e)},elementValue:function(t){var a,r=e(t),n=t.type;return"radio"===n||"checkbox"===n?this.findByName(t.name).filter(":checked").val():"number"===n&&"undefined"!=typeof t.validity?!t.validity.badInput&&r.val():(a=r.val(),"string"==typeof a?a.replace(/\r/g,""):a)},check:function(t){t=this.validationTargetFor(this.clean(t));var a,r,n,i=e(t).rules(),s=e.map(i,function(e,t){return t}).length,o=!1,l=this.elementValue(t);for(r in i){n={method:r,parameters:i[r]};try{if(a=e.validator.methods[r].call(this,l,t,n.parameters),"dependency-mismatch"===a&&1===s){o=!0;continue}if(o=!1,"pending"===a)return void(this.toHide=this.toHide.not(this.errorsFor(t)));if(!a)return this.formatAndAdd(t,n),!1}catch(u){throw this.settings.debug&&window.console,u instanceof TypeError&&(u.message+=".  Exception occurred when checking element "+t.id+", check the '"+n.method+"' method."),u}}if(!o)return this.objectLength(i)&&this.successList.push(t),!0},customDataMessage:function(t,a){return e(t).data("msg"+a.charAt(0).toUpperCase()+a.substring(1).toLowerCase())||e(t).data("msg")},customMessage:function(e,t){var a=this.settings.messages[e];return a&&(a.constructor===String?a:a[t])},findDefined:function(){for(var e=0;e<arguments.length;e++)if(void 0!==arguments[e])return arguments[e]},defaultMessage:function(t,a){return this.findDefined(this.customMessage(t.name,a),this.customDataMessage(t,a),!this.settings.ignoreTitle&&t.title||void 0,e.validator.messages[a],"<strong>Warning: No message defined for "+t.name+"</strong>")},formatAndAdd:function(t,a){var r=this.defaultMessage(t,a.method),n=/\$?\{(\d+)\}/g;"function"==typeof r?r=r.call(this,a.parameters,t):n.test(r)&&(r=e.validator.format(r.replace(n,"{$1}"),a.parameters)),this.errorList.push({message:r,element:t,method:a.method}),this.errorMap[t.name]=r,this.submitted[t.name]=r},addWrapper:function(e){return this.settings.wrapper&&(e=e.add(e.parent(this.settings.wrapper))),e},defaultShowErrors:function(){var e,t,a;for(e=0;this.errorList[e];e++)a=this.errorList[e],this.settings.highlight&&this.settings.highlight.call(this,a.element,this.settings.errorClass,this.settings.validClass),this.showLabel(a.element,a.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(e=0;this.successList[e];e++)this.showLabel(this.successList[e]);if(this.settings.unhighlight)for(e=0,t=this.validElements();t[e];e++)this.settings.unhighlight.call(this,t[e],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return e(this.errorList).map(function(){return this.element})},showLabel:function(t,a){var r,n,i,s=this.errorsFor(t),o=this.idOrName(t),l=e(t).attr("aria-describedby");s.length?(s.removeClass(this.settings.validClass).addClass(this.settings.errorClass),s.html(a)):(s=e("<"+this.settings.errorElement+">").attr("id",o+"-error").addClass(this.settings.errorClass).html(a||""),r=s,this.settings.wrapper&&(r=s.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(r):this.settings.errorPlacement?this.settings.errorPlacement(r,e(t)):r.insertAfter(t),s.is("label")?s.attr("for",o):0===s.parents("label[for='"+o+"']").length&&(i=s.attr("id").replace(/(:|\.|\[|\]|\$)/g,"\\$1"),l?l.match(new RegExp("\\b"+i+"\\b"))||(l+=" "+i):l=i,e(t).attr("aria-describedby",l),n=this.groups[t.name],n&&e.each(this.groups,function(t,a){a===n&&e("[name='"+t+"']",this.currentForm).attr("aria-describedby",s.attr("id"))}))),!a&&this.settings.success&&(s.text(""),"string"==typeof this.settings.success?s.addClass(this.settings.success):this.settings.success(s,t)),this.toShow=this.toShow.add(s)},errorsFor:function(t){var a=this.idOrName(t),r=e(t).attr("aria-describedby"),n="label[for='"+a+"'], label[for='"+a+"'] *";return r&&(n=n+", #"+r.replace(/\s+/g,", #")),this.errors().filter(n)},idOrName:function(e){return this.groups[e.name]||(this.checkable(e)?e.name:e.id||e.name)},validationTargetFor:function(t){return this.checkable(t)&&(t=this.findByName(t.name)),e(t).not(this.settings.ignore)[0]},checkable:function(e){return/radio|checkbox/i.test(e.type)},findByName:function(t){return e(this.currentForm).find("[name='"+t+"']")},getLength:function(t,a){switch(a.nodeName.toLowerCase()){case"select":return e("option:selected",a).length;case"input":if(this.checkable(a))return this.findByName(a.name).filter(":checked").length}return t.length},depend:function(e,t){return!this.dependTypes[typeof e]||this.dependTypes[typeof e](e,t)},dependTypes:{"boolean":function(e){return e},string:function(t,a){return!!e(t,a.form).length},"function":function(e,t){return e(t)}},optional:function(t){var a=this.elementValue(t);return!e.validator.methods.required.call(this,a,t)&&"dependency-mismatch"},startRequest:function(e){this.pending[e.name]||(this.pendingRequest++,this.pending[e.name]=!0)},stopRequest:function(t,a){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[t.name],a&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(e(this.currentForm).submit(),this.formSubmitted=!1):!a&&0===this.pendingRequest&&this.formSubmitted&&(e(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(t){return e.data(t,"previousValue")||e.data(t,"previousValue",{old:null,valid:!0,message:this.defaultMessage(t,"remote")})},destroy:function(){this.resetForm(),e(this.currentForm).off(".validate").removeData("validator")}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(t,a){t.constructor===String?this.classRuleSettings[t]=a:e.extend(this.classRuleSettings,t)},classRules:function(t){var a={},r=e(t).attr("class");return r&&e.each(r.split(" "),function(){this in e.validator.classRuleSettings&&e.extend(a,e.validator.classRuleSettings[this])}),a},normalizeAttributeRule:function(e,t,a,r){/min|max/.test(a)&&(null===t||/number|range|text/.test(t))&&(r=Number(r),isNaN(r)&&(r=void 0)),r||0===r?e[a]=r:t===a&&"range"!==t&&(e[a]=!0)},attributeRules:function(t){var a,r,n={},i=e(t),s=t.getAttribute("type");for(a in e.validator.methods)"required"===a?(r=t.getAttribute(a),""===r&&(r=!0),r=!!r):r=i.attr(a),this.normalizeAttributeRule(n,s,a,r);return n.maxlength&&/-1|2147483647|524288/.test(n.maxlength)&&delete n.maxlength,n},dataRules:function(t){var a,r,n={},i=e(t),s=t.getAttribute("type");for(a in e.validator.methods)r=i.data("rule"+a.charAt(0).toUpperCase()+a.substring(1).toLowerCase()),this.normalizeAttributeRule(n,s,a,r);return n},staticRules:function(t){var a={},r=e.data(t.form,"validator");return r.settings.rules&&(a=e.validator.normalizeRule(r.settings.rules[t.name])||{}),a},normalizeRules:function(t,a){return e.each(t,function(r,n){if(n===!1)return void delete t[r];if(n.param||n.depends){var i=!0;switch(typeof n.depends){case"string":i=!!e(n.depends,a.form).length;break;case"function":i=n.depends.call(a,a)}i?t[r]=void 0===n.param||n.param:delete t[r]}}),e.each(t,function(r,n){t[r]=e.isFunction(n)?n(a):n}),e.each(["minlength","maxlength"],function(){t[this]&&(t[this]=Number(t[this]))}),e.each(["rangelength","range"],function(){var a;t[this]&&(e.isArray(t[this])?t[this]=[Number(t[this][0]),Number(t[this][1])]:"string"==typeof t[this]&&(a=t[this].replace(/[\[\]]/g,"").split(/[\s,]+/),t[this]=[Number(a[0]),Number(a[1])]))}),e.validator.autoCreateRanges&&(null!=t.min&&null!=t.max&&(t.range=[t.min,t.max],delete t.min,delete t.max),null!=t.minlength&&null!=t.maxlength&&(t.rangelength=[t.minlength,t.maxlength],delete t.minlength,delete t.maxlength)),t},normalizeRule:function(t){if("string"==typeof t){var a={};e.each(t.split(/\s/),function(){a[this]=!0}),t=a}return t},addMethod:function(t,a,r){e.validator.methods[t]=a,e.validator.messages[t]=void 0!==r?r:e.validator.messages[t],a.length<3&&e.validator.addClassRules(t,e.validator.normalizeRule(t))},methods:{required:function(t,a,r){if(!this.depend(r,a))return"dependency-mismatch";if("select"===a.nodeName.toLowerCase()){var n=e(a).val();return n&&n.length>0}return this.checkable(a)?this.getLength(t,a)>0:t.length>0},email:function(e,t){return this.optional(t)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(e)},url:function(e,t){return this.optional(t)||/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[\/?#]\S*)?$/i.test(e)},date:function(e,t){return this.optional(t)||!/Invalid|NaN/.test(new Date(e).toString())},dateISO:function(e,t){return this.optional(t)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(e)},number:function(e,t){return this.optional(t)||/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(e)},digits:function(e,t){return this.optional(t)||/^\d+$/.test(e)},creditcard:function(e,t){if(this.optional(t))return"dependency-mismatch";if(/[^0-9 \-]+/.test(e))return!1;var a,r,n=0,i=0,s=!1;if(e=e.replace(/\D/g,""),e.length<13||e.length>19)return!1;for(a=e.length-1;a>=0;a--)r=e.charAt(a),i=parseInt(r,10),s&&(i*=2)>9&&(i-=9),n+=i,s=!s;return n%10===0},minlength:function(t,a,r){var n=e.isArray(t)?t.length:this.getLength(t,a);return this.optional(a)||n>=r},maxlength:function(t,a,r){var n=e.isArray(t)?t.length:this.getLength(t,a);return this.optional(a)||n<=r},rangelength:function(t,a,r){var n=e.isArray(t)?t.length:this.getLength(t,a);return this.optional(a)||n>=r[0]&&n<=r[1]},min:function(e,t,a){return this.optional(t)||e>=a},max:function(e,t,a){return this.optional(t)||e<=a},range:function(e,t,a){return this.optional(t)||e>=a[0]&&e<=a[1]},equalTo:function(t,a,r){var n=e(r);return this.settings.onfocusout&&n.off(".validate-equalTo").on("blur.validate-equalTo",function(){e(a).valid()}),t===n.val()},remote:function(t,a,r){if(this.optional(a))return"dependency-mismatch";var n,i,s=this.previousValue(a);return this.settings.messages[a.name]||(this.settings.messages[a.name]={}),s.originalMessage=this.settings.messages[a.name].remote,this.settings.messages[a.name].remote=s.message,r="string"==typeof r&&{url:r}||r,s.old===t?s.valid:(s.old=t,n=this,this.startRequest(a),i={},i[a.name]=t,e.ajax(e.extend(!0,{mode:"abort",port:"validate"+a.name,dataType:"json",data:i,context:n.currentForm,success:function(r){var i,o,l,u=r===!0||"true"===r;n.settings.messages[a.name].remote=s.originalMessage,u?(l=n.formSubmitted,n.prepareElement(a),n.formSubmitted=l,n.successList.push(a),delete n.invalid[a.name],n.showErrors()):(i={},o=r||n.defaultMessage(a,"remote"),i[a.name]=s.message=e.isFunction(o)?o(t):o,n.invalid[a.name]=!0,n.showErrors(i)),s.valid=u,n.stopRequest(a,u)}},r)),"pending")}}});var t,a={};e.ajaxPrefilter?e.ajaxPrefilter(function(e,t,r){var n=e.port;"abort"===e.mode&&(a[n]&&a[n].abort(),a[n]=r)}):(t=e.ajax,e.ajax=function(r){var n=("mode"in r?r:e.ajaxSettings).mode,i=("port"in r?r:e.ajaxSettings).port;return"abort"===n?(a[i]&&a[i].abort(),a[i]=t.apply(this,arguments),a[i]):t.apply(this,arguments)})});var DateFormatter;!function(){"use strict";var e,t,a,r,n,i,s;i=864e5,s=3600,e=function(e,t){return"string"==typeof e&&"string"==typeof t&&e.toLowerCase()===t.toLowerCase()},t=function(e,a,r){var n=e.toString();return r=r||"0",n.length<a?t(r+n,a):n},a=function(e){var t,r;for(e=e||{},t=1;t<arguments.length;t++)if(r=arguments[t])for(var n in r)r.hasOwnProperty(n)&&("object"==typeof r[n]?a(e[n],r[n]):e[n]=r[n]);return e},r=function(e,t){for(var a=0;a<t.length;a++)if(t[a].toLowerCase()===e.toLowerCase())return a;return-1},n={dateSettings:{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],meridiem:["AM","PM"],ordinal:function(e){var t=e%10,a={1:"st",2:"nd",3:"rd"};return 1!==Math.floor(e%100/10)&&a[t]?a[t]:"th"}},separators:/[ \-+\/\.T:@]/g,validParts:/[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,intParts:/[djwNzmnyYhHgGis]/g,tzParts:/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,tzClip:/[^-+\dA-Z]/g},DateFormatter=function(e){var t=this,r=a(n,e);t.dateSettings=r.dateSettings,t.separators=r.separators,t.validParts=r.validParts,t.intParts=r.intParts,t.tzParts=r.tzParts,t.tzClip=r.tzClip},DateFormatter.prototype={constructor:DateFormatter,getMonth:function(e){var t,a=this;return t=r(e,a.dateSettings.monthsShort)+1,0===t&&(t=r(e,a.dateSettings.months)+1),t},parseDate:function(t,a){var r,n,i,s,o,l,u,d,h,c,m=this,f=!1,g=!1,p=m.dateSettings,v={date:null,year:null,month:null,day:null,hour:0,min:0,sec:0};if(!t)return null;if(t instanceof Date)return t;if("U"===a)return i=parseInt(t),i?new Date(1e3*i):t;switch(typeof t){case"number":return new Date(t);case"string":break;default:return null}if(r=a.match(m.validParts),!r||0===r.length)throw new Error("Invalid date format definition.");for(n=t.replace(m.separators,"\0").split("\0"),i=0;i<n.length;i++)switch(s=n[i],o=parseInt(s),r[i]){case"y":case"Y":if(!o)return null;h=s.length,v.year=2===h?parseInt((o<70?"20":"19")+s):o,f=!0;break;case"m":case"n":case"M":case"F":if(isNaN(o)){if(l=m.getMonth(s),!(l>0))return null;v.month=l}else{if(!(o>=1&&o<=12))return null;v.month=o}f=!0;break;case"d":case"j":if(!(o>=1&&o<=31))return null;v.day=o,f=!0;break;case"g":case"h":if(u=r.indexOf("a")>-1?r.indexOf("a"):r.indexOf("A")>-1?r.indexOf("A"):-1,c=n[u],u!==-1)d=e(c,p.meridiem[0])?0:e(c,p.meridiem[1])?12:-1,o>=1&&o<=12&&d!==-1?v.hour=o%12===0?d:o+d:o>=0&&o<=23&&(v.hour=o);else{if(!(o>=0&&o<=23))return null;v.hour=o}g=!0;break;case"G":case"H":if(!(o>=0&&o<=23))return null;v.hour=o,g=!0;break;case"i":if(!(o>=0&&o<=59))return null;v.min=o,g=!0;break;case"s":if(!(o>=0&&o<=59))return null;v.sec=o,g=!0}if(f===!0&&v.year&&v.month&&v.day)v.date=new Date(v.year,v.month-1,v.day,v.hour,v.min,v.sec,0);else{if(g!==!0)return null;v.date=new Date(0,0,0,v.hour,v.min,v.sec,0)}return v.date},guessDate:function(e,t){if("string"!=typeof e)return e;var a,r,n,i,s,o,l=this,u=e.replace(l.separators,"\0").split("\0"),d=/^[djmn]/g,h=t.match(l.validParts),c=new Date,m=0;if(!d.test(h[0]))return e;for(n=0;n<u.length;n++){if(m=2,s=u[n],o=parseInt(s.substr(0,2)),isNaN(o))return null;switch(n){case 0:"m"===h[0]||"n"===h[0]?c.setMonth(o-1):c.setDate(o);break;case 1:"m"===h[0]||"n"===h[0]?c.setDate(o):c.setMonth(o-1);break;case 2:if(r=c.getFullYear(),a=s.length,m=a<4?a:4,r=parseInt(a<4?r.toString().substr(0,4-a)+s:s.substr(0,4)),!r)return null;c.setFullYear(r);break;case 3:c.setHours(o);break;case 4:c.setMinutes(o);break;case 5:c.setSeconds(o)}i=s.substr(m),i.length>0&&u.splice(n+1,0,i)}return c},parseFormat:function(e,a){var r,n=this,o=n.dateSettings,l=/\\?(.?)/gi,u=function(e,t){return r[e]?r[e]():t};return r={d:function(){return t(r.j(),2)},D:function(){return o.daysShort[r.w()]},j:function(){return a.getDate()},l:function(){return o.days[r.w()]},N:function(){return r.w()||7},w:function(){return a.getDay()},z:function(){var e=new Date(r.Y(),r.n()-1,r.j()),t=new Date(r.Y(),0,1);return Math.round((e-t)/i)},W:function(){var e=new Date(r.Y(),r.n()-1,r.j()-r.N()+3),a=new Date(e.getFullYear(),0,4);return t(1+Math.round((e-a)/i/7),2)},F:function(){return o.months[a.getMonth()]},m:function(){return t(r.n(),2)},M:function(){return o.monthsShort[a.getMonth()]},n:function(){return a.getMonth()+1},t:function(){return new Date(r.Y(),r.n(),0).getDate()},L:function(){var e=r.Y();return e%4===0&&e%100!==0||e%400===0?1:0},o:function(){var e=r.n(),t=r.W(),a=r.Y();return a+(12===e&&t<9?1:1===e&&t>9?-1:0)},Y:function(){return a.getFullYear()},y:function(){return r.Y().toString().slice(-2)},a:function(){return r.A().toLowerCase()},A:function(){var e=r.G()<12?0:1;return o.meridiem[e]},B:function(){var e=a.getUTCHours()*s,r=60*a.getUTCMinutes(),n=a.getUTCSeconds();return t(Math.floor((e+r+n+s)/86.4)%1e3,3)},g:function(){return r.G()%12||12},G:function(){return a.getHours()},h:function(){return t(r.g(),2)},H:function(){return t(r.G(),2)},i:function(){return t(a.getMinutes(),2)},s:function(){return t(a.getSeconds(),2)},u:function(){return t(1e3*a.getMilliseconds(),6)},e:function(){var e=/\((.*)\)/.exec(String(a))[1];return e||"Coordinated Universal Time"},I:function(){var e=new Date(r.Y(),0),t=Date.UTC(r.Y(),0),a=new Date(r.Y(),6),n=Date.UTC(r.Y(),6);return e-t!==a-n?1:0},O:function(){var e=a.getTimezoneOffset(),r=Math.abs(e);return(e>0?"-":"+")+t(100*Math.floor(r/60)+r%60,4)},P:function(){var e=r.O();return e.substr(0,3)+":"+e.substr(3,2)},T:function(){var e=(String(a).match(n.tzParts)||[""]).pop().replace(n.tzClip,"");return e||"UTC"},Z:function(){return 60*-a.getTimezoneOffset()},c:function(){return"Y-m-d\\TH:i:sP".replace(l,u)},r:function(){return"D, d M Y H:i:s O".replace(l,u)},U:function(){return a.getTime()/1e3||0}},u(e,e)},formatDate:function(e,t){var a,r,n,i,s,o=this,l="",u="\\";if("string"==typeof e&&(e=o.parseDate(e,t),!e))return null;if(e instanceof Date){for(n=t.length,a=0;a<n;a++)s=t.charAt(a),"S"!==s&&s!==u&&(a>0&&t.charAt(a-1)===u?l+=s:(i=o.parseFormat(s,e),a!==n-1&&o.intParts.test(s)&&"S"===t.charAt(a+1)&&(r=parseInt(i)||0,i+=o.dateSettings.ordinal(r)),l+=i));return l}return""}}}();var laravelValidation;laravelValidation={implicitRules:["Required","Confirmed"],init:function(){$.validator.classRuleSettings={},$.validator.attributeRules=function(){this.rules={}},$.validator.dataRules=this.arrayRules,$.validator.prototype.arrayRulesCache={},this.setupValidations()},arrayRules:function(e){var t={},a=$.data(e.form,"validator"),r=a.arrayRulesCache;return e.name.indexOf("[")===-1?t:(e.name in r||(r[e.name]={}),$.each(a.settings.rules,function(a,n){if(a in r[e.name])$.extend(t,r[e.name][a]);else{r[e.name][a]={};var i=laravelValidation.helpers.regexFromWildcard(a);if(e.name.match(i)){var s=$.validator.normalizeRule(n)||{};r[e.name][a]=s,$.extend(t,s)}}}),t)},setupValidations:function(){$.validator.addMethod("laravelValidation",function(e,t,a){var r=this,n=!0,i=this.previousValue(t),s=[];return $.each(a,function(e,t){t[3]||laravelValidation.implicitRules.indexOf(t[0])!==-1?s.unshift(t):s.push(t);
+}),$.each(s,function(a,s){var o=s[3]||laravelValidation.implicitRules.indexOf(s[0])!==-1,l=s[0],u=s[2];return!o&&r.optional(t)?(n="dependency-mismatch",!1):(n=void 0!==laravelValidation.methods[l]&&laravelValidation.methods[l].call(r,e,t,s[1],function(a){if(r.settings.messages[t.name].laravelValidationRemote=i.originalMessage,a){var n=r.formSubmitted;r.prepareElement(t),r.formSubmitted=n,r.successList.push(t),delete r.invalid[t.name],r.showErrors()}else{var s={};s[t.name]=i.message=$.isFunction(u)?u(e):u,r.invalid[t.name]=!0,r.showErrors(s)}r.showErrors(r.errorMap),i.valid=a}),n!==!0?(r.settings.messages[t.name]||(r.settings.messages[t.name]={}),r.settings.messages[t.name].laravelValidation=u,!1):void 0)}),n},""),$.validator.addMethod("laravelValidationRemote",function(e,t,a){var r=!1,n=a[0][1],i=t.name,s=n[1],o=n[2];if($.each(a,function(e,t){r=r||t[3]}),!r&&this.optional(t))return"dependency-mismatch";var l,u,d=this.previousValue(t);this.settings.messages[t.name]||(this.settings.messages[t.name]={}),d.originalMessage=this.settings.messages[t.name].laravelValidationRemote,this.settings.messages[t.name].laravelValidationRemote=d.message;var h="string"==typeof h&&{url:h}||h;if(d.old===e)return d.valid;d.old=e,l=this,this.startRequest(t),u=$(l.currentForm).serializeArray(),u.push({name:"_jsvalidation",value:i}),u.push({name:"_jsvalidation_validate_all",value:o});var c=$(l.currentForm).attr("method");return $(l.currentForm).find('input[name="_method"]').length&&(c=$(l.currentForm).find('input[name="_method"]').val()),$.ajax($.extend(!0,{mode:"abort",port:"validate"+t.name,dataType:"json",data:u,context:l.currentForm,url:$(l.currentForm).attr("action"),type:c,beforeSend:function(e){if("get"!==$(l.currentForm).attr("method").toLowerCase()&&s)return e.setRequestHeader("X-XSRF-TOKEN",s)}},h)).always(function(a,r){var n,i,s,o;if("error"===r)o=!1,a=laravelValidation.helpers.parseErrorResponse(a);else{if("success"!==r)return;o=a===!0||"true"===a}l.settings.messages[t.name].laravelValidationRemote=d.originalMessage,o?(s=l.formSubmitted,l.prepareElement(t),l.formSubmitted=s,l.successList.push(t),delete l.invalid[t.name],l.showErrors()):(n={},i=a||l.defaultMessage(t,"remote"),n[t.name]=d.message=$.isFunction(i)?i(e):i[0],l.invalid[t.name]=!0,l.showErrors(n)),l.showErrors(l.errorMap),d.valid=o,l.stopRequest(t,o)}),"pending"},"")}},$(function(){laravelValidation.init()}),$.extend(!0,laravelValidation,{helpers:{numericRules:["Integer","Numeric"],fileinfo:function(e,t){var a=e.value;return t="undefined"!=typeof t?t:0,null!==e.files&&"undefined"!=typeof e.files[t]&&{file:a,extension:a.substr(a.lastIndexOf(".")+1),size:e.files[t].size/1024,type:e.files[t].type}},selector:function(e){var t=[];$.isArray(e)||(e=[e]);for(var a=0;a<e.length;a++)t.push("[name='"+e[a]+"']");return t.join()},hasNumericRules:function(e){return this.hasRules(e,this.numericRules)},hasRules:function(e,t){var a=!1;"string"==typeof t&&(t=[t]);var r=$.data(e.form,"validator"),n=[],i=r.arrayRulesCache;return e.name in i&&$.each(i[e.name],function(e,t){n.push(t)}),e.name in r.settings.rules&&n.push(r.settings.rules[e.name]),$.each(n,function(e,r){if("laravelValidation"in r)for(var n=r.laravelValidation,i=0;i<n.length;i++)if($.inArray(n[i][0],t)!==-1)return a=!0,!1}),a},strlen:function(e){return strlen(e)},getSize:function(e,t,a){return this.hasNumericRules(t)&&this.is_numeric(a)?parseFloat(a):$.isArray(a)?parseFloat(a.length):"file"===t.type?parseFloat(Math.floor(this.fileinfo(t).size)):parseFloat(this.strlen(a))},getLaravelValidation:function(e,t){var a=void 0;return $.each($.validator.staticRules(t),function(t,r){"laravelValidation"===t&&$.each(r,function(t,r){r[0]===e&&(a=r)})}),a},parseTime:function(e,t){var a=!1,r=new DateFormatter;if("object"===$.type(t)){var n=this.getLaravelValidation("DateFormat",t);t=void 0!==n?n[1][0]:null}return null==t?a=this.strtotime(e):(a=r.parseDate(e,t),a&&(a=Math.round(a.getTime()/1e3))),a},guessDate:function(e,t){var a=new DateFormatter;return a.guessDate(e,t)},strtotime:function(e,t){return strtotime(e,t)},is_numeric:function(e){return is_numeric(e)},arrayDiff:function(e,t){return array_diff(e,t)},dependentElement:function(e,t,a){var r=e.findByName(a);if(void 0!==r[0]&&e.settings.onfocusout){var n="blur";"SELECT"!==r[0].tagName&&"OPTION"!==r[0].tagName&&"checkbox"!==r[0].type&&"radio"!==r[0].type||(n="click");var i=".validate-laravelValidation";r.off(i).off(n+i+"-"+t.name).on(n+i+"-"+t.name,function(){$(t).valid()})}return r[0]},parseErrorResponse:function(e){var t=["Whoops, looks like something went wrong."];if("responseText"in e){var a=e.responseText.match(/<h1\s*>(.*)<\/h1\s*>/i);$.isArray(a)&&(t=[a[1]])}return t},escapeRegExp:function(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")},regexFromWildcard:function(e){var t=e.split("[*]");1===t.length&&t.push("");var a=t.map(function(e,t){return t%2===0?e+="[":e="]"+e,laravelValidation.helpers.escapeRegExp(e)});return new RegExp("^"+a.join(".*")+"$")}}}),$.extend(!0,laravelValidation,{helpers:{isTimezone:function(e){var t={africa:["abidjan","accra","addis_ababa","algiers","asmara","bamako","bangui","banjul","bissau","blantyre","brazzaville","bujumbura","cairo","casablanca","ceuta","conakry","dakar","dar_es_salaam","djibouti","douala","el_aaiun","freetown","gaborone","harare","johannesburg","juba","kampala","khartoum","kigali","kinshasa","lagos","libreville","lome","luanda","lubumbashi","lusaka","malabo","maputo","maseru","mbabane","mogadishu","monrovia","nairobi","ndjamena","niamey","nouakchott","ouagadougou","porto-novo","sao_tome","tripoli","tunis","windhoek"],america:["adak","anchorage","anguilla","antigua","araguaina","argentina/buenos_aires","argentina/catamarca","argentina/cordoba","argentina/jujuy","argentina/la_rioja","argentina/mendoza","argentina/rio_gallegos","argentina/salta","argentina/san_juan","argentina/san_luis","argentina/tucuman","argentina/ushuaia","aruba","asuncion","atikokan","bahia","bahia_banderas","barbados","belem","belize","blanc-sablon","boa_vista","bogota","boise","cambridge_bay","campo_grande","cancun","caracas","cayenne","cayman","chicago","chihuahua","costa_rica","creston","cuiaba","curacao","danmarkshavn","dawson","dawson_creek","denver","detroit","dominica","edmonton","eirunepe","el_salvador","fortaleza","glace_bay","godthab","goose_bay","grand_turk","grenada","guadeloupe","guatemala","guayaquil","guyana","halifax","havana","hermosillo","indiana/indianapolis","indiana/knox","indiana/marengo","indiana/petersburg","indiana/tell_city","indiana/vevay","indiana/vincennes","indiana/winamac","inuvik","iqaluit","jamaica","juneau","kentucky/louisville","kentucky/monticello","kralendijk","la_paz","lima","los_angeles","lower_princes","maceio","managua","manaus","marigot","martinique","matamoros","mazatlan","menominee","merida","metlakatla","mexico_city","miquelon","moncton","monterrey","montevideo","montreal","montserrat","nassau","new_york","nipigon","nome","noronha","north_dakota/beulah","north_dakota/center","north_dakota/new_salem","ojinaga","panama","pangnirtung","paramaribo","phoenix","port-au-prince","port_of_spain","porto_velho","puerto_rico","rainy_river","rankin_inlet","recife","regina","resolute","rio_branco","santa_isabel","santarem","santiago","santo_domingo","sao_paulo","scoresbysund","shiprock","sitka","st_barthelemy","st_johns","st_kitts","st_lucia","st_thomas","st_vincent","swift_current","tegucigalpa","thule","thunder_bay","tijuana","toronto","tortola","vancouver","whitehorse","winnipeg","yakutat","yellowknife"],antarctica:["casey","davis","dumontdurville","macquarie","mawson","mcmurdo","palmer","rothera","south_pole","syowa","vostok"],arctic:["longyearbyen"],asia:["aden","almaty","amman","anadyr","aqtau","aqtobe","ashgabat","baghdad","bahrain","baku","bangkok","beirut","bishkek","brunei","choibalsan","chongqing","colombo","damascus","dhaka","dili","dubai","dushanbe","gaza","harbin","hebron","ho_chi_minh","hong_kong","hovd","irkutsk","jakarta","jayapura","jerusalem","kabul","kamchatka","karachi","kashgar","kathmandu","khandyga","kolkata","krasnoyarsk","kuala_lumpur","kuching","kuwait","macau","magadan","makassar","manila","muscat","nicosia","novokuznetsk","novosibirsk","omsk","oral","phnom_penh","pontianak","pyongyang","qatar","qyzylorda","rangoon","riyadh","sakhalin","samarkand","seoul","shanghai","singapore","taipei","tashkent","tbilisi","tehran","thimphu","tokyo","ulaanbaatar","urumqi","ust-nera","vientiane","vladivostok","yakutsk","yekaterinburg","yerevan"],atlantic:["azores","bermuda","canary","cape_verde","faroe","madeira","reykjavik","south_georgia","st_helena","stanley"],australia:["adelaide","brisbane","broken_hill","currie","darwin","eucla","hobart","lindeman","lord_howe","melbourne","perth","sydney"],europe:["amsterdam","andorra","athens","belgrade","berlin","bratislava","brussels","bucharest","budapest","busingen","chisinau","copenhagen","dublin","gibraltar","guernsey","helsinki","isle_of_man","istanbul","jersey","kaliningrad","kiev","lisbon","ljubljana","london","luxembourg","madrid","malta","mariehamn","minsk","monaco","moscow","oslo","paris","podgorica","prague","riga","rome","samara","san_marino","sarajevo","simferopol","skopje","sofia","stockholm","tallinn","tirane","uzhgorod","vaduz","vatican","vienna","vilnius","volgograd","warsaw","zagreb","zaporozhye","zurich"],indian:["antananarivo","chagos","christmas","cocos","comoro","kerguelen","mahe","maldives","mauritius","mayotte","reunion"],pacific:["apia","auckland","chatham","chuuk","easter","efate","enderbury","fakaofo","fiji","funafuti","galapagos","gambier","guadalcanal","guam","honolulu","johnston","kiritimati","kosrae","kwajalein","majuro","marquesas","midway","nauru","niue","norfolk","noumea","pago_pago","palau","pitcairn","pohnpei","port_moresby","rarotonga","saipan","tahiti","tarawa","tongatapu","wake","wallis"],utc:[""]},a=e.split("/",2),r=a[0].toLowerCase(),n="";return a[1]&&(n=a[1].toLowerCase()),r in t&&(0===t[r].length||t[r].indexOf(n)!==-1)}}}),$.extend(!0,laravelValidation,{methods:{helpers:laravelValidation.helpers,jsRemoteTimer:0,Sometimes:function(){return!0},Bail:function(){return!0},Nullable:function(){return!0},Filled:function(e,t){return $.validator.methods.required.call(this,e,t,!0)},Required:function(e,t){return $.validator.methods.required.call(this,e,t)},RequiredWith:function(e,t,a){var r=this,n=!1,i=this;return $.each(a,function(e,a){var s=laravelValidation.helpers.dependentElement(i,t,a);n=n||void 0!==s&&$.validator.methods.required.call(r,i.elementValue(s),s,!0)}),!n||$.validator.methods.required.call(this,e,t,!0)},RequiredWithAll:function(e,t,a){var r=this,n=!0,i=this;return $.each(a,function(e,a){var s=laravelValidation.helpers.dependentElement(i,t,a);n=n&&void 0!==s&&$.validator.methods.required.call(r,i.elementValue(s),s,!0)}),!n||$.validator.methods.required.call(this,e,t,!0)},RequiredWithout:function(e,t,a){var r=this,n=!1,i=this;return $.each(a,function(e,a){var s=laravelValidation.helpers.dependentElement(i,t,a);n=n||void 0===s||!$.validator.methods.required.call(r,i.elementValue(s),s,!0)}),!n||$.validator.methods.required.call(this,e,t,!0)},RequiredWithoutAll:function(e,t,a){var r=this,n=!0,i=this;return $.each(a,function(e,a){var s=laravelValidation.helpers.dependentElement(i,t,a);n=n&&(void 0===s||!$.validator.methods.required.call(r,i.elementValue(s),s,!0))}),!n||$.validator.methods.required.call(this,e,t,!0)},RequiredIf:function(e,t,a){var r=laravelValidation.helpers.dependentElement(this,t,a[0]);if(void 0!==r){var n=String(this.elementValue(r));if("undefined"!=typeof n){var i=a.slice(1);if($.inArray(n,i)!==-1)return $.validator.methods.required.call(this,e,t,!0)}}return!0},RequiredUnless:function(e,t,a){var r=laravelValidation.helpers.dependentElement(this,t,a[0]);if(void 0!==r){var n=String(this.elementValue(r));if("undefined"!=typeof n){var i=a.slice(1);if($.inArray(n,i)!==-1)return!0}}return $.validator.methods.required.call(this,e,t,!0)},Confirmed:function(e,t,a){return laravelValidation.methods.Same.call(this,e,t,a)},Same:function(e,t,a){var r=laravelValidation.helpers.dependentElement(this,t,a[0]);return void 0!==r&&String(e)===String(this.elementValue(r))},InArray:function(e,t,a){if("undefined"==typeof a[0])return!1;for(var r=this.elements(),n=!1,i=laravelValidation.helpers.regexFromWildcard(a[0]),s=0;s<r.length;s++){var o=r[s].name;if(o.match(i)){var l=laravelValidation.methods.Same.call(this,e,t,[o]);n=n||l}}return n},Distinct:function(e,t,a){if("undefined"==typeof a[0])return!1;for(var r=this.elements(),n=!1,i=laravelValidation.helpers.regexFromWildcard(a[0]),s=0;s<r.length;s++){var o=r[s].name;if(o!==t.name&&o.match(i)){var l=laravelValidation.methods.Same.call(this,e,t,[o]);n=n||l}}return!n},Different:function(e,t,a){return!laravelValidation.methods.Same.call(this,e,t,a)},Accepted:function(e){var t=new RegExp("^(?:(yes|on|1|true))$","i");return t.test(e)},Array:function(e){return $.isArray(e)},Boolean:function(e){var t=new RegExp("^(?:(true|false|1|0))$","i");return t.test(e)},Integer:function(e){var t=new RegExp("^(?:-?\\d+)$","i");return t.test(e)},Numeric:function(e,t){return $.validator.methods.number.call(this,e,t,!0)},String:function(e){return"string"==typeof e},Digits:function(e,t,a){return $.validator.methods.number.call(this,e,t,!0)&&e.length===parseInt(a,10)},DigitsBetween:function(e,t,a){return $.validator.methods.number.call(this,e,t,!0)&&e.length>=parseFloat(a[0])&&e.length<=parseFloat(a[1])},Size:function(e,t,a){return laravelValidation.helpers.getSize(this,t,e)===parseFloat(a[0])},Between:function(e,t,a){return laravelValidation.helpers.getSize(this,t,e)>=parseFloat(a[0])&&laravelValidation.helpers.getSize(this,t,e)<=parseFloat(a[1])},Min:function(e,t,a){return laravelValidation.helpers.getSize(this,t,e)>=parseFloat(a[0])},Max:function(e,t,a){return laravelValidation.helpers.getSize(this,t,e)<=parseFloat(a[0])},In:function(e,t,a){if($.isArray(e)&&laravelValidation.helpers.hasRules(t,"Array")){var r=laravelValidation.helpers.arrayDiff(e,a);return 0===Object.keys(r).length}return a.indexOf(e.toString())!==-1},NotIn:function(e,t,a){return a.indexOf(e.toString())===-1},Ip:function(e){return/^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(e)||/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(e)},Email:function(e,t){return $.validator.methods.email.call(this,e,t,!0)},Url:function(e,t){return $.validator.methods.url.call(this,e,t,!0)},File:function(e,t){return!(window.File&&window.FileReader&&window.FileList&&window.Blob)||"files"in t&&t.files.length>0},Mimes:function(e,t,a){if(!(window.File&&window.FileReader&&window.FileList&&window.Blob))return!0;var r=$.map(a,function(e){return e.toLowerCase()}),n=laravelValidation.helpers.fileinfo(t);return n!==!1&&r.indexOf(n.extension.toLowerCase())!==-1},Mimetypes:function(e,t,a){if(!(window.File&&window.FileReader&&window.FileList&&window.Blob))return!0;var r=$.map(a,function(e){return e.toLowerCase()}),n=laravelValidation.helpers.fileinfo(t);return n!==!1&&r.indexOf(n.type.toLowerCase())!==-1},Image:function(e,t){return laravelValidation.methods.Mimes.call(this,e,t,["jpg","png","gif","bmp","svg","jpeg"])},Dimensions:function(value,element,params,callback){if(!(window.File&&window.FileReader&&window.FileList&&window.Blob))return!0;if(null===element.files||"undefined"==typeof element.files[0])return!1;var fr=new FileReader;return fr.onload=function(){var img=new Image;img.onload=function(){var height=parseFloat(img.naturalHeight),width=parseFloat(img.naturalWidth),ratio=width/height,notValid=params.width&&parseFloat(params.width!==width)||params.min_width&&parseFloat(params.min_width)>width||params.max_width&&parseFloat(params.max_width)<width||params.height&&parseFloat(params.height)!==height||params.min_height&&parseFloat(params.min_height)>height||params.max_height&&parseFloat(params.max_height)<height||params.ratio&&ratio!==parseFloat(eval(params.ratio));callback(!notValid)},img.onerror=function(){callback(!1)},img.src=fr.result},fr.readAsDataURL(element.files[0]),"pending"},Alpha:function(e){if("string"!=typeof e)return!1;var t=new RegExp("^(?:^[a-zà-ü]+$)$","i");return t.test(e)},AlphaNum:function(e){if("string"!=typeof e)return!1;var t=new RegExp("^(?:^[a-z0-9à-ü]+$)$","i");return t.test(e)},AlphaDash:function(e){if("string"!=typeof e)return!1;var t=new RegExp("^(?:^[a-z0-9à-ü_-]+$)$","i");return t.test(e)},Regex:function(e,t,a){var r=["x","s","u","X","U","A"],n=new RegExp("^(?:/)(.*\\/?[^/]*|[^/]*)(?:/)([gmixXsuUAJ]*)?$"),i=a[0].match(n);if(null===i)return!1;var s=[];if(void 0!==i[2]){s=i[2].split("");for(var o=0;o<s.length<o;o++)if(r.indexOf(s[o])!==-1)return!0}var l=new RegExp("^(?:"+i[1]+")$",s.join());return l.test(e)},Date:function(e){return laravelValidation.helpers.strtotime(e)!==!1},DateFormat:function(e,t,a){return laravelValidation.helpers.parseTime(e,a[0])!==!1},Before:function(e,t,a){var r=parseFloat(a);if(isNaN(r)){var n=laravelValidation.helpers.dependentElement(this,t,a);if(void 0===n)return!1;r=laravelValidation.helpers.parseTime(this.elementValue(n),n)}var i=laravelValidation.helpers.parseTime(e,t);return i!==!1&&i<r},After:function(e,t,a){var r=parseFloat(a);if(isNaN(r)){var n=laravelValidation.helpers.dependentElement(this,t,a);if(void 0===n)return!1;r=laravelValidation.helpers.parseTime(this.elementValue(n),n)}var i=laravelValidation.helpers.parseTime(e,t);return i!==!1&&i>r},Timezone:function(e){return laravelValidation.helpers.isTimezone(e)},Json:function(e){var t=!0;try{JSON.parse(e)}catch(a){t=!1}return t}}});
\ No newline at end of file
diff --git a/resources/views/activity/index.blade.php b/resources/views/activity/index.blade.php
index b9a8979..df7a421 100644
--- a/resources/views/activity/index.blade.php
+++ b/resources/views/activity/index.blade.php
@@ -37,7 +37,8 @@
                         <span class="glyphicon glyphicon-search"></span>
                     </button>
                     @if (Input::has('search') && Input::get('search') != '')
-                        <a href="{{ route('activity.index') }}" class="btn btn-danger" type="button">
+                        <a href="{{ isset($adminView) ? route('activity.index') : route('profile.activity') }}"
+                           class="btn btn-danger" type="button">
                             <span class="glyphicon glyphicon-remove"></span>
                         </a>
                     @endif
diff --git a/resources/views/user/view.blade.php b/resources/views/user/view.blade.php
index 6f8a588..6fd44db 100644
--- a/resources/views/user/view.blade.php
+++ b/resources/views/user/view.blade.php
@@ -77,7 +77,7 @@
                         <td>{{ $user->present()->fullAddress }}</td>
                     </tr>
                     <tr>
-                        <td>@lang('app.last_logged_in')'</td>
+                        <td>@lang('app.last_logged_in')</td>
                         <td>{{ $user->present()->lastLogin }}</td>
                     </tr>
                     </tbody>
diff --git a/resources/views/vendor/jsvalidation/bootstrap.php b/resources/views/vendor/jsvalidation/bootstrap.php
index 572e512..906332e 100644
--- a/resources/views/vendor/jsvalidation/bootstrap.php
+++ b/resources/views/vendor/jsvalidation/bootstrap.php
@@ -15,9 +15,14 @@
                 }
             },
             highlight: function(element) {
-                $(element).closest('.form-group').addClass('has-error'); // add the Bootstrap error class to the control group
+                $(element).closest('.form-group').removeClass('has-success').addClass('has-error'); // add the Bootstrap error class to the control group
             },
 
+            <?php if (isset($validator['ignore']) && is_string($validator['ignore'])): ?>
+
+            ignore: "<?php echo $validator['ignore']; ?>",
+            <?php endif; ?>
+
             /*
              // Uncomment this to mark as validated non required fields
              unhighlight: function(element) {
diff --git a/storage/settings.json b/storage/settings.json
index 2faddeb..9a6cc28 100644
--- a/storage/settings.json
+++ b/storage/settings.json
@@ -1 +1 @@
-{"remember_me":true,"notifications_signup_email":true,"forgot_password":true,"login_reset_token_lifetime":"30","throttle_enabled":true,"throttle_attempts":10,"throttle_lockout_time":2,"reg_enabled":false,"reg_email_confirmation":true,"2fa":{"enabled":true},"app_name":"foo","registration":{"captcha":{"enabled":false}},"tos":false,"captcha":{"enabled":false}}
\ No newline at end of file
+{"remember_me":true,"notifications_signup_email":true,"forgot_password":true,"login_reset_token_lifetime":"30","throttle_enabled":true,"throttle_attempts":3,"throttle_lockout_time":2,"reg_enabled":false,"reg_email_confirmation":true,"2fa":{"enabled":true},"app_name":"foo","registration":{"captcha":{"enabled":false}},"tos":false,"captcha":{"enabled":false}}
\ No newline at end of file
diff --git a/tests/Feature/FunctionalTestCase.php b/tests/Feature/FunctionalTestCase.php
index a6e76c4..a3e9015 100644
--- a/tests/Feature/FunctionalTestCase.php
+++ b/tests/Feature/FunctionalTestCase.php
@@ -3,6 +3,7 @@
 namespace Tests\Feature;
 
 use DB;
+use Illuminate\Foundation\Testing\RefreshDatabase;
 use Schema;
 use Settings;
 use Tests\TestCase;
@@ -13,7 +14,8 @@ use Mockery as m;
 
 class FunctionalTestCase extends TestCase
 {
-    use \Illuminate\Foundation\Testing\Concerns\InteractsWithDatabase;
+    use \Illuminate\Foundation\Testing\Concerns\InteractsWithDatabase,
+        RefreshDatabase;
 
     protected $seed = true;
 
diff --git a/tests/Feature/Http/Controllers/Api/Auth/AuthControllerTest.php b/tests/Feature/Http/Controllers/Api/Auth/AuthControllerTest.php
index 11f0869..683e429 100644
--- a/tests/Feature/Http/Controllers/Api/Auth/AuthControllerTest.php
+++ b/tests/Feature/Http/Controllers/Api/Auth/AuthControllerTest.php
@@ -3,6 +3,7 @@
 namespace Tests\Feature\Http\Controllers\Api\Auth;
 
 use Carbon\Carbon;
+use Illuminate\Foundation\Testing\RefreshDatabase;
 use Tests\Feature\ApiTestCase;
 use Tests\MailTrap;
 use Vanguard\Services\Auth\Api\Token;
@@ -23,6 +24,7 @@ class AuthControllerTest extends ApiTestCase
         $user = factory(User::class)->create($credentials);
 
         $this->postJson("/api/login", $credentials);
+        $this->assertResponseOk();
 
         $token = Token::where('user_id', $user->id)->first();
 
diff --git a/tests/Feature/Http/Controllers/Web/ProfileControllerTest.php b/tests/Feature/Http/Controllers/Web/ProfileControllerTest.php
index 772353a..aff0b4f 100644
--- a/tests/Feature/Http/Controllers/Web/ProfileControllerTest.php
+++ b/tests/Feature/Http/Controllers/Web/ProfileControllerTest.php
@@ -12,6 +12,7 @@ use Vanguard\Events\User\UpdatedProfileDetails;
 use Vanguard\Role;
 use Vanguard\Support\Enum\UserStatus;
 use Carbon\Carbon;
+use Vanguard\User;
 
 class ProfileControllerTest extends FunctionalTestCase
 {
diff --git a/webpack.mix.js b/webpack.mix.js
index bfa7da0..0452ebe 100644
--- a/webpack.mix.js
+++ b/webpack.mix.js
@@ -1,4 +1,4 @@
-const { mix } = require('laravel-mix');
+let mix = require('laravel-mix');
 
 /*
  |--------------------------------------------------------------------------
